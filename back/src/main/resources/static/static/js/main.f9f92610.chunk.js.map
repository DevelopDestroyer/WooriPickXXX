{"version":3,"sources":["component/Rending/DataModel.ts","component/Rending/RendingComponent.tsx","recoil/index.ts","recoil/Session.ts","page/SigninPage.tsx","page/MainPage.tsx","component/Signup/DataModel.ts","component/Signup/SignupAccountComponent.tsx","component/Signup/SignupProfileComponent.tsx","page/SignupPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rendingData","title","first","second","description","highLight","RendingComponent","props","index","length","className","style","overflowX","onClick","onMoveButtonClick","src","width","persistAtom","recoilPersist","key","storage","localStorage","IsSplashIndex","atom","default","effects_UNSTABLE","SignUpInfro","accNumber","cellNumber","nickName","realName","IsSplashSkipSelector","selector","get","useStyles","makeStyles","imgContainer","bodyReplace","zIndex","position","height","SigninPage","classes","history","useHistory","push","backgroundColor","border","MainPage","useRecoilState","splashIndex","setSplashIndex","isSplashSkip","useRecoilValue","move","MainRendingData","SignupAccountComponent","onBackClick","type","ref","input","focus","textAlign","marginRight","href","SignupProfileComponent","console","log","defaultValue","buttonDisable","value","onChange","event","onInpuChange","target","SignupPage","signupData","setSignupData","restRecoil","useResetRecoilState","useState","currentIndex","setCurrentIndex","isAccSeq","setIsAccSeq","inputText","data","parseData","onNextClick","replace","App","exact","path","component","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9f92610.chunk.js","sourcesContent":["interface RenderComponentInterface {\r\n    title: { first: string; second: string };\r\n    description: string[];\r\n    highLight: string;\r\n}\r\n\r\nexport const rendingData: Array<RenderComponentInterface> = [\r\n    {\r\n        title: { first: '내맘대로', second: '혜택고르기!' },\r\n        description: ['정해진 틀에 맞춰서', '혜택받기는 싫어!'],\r\n        highLight: '내가 관심있는 카테고리 대로 혜택을!',\r\n    },\r\n    {\r\n        title: { first: '나는 소비하면서', second: '사회까지 생각한다!' },\r\n        description: ['환경, 유기견, 소상공인', '저소득층, 동물보호...'],\r\n        highLight: '작은 소비 하나하나 모여 사회를 개선!',\r\n    },\r\n    {\r\n        title: { first: '내가 이 골목 혜택왕!', second: '친구들과 혜택대결' },\r\n        description: ['누가 누가', '더 많이 혜택을 모았나?'],\r\n        highLight: '여기 모여라! 친구들끼리 혜택 대결!',\r\n    },\r\n    {\r\n        title: { first: '혜택을 모아모아', second: '기부까지?!' },\r\n        description: [\r\n            '혜택받은 금액을 인출하거나',\r\n            '원하는 곳에 기부할 수 있지!',\r\n        ],\r\n        highLight: \"우리은행에서 '모인 기부액의 2배를' 기부!\",\r\n    },\r\n];\r\n","import React from 'react';\r\nimport { rendingData } from './DataModel';\r\n\r\nexport interface RenderingPageProps {\r\n    index: number;\r\n    onMoveButtonClick: (index: number, move: number) => void;\r\n}\r\n\r\nconst RendingComponent: React.FC<RenderingPageProps> = (\r\n    props: RenderingPageProps\r\n) => {\r\n    //rendingData[id];\r\n    if (props.index >= rendingData.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const onNextClick = () => {\r\n        props.onMoveButtonClick(props.index, 1);\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        props.onMoveButtonClick(props.index, -1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mg_t10\" style={{ overflowX: 'visible' }}>\r\n            <div\r\n                className={`back_div ${props.index === 0 ? 'hide' : ''}`}\r\n                onClick={onBackClick}\r\n            >\r\n                <img src=\"/images/ICON_back.png\" />\r\n            </div>\r\n            <div>\r\n                <p className=\"rd_posi_1 txt_30\">\r\n                    {rendingData[props.index].title.first}\r\n                </p>\r\n                <p className=\"rd_posi_2 txt_30 txt_b\">\r\n                    {rendingData[props.index].title.second}\r\n                </p>\r\n\r\n                <p className=\"rd_posi_3 txt_18\">\r\n                    {rendingData[props.index].description[0]}\r\n                    <br />\r\n                    {rendingData[props.index].description[1]}\r\n                </p>\r\n                <div\r\n                    className=\"txt_back_highlight\"\r\n                    style={{ width: '276px' }}\r\n                />\r\n                <p className=\"rd_posi_4 txt_18 txt_b\">\r\n                    {rendingData[props.index].highLight}\r\n                </p>\r\n            </div>\r\n            <div className=\"pd_b30 rd_posi_img\">\r\n                <p className=\"txt_center\">\r\n                    <img\r\n                        className=\"img_rending\"\r\n                        src={`/images/rending_${props.index + 1}.png`}\r\n                    />\r\n                </p>\r\n            </div>\r\n            <div className=\"btn_bottom bg_primaryblue\" onClick={onNextClick}>\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">다음</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RendingComponent;\r\n","import { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'recoil-persist', // configuration stay the same too\r\n    storage: localStorage\r\n})\r\n\r\nexport {\r\n    persistAtom\r\n}","import { atom, selector } from 'recoil';\r\nimport { SignupDataInterface } from '../component/Signup/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const IsLoginState = atom<boolean>({\r\n    key: 'IsLoginState',\r\n    default: false,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const IsSplashIndex = atom<number>({\r\n    key: 'IsSplashIndex',\r\n    default: 0,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const SignUpInfro = atom<SignupDataInterface>({\r\n    key: 'SignUpInfro',\r\n    default: {\r\n        accNumber: '',\r\n        cellNumber: '',\r\n        nickName: '',\r\n        realName: '',\r\n    },\r\n});\r\n\r\nexport const IsSplashSkipSelector = selector({\r\n    key: 'IsSplashSkipSelector',\r\n    get: ({ get }) => get(IsSplashIndex) === -1,\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    imgContainer: {\r\n        width: '100px',\r\n    },\r\n    bodyReplace: {\r\n        zIndex: -1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst SigninPage: React.FC = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const onClickSignup = () => {\r\n        history.push('/signup');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`bg_primaryblue ${classes.bodyReplace}`} />\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt pd_t60\">\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            style={{ width: '100px' }}\r\n                            className={`pd_t130 ${classes.imgContainer}`}\r\n                            src=\"images/Logo.png\"\r\n                        />\r\n                    </p>\r\n                    <p className=\"txt_24 txt_wh txt_center\">환영합니다!</p>\r\n                </div>\r\n\r\n                <div className=\"login_btn\">\r\n                    <div\r\n                        onClick={onClickSignup}\r\n                        style={{ backgroundColor: 'white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_primaryBlue txt_center pd_t16 txt_b\">\r\n                            혜택통 첫달 무료 체험하기\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"mg_t10\"\r\n                        style={{ border: '1px solid white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_wh txt_center pd_t16\">\r\n                            기존 사용자 로그인\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SigninPage;\r\n","import React from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { rendingData as MainRendingData } from '../component/Rending/DataModel';\r\nimport RendingPage from '../component/Rending/RendingComponent';\r\nimport { IsSplashIndex, IsSplashSkipSelector } from '../recoil/Session';\r\nimport SigninPage from './SigninPage';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [splashIndex, setSplashIndex] = useRecoilState(IsSplashIndex);\r\n    const isSplashSkip = useRecoilValue(IsSplashSkipSelector);\r\n\r\n    const onMoveButtonClick = (index: number, move: number) => {\r\n        if (index + move >= MainRendingData.length) {\r\n            setSplashIndex(-1);\r\n        } else if (index + move === -1) {\r\n            return;\r\n        } else {\r\n            setSplashIndex(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSplashSkip ? (\r\n                <SigninPage />\r\n            ) : (\r\n                <RendingPage\r\n                    index={splashIndex}\r\n                    onMoveButtonClick={onMoveButtonClick}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","interface SignupProfileInterface {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SignupDataInterface {\r\n    realName: string;\r\n    nickName: string;\r\n    cellNumber: string;\r\n    accNumber: string;\r\n}\r\n\r\nexport const rendingData: Array<SignupProfileInterface> = [\r\n    {\r\n        title: '이름을 알려주세요.',\r\n        description: '이름',\r\n    },\r\n    {\r\n        title: '닉네임을 정해주세요.',\r\n        description: '닉네임',\r\n    },\r\n    {\r\n        title: '휴대폰번호를 입력하세요.',\r\n        description: '휴대폰번호',\r\n    },\r\n];\r\n","import React from 'react';\r\n\r\nexport interface RenderingPageProps {\r\n    onBackClick: () => void;\r\n    onNextClick: () => void;\r\n}\r\n\r\nconst SignupAccountComponent: React.FC<RenderingPageProps> = (\r\n    props: RenderingPageProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <div className=\"toptitle_div bg_wh\">\r\n                <div className=\"container pd_t10\">\r\n                    <div className=\"back_div\" onClick={props.onBackClick}>\r\n                        <img src=\"/images/ICON_back.png\" />\r\n                    </div>\r\n\r\n                    <p className=\"txt_24 txt_b mg_t10\">혜택통 만들기</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div style={{ height: '700px' }} className=\"container mg_t30\">\r\n                    <p className=\"txt_20 txt_b\">\r\n                        본인의 우리은행 계좌번호를 알려주세요.\r\n                    </p>\r\n\r\n                    <div className=\"box_div mg_t20 bg_wh\">\r\n                        <table style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"pd_t16 mg_l16\">\r\n                                            <p className=\"txt_14 txt_gray1\">\r\n                                                계좌번호\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                ref={(input) => input?.focus()}\r\n                                                className=\"txt_18\"\r\n                                            />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td style={{ textAlign: 'right' }}>\r\n                                        <div className=\"\">\r\n                                            <button\r\n                                                className=\"btn_blueBorder\"\r\n                                                style={{ marginRight: '16px' }}\r\n                                            >\r\n                                                1원 인증\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <p className=\"mg_t30 txt_14 txt_center\">\r\n                        계좌 확인을 위해 계좌번호로 1원을 보낼게요\r\n                        <br />\r\n                        입금명을 확인해 주세요\r\n                    </p>\r\n\r\n                    <div className=\"box_div mg_t30 bg_wh\">\r\n                        <table style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"pd_t16 mg_l16\">\r\n                                            <p className=\"txt_14 txt_gray1\">\r\n                                                입금명을 입력해주세요\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                ref={(input) => input?.focus()}\r\n                                                className=\"txt_18\"\r\n                                            />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td style={{ textAlign: 'right' }}>\r\n                                        <div className=\"\">\r\n                                            <button\r\n                                                className=\"btn_blueBorder\"\r\n                                                style={{ marginRight: '16px' }}\r\n                                            >\r\n                                                입력\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <a href=\"0.2_join_5.html\">\r\n                        <div className=\"btn_bottom bg_gray3\">\r\n                            <p className=\"p_btn_bottom txt_wh txt_b\">다음</p>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAccountComponent;\r\n","import React from 'react';\r\nimport { rendingData } from './DataModel';\r\n\r\nexport interface RenderingPageProps {\r\n    index: number;\r\n    defaultValue: string;\r\n    onMoveButtonClick: (index: number, move: number) => void;\r\n    onInpuChange: (index: number, data: string) => void;\r\n}\r\n\r\nconst SignupProfileComponent: React.FC<RenderingPageProps> = (\r\n    props: RenderingPageProps\r\n) => {\r\n    //rendingData[id];\r\n    if (props.index >= rendingData.length) {\r\n        return <></>;\r\n    }\r\n    console.log(`SignupProfile Called ${props.defaultValue}`);\r\n\r\n    const buttonDisable = props.defaultValue === '';\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <div className=\"toptitle_div bg_wh\">\r\n                <div className=\"container pd_t10\">\r\n                    <div\r\n                        className=\"back_div\"\r\n                        onClick={() => props.onMoveButtonClick(props.index, -1)}\r\n                    >\r\n                        <img src=\"/images/ICON_back.png\" />\r\n                    </div>\r\n                    <p className=\"txt_24 txt_b mg_t10\">혜택통 만들기</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div style={{ height: '700px' }} className=\"container mg_t30\">\r\n                    <p className=\"txt_20 txt_b\">\r\n                        {rendingData[props.index].title}\r\n                    </p>\r\n\r\n                    <div className=\"box_div mg_t20 bg_wh\">\r\n                        <div className=\"pd_t16 mg_l16\">\r\n                            <p className=\"txt_14 txt_gray1\">\r\n                                {rendingData[props.index].description}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={props.defaultValue}\r\n                                onChange={(event) =>\r\n                                    props.onInpuChange(\r\n                                        props.index,\r\n                                        event.target.value\r\n                                    )\r\n                                }\r\n                                ref={(input) => input?.focus()}\r\n                                className=\"txt_18\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            buttonDisable ||\r\n                                props.onMoveButtonClick(props.index, 1);\r\n                        }}\r\n                        className={`btn_bottom ${\r\n                            buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                        }`}\r\n                    >\r\n                        <p className=\"p_btn_bottom txt_wh txt_b\">다음</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupProfileComponent;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilState, useResetRecoilState } from 'recoil';\r\nimport {\r\n    rendingData,\r\n    SignupDataInterface,\r\n} from '../component/Signup/DataModel';\r\nimport SignupAccountComponent from '../component/Signup/SignupAccountComponent';\r\nimport SignupProfileComponent from '../component/Signup/SignupProfileComponent';\r\nimport { SignUpInfro } from '../recoil/Session';\r\n\r\nconst parseData = (data: SignupDataInterface, index: number): string => {\r\n    switch (index) {\r\n        case 0:\r\n            return data.realName;\r\n        case 1:\r\n            return data.nickName;\r\n        case 2:\r\n            return data.cellNumber;\r\n        case 3:\r\n            return data.accNumber;\r\n    }\r\n    return '';\r\n};\r\n\r\nconst SignupPage: React.FC = (props) => {\r\n    const history = useHistory();\r\n    const [signupData, setSignupData] = useRecoilState(SignUpInfro);\r\n    const restRecoil = useResetRecoilState(SignUpInfro);\r\n    const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n    const [isAccSeq, setIsAccSeq] = useState<boolean>(false);\r\n\r\n    const inputText = parseData(signupData, currentIndex);\r\n\r\n    const onChange = (index: number, data: string) => {\r\n        if (isAccSeq) {\r\n            setSignupData({ ...signupData, accNumber: data });\r\n        } else {\r\n            switch (index) {\r\n                case 0:\r\n                    setSignupData({ ...signupData, realName: data });\r\n                    break;\r\n                case 1:\r\n                    setSignupData({ ...signupData, nickName: data });\r\n                    break;\r\n                case 2:\r\n                    setSignupData({ ...signupData, cellNumber: data });\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const accMoveBack = () => {\r\n        setIsAccSeq(false);\r\n    };\r\n\r\n    const accMoveNext = () => {\r\n        // signupSeq\r\n        // setIsAccSeq(false);\r\n        // setCurrentIndex(rendingData.length - 1);\r\n    };\r\n\r\n    const profileMove = (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            restRecoil();\r\n            history.replace('/mainpage');\r\n            return;\r\n        }\r\n\r\n        if (index + move >= rendingData.length) {\r\n            setIsAccSeq(true);\r\n        } else {\r\n            setCurrentIndex(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isAccSeq ? (\r\n                <SignupAccountComponent\r\n                    onBackClick={accMoveBack}\r\n                    onNextClick={accMoveNext}\r\n                />\r\n            ) : (\r\n                <SignupProfileComponent\r\n                    defaultValue={inputText}\r\n                    index={currentIndex}\r\n                    onMoveButtonClick={profileMove}\r\n                    onInpuChange={onChange}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport './basic.css';\r\nimport MainPage from './page/MainPage';\r\nimport SignupPage from './page/SignupPage';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/mainpage\" component={MainPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n\r\n                <Redirect from=\"*\" to=\"/mainpage\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n// <!--<AuthRouteGuard exact path=\"/\" component={HomePage} /> -->\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}