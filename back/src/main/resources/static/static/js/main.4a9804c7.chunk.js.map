{"version":3,"sources":["component/Common/BottomBar.tsx","recoil/index.ts","recoil/Session.ts","component/AuthRoute.tsx","component/AuthRouteGuard.tsx","component/Benefit/BenefitComponent.tsx","component/Common.ts","http/index.ts","component/Signup/DataModel.ts","recoil/Giving.ts","component/Common/FingerDialog.tsx","component/Category/DataModel.ts","component/Giving/DataModel.ts","component/Common/util.ts","component/Common/HeaderAction.tsx","component/Giving/GivingCommon.tsx","component/Giving/GivingAmountComponent.tsx","component/Common/Loading.tsx","component/Giving/GivingComponentDonationMember.tsx","component/Giving/GivingComponentDonationPie.tsx","component/Giving/GivingComponentStatus.tsx","component/Giving/GivingComponent.tsx","component/Giving/GivingFinishComponent.tsx","component/Common/SelectList.tsx","component/Giving/GivingSelectComponent.tsx","component/Common/HeaderDefault.tsx","component/Home/HCBenefit.tsx","component/Home/BenefitList.tsx","component/Home/DataModel.ts","component/Home/HCPoint.tsx","component/Home/HCStatus.tsx","component/Home/HomeComponent.tsx","component/Setting/SettingComponent.tsx","component/Together/TogetherComponent.tsx","page/GivingPage.tsx","page/HomePage.tsx","component/Rending/DataModel.ts","component/Rending/RendingComponent.tsx","page/SigninPage.tsx","page/MainPage.tsx","component/Signup/SignupCommon.tsx","component/Signup/SignupAccountComponent.tsx","component/Signup/SignupBillingComponent.tsx","component/Signup/SignupCategoryComponent.tsx","component/Signup/SignupFinishComponent.tsx","component/Signup/SignupPasswordComponent.tsx","component/Signup/SignupProfileComponent.tsx","page/SignupPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DISPLAY_TYPE","persistAtom","recoilPersist","key","storage","localStorage","IsSplashSkip","atom","default","effects_UNSTABLE","SignUpProfileState","cellNumber","nickName","realName","SignUpAccNumState","SignUpCategoryState","CurrentUserState","name","nickname","phoneNumber","accountNumber","CurrentAccountState","point","accountMoney","CurrentUserCategoryState","CurrentUserTransactionState","AuthRoute","render","props","isLogin","children","component","others","to","pathname","Route","AuthRouteGuard","currentUser","useRecoilValue","BenefitComponent","commonSlickSettings","touchMove","dots","arrows","useStyles","makeStyles","defaultType","fontFamily","selectedType","color","BottomBarNav","classes","BottomNavigation","value","current","onChange","event","newValue","showLabels","BottomNavigationAction","selected","label","HOME","icon","BENEFIT","TOGETHER","SETTING","http","axios","create","baseURL","interceptors","request","use","config","console","log","error","Promise","reject","response","SIGNUP_TYPE","GivingSelectState","GivingAmountState","GivingResultState","isLoaded","donationRatioStatus","memberDTOs","totalDonationMoney","FingerDialog","onClose","open","handleOk","Dialog","Box","mt","mx","Typography","Button","onClick","className","CategoryStandInfo","id","COLOR_SET","GivingStandInfo","getCategoryNameFromId","target","find","eachId","getNumberString","number","toString","replace","HeaderAction","AppBar","position","Toolbar","style","alignItems","isLast","IconButton","onMoveClick","KeyboardArrowLeft","display","headerTitle","GivingCommon","dfColor","buttonLayout","backgroundColor","flexBasis","flexGrow","flexDirection","width","height","disableRipple","buttonDisable","disabled","buttonTitle","inputText","textAlign","GivingAmountComponent","origin","max","index","useRecoilState","givingAmount","setGivingAmount","givingSelect","userAccount","userInfo","useState","setOpen","a","post","userNickname","donationId","donationPoint","nextMove","TextField","root","marginLeft","helperText","Number","Loading","Grid","container","justify","CircularProgress","text","maxWidth","minWidth","whiteSpace","overflow","textOverflow","money","fontSize","GivingComponentDonationMember","donationMember","orderMember","slice","sort","d1","d2","getOrderMember","sortMemger","maxValueLen","minValueLen","length","getRage","start","end","Card","borderRadius","CardContent","map","eachMember","my","src","ml","GivingComponentDonationPie","sortData","donationStatus","filter","data","totalDonationCount","labels","Array","datasets","borderColor","forEach","eachData","push","getGivingNameFromId","options","maintainAspectRatio","responsive","plugins","legend","boxWidth","usePointStyle","animation","duration","type","moneyFont","GivingComponentStatus","GivingComponent","givingData","setGivingData","useEffect","get","then","res","GivingFinishComponent","mb","margin","SelectList","standardData","FormControlLabel","control","Checkbox","checkedIcon","checked","selectData","findIndex","select","GivingSelectComponent","currentTarget","HeaderDeafault","fontWeight","title","cardActionLayout","padding","justifyContent","CategoryIcon","HCPoint","category","setCategory","encodeURI","resCategory","categoryId","CardHeader","eachCategory","CardActions","variant","extractDate","date","c","Date","getMonth","getDate","getDay","BenefitList","arr","marginTop","companyName","totalBuyPrice","DummyTransactionData","userCategory","transaction","setTransaction","displaySet","setDisplaySet","includes","inline","HCStatus","history","useHistory","account","setAccount","HomeComponent","HCBenefit","SettingComponent","TogetherComponent","GivingPage","sliderRef","useRef","resetSelect","useResetRecoilState","resetAmount","onNextMove","goBack","slickGoTo","ref","homeRendering","HomePage","renderType","setCurrentRenderType","BottomBar","rendingData","first","second","description","highLight","imgPath","buttonOverride","RendingComponent","overflowX","isFirst","onMoveButtonClick","left","imgContainer","button","bodyReplace","zIndex","SigninPage","border","MainPage","isSplashSkip","setIsSplashSkip","move","MainRendingData","SignupCommonComponent","onCustomizeNextClick","ACDialog","SignupAccountComponent","isCert","setIsCert","tokenStr","setTokenStr","dialog","setDialog","complete","setComplete","SignupCommon","marginRight","placeholder","SignupBillingComponent","ACCategoryDialog","ACOverDialog","SignupCategoryComponent","suggestDialog","setSuggestDialog","overDialog","setOverDialog","item","SignupFinishComponent","SignupPasswordComponent","password","setPassword","showPassword","setShowPassword","setUserState","useSetRecoilState","signupProfile","currentCategory","resetProfile","resetAccNum","resetCategory","fingerDialog","setFingerDialog","signupFunction","signupData","signupCategory","benefitCategoryList","createRes","registRes","userRes","autoComplete","InputProps","endAdornment","InputAdornment","aria-label","onMouseDown","Visibility","VisibilityOff","SignupProfileComponent","profile","setProfile","parseData","inValid","setInValid","alreadyExist","SignupPage","items","onMove","App","exact","path","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","unstable_createMuiStrictModeTheme","ReactDOM","StrictMode","ThemeProvider","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.4a9804c7.chunk.js","sourcesContent":["import {\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport enum DISPLAY_TYPE {\r\n    HOME,\r\n    BENEFIT,\r\n    TOGETHER,\r\n    SETTING,\r\n}\r\n\r\ninterface BottomBarNavProps {\r\n    current: DISPLAY_TYPE;\r\n    onChange: (clickType: DISPLAY_TYPE) => void;\r\n}\r\n\r\nconst BottomBarNav: React.FC<BottomBarNavProps> = (\r\n    props: BottomBarNavProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (\r\n        event: React.ChangeEvent<any>,\r\n        newValue: DISPLAY_TYPE\r\n    ) => {\r\n        props.onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={props.current}\r\n            onChange={handleChange}\r\n            showLabels={true}\r\n        >\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"홈\"\r\n                value={DISPLAY_TYPE.HOME}\r\n                icon={<HomeIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"혜택찾기\"\r\n                value={DISPLAY_TYPE.BENEFIT}\r\n                icon={<StorefrontIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"투게더\"\r\n                value={DISPLAY_TYPE.TOGETHER}\r\n                icon={<PeopleIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"My\"\r\n                value={DISPLAY_TYPE.SETTING}\r\n                icon={<SettingsIcon />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default BottomBarNav;\r\n","import { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'recoil-persist', // configuration stay the same too\r\n    storage: localStorage\r\n})\r\n\r\nexport {\r\n    persistAtom\r\n}","import { atom } from 'recoil';\r\nimport { CategoryDataSet } from '../component/Category/DataModel';\r\nimport { TransactionSet } from '../component/Home/DataModel';\r\nimport { SignupProfileInfo } from '../component/Signup/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport interface UserInfo {\r\n    name: string;\r\n    nickname: string;\r\n    phoneNumber: string;\r\n    accountNumber: string;\r\n}\r\n\r\nexport interface UserAccount {\r\n    accountMoney: number;\r\n    point: number;\r\n}\r\n\r\nexport const IsSplashSkip = atom<boolean>({\r\n    key: 'IsSplashSkip',\r\n    default: false,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const SignUpProfileState = atom<SignupProfileInfo>({\r\n    key: 'SignUpProfileState',\r\n    default: {\r\n        cellNumber: '',\r\n        nickName: '',\r\n        realName: '',\r\n    },\r\n});\r\n\r\nexport const SignUpAccNumState = atom<string>({\r\n    key: 'SignUpAccNumState',\r\n    default: '',\r\n});\r\n\r\nexport const SignUpCategoryState = atom<CategoryDataSet[]>({\r\n    key: 'SignUpCategoryState',\r\n    default: [],\r\n});\r\n\r\nexport const CurrentUserState = atom<UserInfo>({\r\n    key: 'CurrentUserState',\r\n    default: {\r\n        name: '',\r\n        nickname: '',\r\n        phoneNumber: '',\r\n        accountNumber: '',\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentAccountState = atom<UserAccount>({\r\n    key: 'CurrentAccountState',\r\n    default: {\r\n        point: 0,\r\n        accountMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserCategoryState = atom<number[]>({\r\n    key: 'CurrentUserCategoryState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserTransactionState = atom<TransactionSet[]>({\r\n    key: 'CurrentUserTransactionState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport interface AuthRouteProps extends RouteProps {\r\n    isLogin: boolean;\r\n}\r\n\r\nclass AuthRoute extends Route<AuthRouteProps> {\r\n    render = () => {\r\n        const { isLogin, children, component, ...others } = this.props;\r\n        if (isLogin) {\r\n            return (\r\n                <Route {...others} component={component}>\r\n                    {children}\r\n                </Route>\r\n            );\r\n        } else {\r\n            return (\r\n                <Route\r\n                    {...others}\r\n                    render={() => <Redirect to={{ pathname: '/signin' }} />}\r\n                />\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { RouteProps } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../recoil/Session';\r\nimport AuthRoute from './AuthRoute';\r\n\r\nconst AuthRouteGuard: React.FC<RouteProps> = (props: RouteProps) => {\r\n    const currentUser = useRecoilValue(CurrentUserState);\r\n    return <AuthRoute isLogin={currentUser.nickname !== ''} {...props} />;\r\n};\r\n\r\nexport default AuthRouteGuard;\r\n","import React from 'react';\r\n\r\nconst BenefitComponent: React.FC = () => {\r\n    return <>this is benefit</>;\r\n};\r\n\r\nexport default BenefitComponent;\r\n","import { Settings } from 'react-slick';\r\n\r\nexport const commonSlickSettings: Settings = {\r\n    touchMove: false,\r\n    dots: false,\r\n    arrows: false,\r\n};\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst http = axios.create({\r\n  baseURL: 'http://localhost:8000',\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    console.log(`Reqeust Interceptor Called`);\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n  (config: AxiosResponse) => {\r\n    console.log(`Response Interceptor Called`);\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default http;\r\n","export enum SIGNUP_TYPE {\r\n    PROFILE,\r\n    ACCOUNT,\r\n    ADD_CATEGORY,\r\n    BILL_INFO,\r\n    PASSWORD,\r\n}\r\n\r\nexport interface SignupProfileInterface {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SignupComponentProps {\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\nexport interface SignupProfileInfo {\r\n    realName: string;\r\n    nickName: string;\r\n    cellNumber: string;\r\n}\r\n\r\nexport const rendingData: Array<SignupProfileInterface> = [\r\n    {\r\n        title: '이름을 알려주세요.',\r\n        description: '이름',\r\n    },\r\n    {\r\n        title: '닉네임을 정해주세요.',\r\n        description: '닉네임',\r\n    },\r\n    {\r\n        title: '휴대폰번호를 입력하세요.',\r\n        description: '휴대폰번호',\r\n    },\r\n];\r\n","import { atom } from 'recoil';\r\nimport { GivingDataSet, GivingResultInfo } from '../component/Giving/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const GivingSelectState = atom<GivingDataSet[]>({\r\n    key: 'GivingSelectState',\r\n    default: [],\r\n});\r\n\r\nexport const GivingAmountState = atom<number>({\r\n    key: 'GivingAmountState',\r\n    default: 0,\r\n});\r\n\r\nexport const GivingResultState = atom<GivingResultInfo>({\r\n    key: 'GivingResultState',\r\n    default: {\r\n        isLoaded: false,\r\n        donationRatioStatus: [],\r\n        memberDTOs: [],\r\n        totalDonationMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import { Box, Button, Dialog, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst FingerDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>지문등록 ㄱㄱㄱㄱ</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default FingerDialog;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface CategoryDataSet extends CategoryDataInfo {}\r\n\r\nexport const CategoryStandInfo: CategoryDataSet[] = [\r\n    {\r\n        id: 101,\r\n        name: '저플라스틱',\r\n    },\r\n    {\r\n        id: 102,\r\n        name: '저탄소',\r\n    },\r\n    {\r\n        id: 103,\r\n        name: '동물실험반대',\r\n    },\r\n    {\r\n        id: 104,\r\n        name: '결식아동',\r\n    },\r\n    {\r\n        id: 105,\r\n        name: '노인보호',\r\n    },\r\n    {\r\n        id: 106,\r\n        name: '장애인 복지',\r\n    },\r\n    {\r\n        id: 107,\r\n        name: '장애인이 만든 제품',\r\n    },\r\n    {\r\n        id: 108,\r\n        name: '구호물품',\r\n    },\r\n];\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface DonationCategory {\r\n    donationId: number;\r\n    totalDonationCount: number;\r\n}\r\n\r\nexport interface DonationMember {\r\n    nickname: string;\r\n    point: number;\r\n}\r\n\r\nexport interface GivingResultInfo {\r\n    isLoaded: boolean;\r\n    totalDonationMoney: number;\r\n    donationRatioStatus: DonationCategory[];\r\n    memberDTOs: DonationMember[];\r\n}\r\n\r\nexport interface GivingDataSet extends CategoryDataInfo {}\r\n\r\nexport const COLOR_SET = [\r\n    'rgba(255, 99, 132, 0.2)',\r\n    'rgba(54, 162, 235, 0.2)',\r\n    'rgba(255, 206, 86, 0.2)',\r\n    'rgba(75, 192, 192, 0.2)',\r\n    'rgba(153, 102, 255, 0.2)',\r\n    'rgba(255, 159, 64, 0.2)',\r\n    'rgba(246,219,111,0.2)',\r\n    'rgb(168,109,103)',\r\n];\r\n\r\nexport const GivingStandInfo: GivingDataSet[] = [\r\n    {\r\n        id: 201,\r\n        name: '친환경',\r\n    },\r\n    {\r\n        id: 202,\r\n        name: '동물보호',\r\n    },\r\n    {\r\n        id: 203,\r\n        name: '아동 / 노인',\r\n    },\r\n    {\r\n        id: 204,\r\n        name: '장애인',\r\n    },\r\n    {\r\n        id: 205,\r\n        name: '구호물품',\r\n    },\r\n];\r\n\r\nexport interface CommonInterface {\r\n    onMoveClick: (nextMove: number) => void;\r\n    index: number;\r\n}\r\n","import { CategoryStandInfo } from '../Category/DataModel';\r\nimport { GivingStandInfo } from '../Giving/DataModel';\r\n\r\nexport const getCategoryNameFromId = (id: number): string => {\r\n    const target = CategoryStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getGivingNameFromId = (id: number): string => {\r\n    const target = GivingStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getNumberString = (number: number): string => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n","import {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport interface HeaderActionProps {\r\n    isLast: boolean;\r\n    headerTitle: string;\r\n    onMoveClick: () => void;\r\n}\r\n\r\nconst HeaderAction: React.FC<HeaderActionProps> = (\r\n    props: HeaderActionProps\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar style={{ alignItems: 'center' }}>\r\n                {!props.isLast && (\r\n                    <IconButton\r\n                        onClick={props.onMoveClick}\r\n                        className=\"back_div\"\r\n                    >\r\n                        <KeyboardArrowLeft\r\n                            style={{\r\n                                display: 'block',\r\n                            }}\r\n                        />\r\n                    </IconButton>\r\n                )}\r\n\r\n                <Typography className=\"txt_24 txt_b\">\r\n                    {props.headerTitle}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderAction;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport HeaderAction from '../Common/HeaderAction';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport interface GivingCommonProps {\r\n    headerTitle: string;\r\n    isLast: boolean;\r\n    buttonTitle: string;\r\n    buttonDisable?: boolean;\r\n    onMoveClick: (offset: number) => void;\r\n}\r\n\r\ntype GivingCommonType = React.PropsWithChildren<GivingCommonProps>;\r\n\r\nconst GivingCommon: React.FC<GivingCommonType> = (props: GivingCommonType) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            <HeaderAction\r\n                isLast={props.isLast}\r\n                headerTitle={props.headerTitle}\r\n                onMoveClick={() => props.onMoveClick(-1)}\r\n            />\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => props.onMoveClick(1)}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">{props.buttonTitle}</p>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GivingCommon;\r\n","import { Box, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingAmountState, GivingSelectState } from '../../recoil/Giving';\r\nimport { CurrentAccountState, CurrentUserState } from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { getNumberString } from '../Common/util';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    inputText: {\r\n        '&>div>input': {\r\n            textAlign: 'center',\r\n        },\r\n        '&>p': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst isValid = (origin: number, max: number) => {\r\n    return 0 < origin && origin <= max;\r\n};\r\n\r\nconst GivingAmountComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const classes = useStyles();\r\n\r\n    const [givingAmount, setGivingAmount] = useRecoilState(GivingAmountState);\r\n    const givingSelect = useRecoilValue(GivingSelectState);\r\n    const userAccount = useRecoilValue(CurrentAccountState);\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setGivingAmount(Number(event.target.value));\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await http.post(`/api/trading/donation`, {\r\n            userNickname: userInfo.nickname,\r\n            donationId: givingSelect[0].id,\r\n            donationPoint: givingAmount,\r\n        });\r\n        setOpen(false);\r\n        onMoveClick(index + 1);\r\n    };\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={!isValid(givingAmount, userAccount.point)}\r\n            onMoveClick={(nextMove: number) => {\r\n                if (nextMove < 0) {\r\n                    onMoveClick(index + nextMove);\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n\r\n                // onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <FingerDialog open={open} onClose={onClose} />\r\n            <p className=\"txt_20\">기부하고 싶은</p>\r\n            <p className=\"txt_20 txt_b\">금액을 입력하세요.</p>\r\n            <Box mt=\"25px\">\r\n                <TextField\r\n                    classes={{\r\n                        root: classes.inputText,\r\n                    }}\r\n                    style={{\r\n                        width: '80%',\r\n                        marginLeft: '10%',\r\n                    }}\r\n                    helperText={`최대 ${getNumberString(\r\n                        userAccount.point\r\n                    )} 원 입금 가능`}\r\n                    onChange={onChange}\r\n                />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingAmountComponent;\r\n","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: '100%' }}\r\n        >\r\n            <CircularProgress\r\n                style={{\r\n                    height: '4rem',\r\n                    width: '4rem',\r\n                    color: '#62C3EB',\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { COLOR_SET, DonationMember } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        display: 'inline-block',\r\n        maxWidth: '55px',\r\n        minWidth: '50px',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'right',\r\n        overflow: 'hidden !important',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    money: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif\",\r\n        fontSize: '17px',\r\n    },\r\n}));\r\n\r\nconst MAX_SHOW_MEMBER = 8;\r\n\r\ninterface GivingComponentDonationMemberProps {\r\n    donationMember: DonationMember[];\r\n}\r\n\r\nconst getOrderMember = (donationMember: DonationMember[]) => {\r\n    return donationMember\r\n        .slice()\r\n        .sort((d1, d2) => {\r\n            return d2.point - d1.point;\r\n        })\r\n        .slice(0, MAX_SHOW_MEMBER);\r\n};\r\n\r\nconst getRage = (sortMemger: DonationMember[]): [number, number] => {\r\n    const maxValueLen = sortMemger[0].point;\r\n    const minValueLen = sortMemger[sortMemger.length - 1].point;\r\n\r\n    if (sortMemger.length >= 1) {\r\n        const max = maxValueLen * 1.1;\r\n        const min = minValueLen * 0.9;\r\n        return [min, max];\r\n    } else {\r\n        return [0, 0];\r\n    }\r\n};\r\n\r\nconst GivingComponentDonationMember: React.FC<GivingComponentDonationMemberProps> = ({\r\n    donationMember,\r\n}: GivingComponentDonationMemberProps) => {\r\n    const classes = useStyles();\r\n    const orderMember = getOrderMember(donationMember);\r\n    const [start, end] = getRage(orderMember);\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    지난 달 기부왕👍\r\n                </Typography>\r\n                <Box>\r\n                    <Grid>\r\n                        {orderMember.map((eachMember, index) => {\r\n                            return (\r\n                                <Box\r\n                                    display=\"flex\"\r\n                                    key={eachMember.nickname}\r\n                                    my=\"1.5rem\"\r\n                                >\r\n                                    <Box\r\n                                        width=\"1.5rem\"\r\n                                        height=\"2rem\"\r\n                                        position=\"relative\"\r\n                                    >\r\n                                        {index <= 2 && (\r\n                                            <img\r\n                                                src={`/images/ICON_ranking${\r\n                                                    index + 1\r\n                                                }.png`}\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Box flexGrow=\"1\" ml=\"0.5rem\">\r\n                                        <Box\r\n                                            mt=\"0.3rem\"\r\n                                            height=\"40%\"\r\n                                            width={`${\r\n                                                (eachMember.point /\r\n                                                    (end - start)) *\r\n                                                100\r\n                                            }%`}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    COLOR_SET[index],\r\n                                            }}\r\n                                        />\r\n                                        <Typography className={classes.money}>\r\n                                            {eachMember.point}원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Typography className={classes.text}>\r\n                                        {eachMember.nickname}\r\n                                    </Typography>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationMember;\r\n","import { Box, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getGivingNameFromId } from '../Common/util';\r\nimport { COLOR_SET, DonationCategory } from './DataModel';\r\n\r\ninterface GivingComponentDonationPieProps {\r\n    donationStatus: DonationCategory[];\r\n}\r\n\r\nconst GivingComponentDonationPie: React.FC<GivingComponentDonationPieProps> = ({\r\n    donationStatus,\r\n}: GivingComponentDonationPieProps) => {\r\n    const sortData = donationStatus\r\n        .filter((data) => data.totalDonationCount !== 0)\r\n        .sort((d1, d2) => {\r\n            return d2.totalDonationCount - d1.totalDonationCount;\r\n        });\r\n\r\n    const data = {\r\n        labels: new Array<string>(),\r\n        datasets: [\r\n            {\r\n                data: new Array<number>(),\r\n                backgroundColor: new Array<string>(),\r\n                borderColor: new Array<string>(),\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'right',\r\n                labels: {\r\n                    fontSize: 12,\r\n                    boxWidth: 12,\r\n                    usePointStyle: true,\r\n                },\r\n                onClick: null,\r\n            },\r\n        },\r\n        animation: {\r\n            duration: 0,\r\n        },\r\n    };\r\n\r\n    sortData.forEach((eachData, index) => {\r\n        data.labels.push(getGivingNameFromId(eachData.donationId));\r\n        data.datasets[0].data.push(eachData.totalDonationCount);\r\n        data.datasets[0].backgroundColor.push(COLOR_SET[index]);\r\n        data.datasets[0].borderColor.push('#00000000');\r\n    });\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">기부 현황</Typography>\r\n                <Box mt=\"1rem\">\r\n                    <Pie\r\n                        width={250}\r\n                        height={160}\r\n                        options={options}\r\n                        type=\"pie\"\r\n                        data={data}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationPie;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '36px',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\ninterface GivingComponentStatusProps {\r\n    money: number;\r\n}\r\n\r\nconst GivingComponentStatus: React.FC<GivingComponentStatusProps> = ({\r\n    money,\r\n}: GivingComponentStatusProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_20\">이번달에 모인</Typography>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    총 기부액이에요!\r\n                </Typography>\r\n                <Box mt=\"20px\">\r\n                    <Typography\r\n                        className={`txt_primaryBlue2 ${classes.moneyFont}`}\r\n                    >\r\n                        {getNumberString(money)}원\r\n                    </Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingResultState } from '../../recoil/Giving';\r\nimport Loading from '../Common/Loading';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\nimport GivingComponentDonationMember from './GivingComponentDonationMember';\r\nimport GivingComponentDonationPie from './GivingComponentDonationPie';\r\nimport GivingComponentStatus from './GivingComponentStatus';\r\n\r\nconst GivingComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingResultState);\r\n\r\n    useEffect(() => {\r\n        http.get('/api/trading/donation/statistics').then((res) => {\r\n            setGivingData({\r\n                isLoaded: true,\r\n                ...res.data.data,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"기부 동참하기\"\r\n        >\r\n            {givingData.isLoaded ? (\r\n                <>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentStatus\r\n                            money={givingData.totalDonationMoney}\r\n                        />\r\n                    </Box>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentDonationPie\r\n                            donationStatus={givingData.donationRatioStatus}\r\n                        />\r\n                    </Box>\r\n                    <Box my=\"1rem\">\r\n                        <GivingComponentDonationMember\r\n                            donationMember={givingData.memberDTOs}\r\n                        />\r\n                    </Box>\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingComponent;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingFinishComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={true}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"홈으로 이동\"\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                <Box mt=\"25px\" />\r\n                <Typography className=\"txt_20 txt_b\">\r\n                    기부 모금이 완료되었어요.\r\n                </Typography>\r\n                <Typography className=\"txt_20\">진영님의 나눔으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    세상이 한 층 더 밝아졌어요!\r\n                </Typography>\r\n                <br />\r\n                <Typography className=\"txt_20\">기부는 블록체인으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    투명하게 공개진행됩니다.\r\n                </Typography>\r\n                <Box flexGrow=\"1\" />\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src=\"/images/rending_4.png\" />\r\n                </p>\r\n                <Box mb=\"45px\" />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingFinishComponent;\r\n","import { Checkbox, FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent } from 'react';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    margin: {\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nexport interface CategoryDataInfo {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface SelectListProps {\r\n    standardData: CategoryDataInfo[];\r\n    selectData: CategoryDataInfo[];\r\n    onChange: (\r\n        data: CategoryDataInfo,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => void;\r\n}\r\n\r\nconst SelectList: React.FC<SelectListProps> = (props: SelectListProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {props.standardData.map((eachData) => {\r\n                return (\r\n                    <div\r\n                        key={eachData.id}\r\n                        className=\"box_div mg_t20 bg_wh height_80\"\r\n                    >\r\n                        <FormControlLabel\r\n                            style={{ display: 'flex' }}\r\n                            className=\"checkbox__label pd_t26 pd_l20\"\r\n                            control={\r\n                                <Checkbox\r\n                                    checkedIcon={\r\n                                        <CheckCircleOutlineIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    icon={\r\n                                        <RadioButtonUncheckedIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    color=\"primary\"\r\n                                    checked={\r\n                                        props.selectData.findIndex(\r\n                                            (select) =>\r\n                                                select.id === eachData.id\r\n                                        ) >= 0\r\n                                    }\r\n                                    onChange={(event) => {\r\n                                        props.onChange(eachData, event);\r\n                                    }}\r\n                                />\r\n                            }\r\n                            classes={{ label: classes.margin }}\r\n                            label={eachData.name}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectList;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { GivingSelectState } from '../../recoil/Giving';\r\nimport SelectList from '../Common/SelectList';\r\nimport { CommonInterface, GivingDataSet, GivingStandInfo } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingSelectComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingSelectState);\r\n\r\n    const onChange = (\r\n        data: GivingDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        console.log('Clicked');\r\n        if (event.currentTarget.checked) {\r\n            setGivingData([data]);\r\n        } else {\r\n            setGivingData([]);\r\n        }\r\n    };\r\n    console.log(givingData);\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={givingData.length === 0}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <p className=\"txt_20\">관심있는 카테고리 하나를 골라</p>\r\n            <p className=\"txt_20 txt_b\">기부하세요.</p>\r\n            <SelectList\r\n                selectData={givingData}\r\n                standardData={GivingStandInfo}\r\n                onChange={onChange}\r\n            />\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingSelectComponent;\r\n","import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport interface HeaderDeafaultProps {\r\n    icon: JSX.Element;\r\n    title: string;\r\n}\r\n\r\nconst HeaderDeafault: React.FC<HeaderDeafaultProps> = (\r\n    props: HeaderDeafaultProps\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar>\r\n                {props.icon}\r\n                <Box ml=\"0.5rem\">\r\n                    <Typography\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1.3rem',\r\n                        }}\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderDeafault;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n} from '../../recoil/Session';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\ninterface CategoryIconProps {\r\n    id: number;\r\n}\r\n\r\nconst CategoryIcon: React.FC<CategoryIconProps> = (\r\n    props: CategoryIconProps\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <img\r\n                src=\"images/Logo.png\"\r\n                style={{ width: '3.5rem', height: '3.5rem', margin: 'auto' }}\r\n            />\r\n            <Typography style={{ textAlign: 'center' }}>\r\n                {getCategoryNameFromId(props.id)}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [category, setCategory] = useRecoilState(CurrentUserCategoryState);\r\n\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    };\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${encodeURI(userInfo.nickname)}/category`).then(\r\n            (res) => {\r\n                const resCategory = res.data.data.map(\r\n                    (eachData: any) => eachData.categoryId\r\n                );\r\n                setCategory(resCategory);\r\n            }\r\n        );\r\n    }, [userInfo]);\r\n\r\n    if (category.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>내가 선택한 혜택</Typography>} />\r\n            <CardContent>\r\n                <Box display=\"flex\">\r\n                    {category.map((eachCategory: number) => {\r\n                        return (\r\n                            <Box key={eachCategory} margin=\"auto\">\r\n                                <CategoryIcon id={eachCategory} />\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Typography onClick={onClick} variant=\"caption\">\r\n                    혜택을 바꾸고 싶나요?\r\n                </Typography>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import { Box, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getCategoryNameFromId, getNumberString } from '../Common/util';\r\nimport { TransactionSet } from './DataModel';\r\n\r\nexport interface BenefitListProps {\r\n    data: TransactionSet[];\r\n}\r\n\r\nconst extractDate = (date: string): string => {\r\n    const c = new Date(date);\r\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n    return `${c.getMonth()}월 ${c.getDate()} (${week[c.getDay()]})`;\r\n};\r\n\r\nconst BenefitList: React.FC<BenefitListProps> = ({\r\n    data,\r\n}: BenefitListProps) => {\r\n    return (\r\n        <>\r\n            {data.map((eachData, index, arr) => {\r\n                return (\r\n                    <Box key={index} mt={index === 0 ? '0px' : '5px'}>\r\n                        <Typography className={`txt_14`}>\r\n                            {extractDate(eachData.date)}\r\n                        </Typography>\r\n                        <Grid container style={{ marginTop: '5px' }}>\r\n                            <Grid>\r\n                                <Typography className={`txt_16`}>\r\n                                    {eachData.companyName}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Box flexGrow=\"1\" />\r\n\r\n                            <Grid style={{ textAlign: 'right' }}>\r\n                                <Typography className={`txt_16`}>\r\n                                    {getNumberString(eachData.totalBuyPrice)}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_14 txt_primaryBlue2`}\r\n                                >{`${getCategoryNameFromId(\r\n                                    eachData.categoryId\r\n                                )} 적립 ${getNumberString(\r\n                                    eachData.point\r\n                                )}`}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {arr.length - 1 !== index && (\r\n                            <div className=\"line bg_gray3 mg_t20\" />\r\n                        )}\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BenefitList;\r\n","export interface TransactionSet {\r\n    companyName: string;\r\n    categoryId: number;\r\n    totalBuyPrice: number;\r\n    point: number;\r\n    date: string;\r\n}\r\n\r\nexport const DummyTransactionData: TransactionSet[] = [\r\n    {\r\n        date: '2021-04-08',\r\n        companyName: '연화바루',\r\n        totalBuyPrice: -32000,\r\n        categoryId: 101,\r\n        point: 1600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -12000,\r\n        categoryId: 102,\r\n        point: 600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '테스트1',\r\n        totalBuyPrice: -37000,\r\n        categoryId: 104,\r\n        point: 3600,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '테스트2',\r\n        totalBuyPrice: -1200,\r\n        categoryId: 101,\r\n        point: 60,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -1000,\r\n        categoryId: 101,\r\n        point: 10,\r\n    },\r\n];\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n    CurrentUserTransactionState,\r\n} from '../../recoil/Session';\r\nimport BenefitList from './BenefitList';\r\nimport { DummyTransactionData, TransactionSet } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst DISPLAY_COUNT = 3;\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const userCategory = useRecoilValue(CurrentUserCategoryState);\r\n    const [transaction, setTransaction] = useRecoilState(\r\n        CurrentUserTransactionState\r\n    );\r\n    const [displaySet, setDisplaySet] = useState<TransactionSet[]>([]);\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/trading/benefits/${encodeURI(userInfo.nickname)}`).then(\r\n            (res) => {\r\n                let data: TransactionSet[] = [];\r\n                if (res.data.data.length === 0) {\r\n                    data = DummyTransactionData;\r\n                } else {\r\n                    data = res.data.data;\r\n                }\r\n                data = data.filter((eachData) => {\r\n                    return userCategory.includes(eachData.categoryId);\r\n                });\r\n                setDisplaySet(data.slice(0, DISPLAY_COUNT));\r\n                setTransaction(data);\r\n            }\r\n        );\r\n    }, [userCategory]);\r\n\r\n    if (displaySet.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>혜택 적립 내역</Typography>} />\r\n            <CardContent>\r\n                <BenefitList data={displaySet} />\r\n            </CardContent>\r\n            {transaction.length > DISPLAY_COUNT && (\r\n                <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                    <Button\r\n                        className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    >\r\n                        이용 내역 더 보기\r\n                    </Button>\r\n                </CardActions>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentAccountState, CurrentUserState } from '../../recoil/Session';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    moneyFont: {\r\n        fontSize: '26px',\r\n        fontFamily: '\"Recursive\", sans-serif',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst HCStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [account, setAccount] = useRecoilState(CurrentAccountState);\r\n\r\n    useEffect(() => {\r\n        if (userInfo.nickname) {\r\n            http.get(`/api/members/${encodeURI(userInfo.nickname)}`).then(\r\n                (res) => {\r\n                    setAccount({\r\n                        accountMoney: res.data.data.accountMoney,\r\n                        point: res.data.data.point,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const onGivingClick = () => {\r\n        history.push('/giving');\r\n    };\r\n\r\n    return (\r\n        <Card style={{ backgroundColor: '#62C3EB', borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className={classes.dfColor}>\r\n                    {`${userInfo.name}님의`}\r\n                    <br />\r\n                    혜택통 현황입니다.\r\n                </Typography>\r\n                <Typography\r\n                    className={`${classes.inline} ${classes.moneyFont} ${classes.dfColor}`}\r\n                >\r\n                    {getNumberString(account.point)}\r\n                </Typography>\r\n                <Typography className={`${classes.inline} ${classes.dfColor}`}>\r\n                    원\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    disabled\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    내 계좌로 인출\r\n                </Button>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    onClick={onGivingClick}\r\n                >\r\n                    기부하기\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport React from 'react';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport HCBenefit from './HCBenefit';\r\nimport HCPoint from './HCPoint';\r\nimport HCStatus from './HCStatus';\r\n\r\nconst HomeComponent: React.FC = () => {\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<HomeIcon />} title=\"홈\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                <Box mt=\"1rem\">\r\n                    <HCStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <HCBenefit />\r\n                </Box>\r\n                <Box my=\"1rem\">\r\n                    <HCPoint />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import React from 'react';\r\n\r\nconst SettingComponent: React.FC = () => {\r\n    return <>this is setting</>;\r\n};\r\n\r\nexport default SettingComponent;\r\n","import React from 'react';\r\n\r\nconst TogetherComponent: React.FC = () => {\r\n    return <>this is togheter</>;\r\n};\r\n\r\nexport default TogetherComponent;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport BenefitComponent from '../component/Benefit/BenefitComponent';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport GivingAmountComponent from '../component/Giving/GivingAmountComponent';\r\nimport GivingComponent from '../component/Giving/GivingComponent';\r\nimport GivingFinishComponent from '../component/Giving/GivingFinishComponent';\r\nimport GivingSelectComponent from '../component/Giving/GivingSelectComponent';\r\nimport HomeComponent from '../component/Home/HomeComponent';\r\nimport SettingComponent from '../component/Setting/SettingComponent';\r\nimport TogetherComponent from '../component/Together/TogetherComponent';\r\nimport { GivingAmountState, GivingSelectState } from '../recoil/Giving';\r\nconst homeRendering = (type: DISPLAY_TYPE) => {\r\n    switch (type) {\r\n        case DISPLAY_TYPE.HOME:\r\n            return <HomeComponent />;\r\n        case DISPLAY_TYPE.BENEFIT:\r\n            return <BenefitComponent />;\r\n        case DISPLAY_TYPE.TOGETHER:\r\n            return <TogetherComponent />;\r\n        case DISPLAY_TYPE.SETTING:\r\n            return <SettingComponent />;\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nconst GivingPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const resetSelect = useResetRecoilState(GivingSelectState);\r\n    const resetAmount = useResetRecoilState(GivingAmountState);\r\n\r\n    const onNextMove = (nextMove: number) => {\r\n        if (nextMove < 0) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.goBack();\r\n            return;\r\n        }\r\n\r\n        if (nextMove > 3) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(nextMove);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                <GivingComponent index={0} onMoveClick={onNextMove} />\r\n                <GivingSelectComponent index={1} onMoveClick={onNextMove} />\r\n                <GivingAmountComponent index={2} onMoveClick={onNextMove} />\r\n                <GivingFinishComponent index={3} onMoveClick={onNextMove} />\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GivingPage;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport BenefitComponent from '../component/Benefit/BenefitComponent';\r\nimport BottomBarNav, { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport HomeComponent from '../component/Home/HomeComponent';\r\nimport SettingComponent from '../component/Setting/SettingComponent';\r\nimport TogetherComponent from '../component/Together/TogetherComponent';\r\n\r\nconst homeRendering = (type: DISPLAY_TYPE) => {\r\n    switch (type) {\r\n        case DISPLAY_TYPE.HOME:\r\n            return <HomeComponent />;\r\n        case DISPLAY_TYPE.BENEFIT:\r\n            return <BenefitComponent />;\r\n        case DISPLAY_TYPE.TOGETHER:\r\n            return <TogetherComponent />;\r\n        case DISPLAY_TYPE.SETTING:\r\n            return <SettingComponent />;\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n    const [renderType, setCurrentRenderType] = useState<DISPLAY_TYPE>(\r\n        DISPLAY_TYPE.HOME\r\n    );\r\n\r\n    const onChange = (type: DISPLAY_TYPE) => {\r\n        setCurrentRenderType(type);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Box className=\"glow_body\" overflow=\"hidden\">\r\n                {homeRendering(renderType)}\r\n            </Box>\r\n            <BottomBarNav current={renderType} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface RenderComponentInterface {\r\n    title: { first: string; second: string };\r\n    description: string[];\r\n    highLight: string;\r\n    imgPath: string;\r\n}\r\n\r\nexport const rendingData: Array<RenderComponentInterface> = [\r\n    {\r\n        title: { first: '내맘대로', second: '혜택고르기!' },\r\n        description: ['정해진 틀에 맞춰서', '혜택받기는 싫어!'],\r\n        highLight: '내가 관심있는 카테고리 대로 혜택을!',\r\n        imgPath: '/images/rending_1.png',\r\n    },\r\n    {\r\n        title: { first: '나는 소비하면서', second: '사회까지 생각한다!' },\r\n        description: ['환경, 유기견, 소상공인', '저소득층, 동물보호...'],\r\n        highLight: '작은 소비 하나하나 모여 사회를 개선!',\r\n        imgPath: '/images/rending_2.png',\r\n    },\r\n    {\r\n        title: { first: '내가 이 골목 혜택왕!', second: '친구들과 혜택대결' },\r\n        description: ['누가 누가', '더 많이 혜택을 모았나?'],\r\n        highLight: '여기 모여라! 친구들끼리 혜택 대결!',\r\n        imgPath: '/images/rending_3.png',\r\n    },\r\n    {\r\n        title: { first: '혜택을 모아모아', second: '기부까지?!' },\r\n        description: [\r\n            '혜택받은 금액을 인출하거나',\r\n            '원하는 곳에 기부할 수 있지!',\r\n        ],\r\n        highLight: \"우리은행에서 '모인 기부액의 2배를' 기부!\",\r\n        imgPath: '/images/rending_4.png',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { RenderComponentInterface } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    buttonOverride: {\r\n        position: 'absolute !important' as 'absolute',\r\n    },\r\n}));\r\n\r\ninterface RenderingPageProps {\r\n    data: RenderComponentInterface;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\ntype PropsType = RenderingPageProps & { isFirst: boolean };\r\n\r\nconst RendingComponent: React.FC<PropsType> = ({\r\n    data,\r\n    ...props\r\n}: PropsType) => {\r\n    const classes = useStyles();\r\n\r\n    const onNextClick = () => {\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        props.onMoveButtonClick(-1);\r\n    };\r\n\r\n    return (\r\n        <Box style={{ position: 'relative' }} width=\"100%\" height=\"100%\">\r\n            <div className=\"container mg_t10\" style={{ overflowX: 'visible' }}>\r\n                <IconButton\r\n                    className={`back_div ${props.isFirst && 'hide'}`}\r\n                    onClick={onBackClick}\r\n                >\r\n                    <KeyboardArrowLeft />\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                <p className=\"rd_posi_1 txt_30\">{data.title.first}</p>\r\n                <p className=\"rd_posi_2 txt_30 txt_b\">{data.title.second}</p>\r\n\r\n                <p className=\"rd_posi_3 txt_18\">\r\n                    {data.description[0]}\r\n                    <br />\r\n                    {data.description[1]}\r\n                </p>\r\n                <div\r\n                    className=\"txt_back_highlight\"\r\n                    style={{ width: '276px' }}\r\n                />\r\n                <p className=\"rd_posi_4 txt_18 txt_b\">{data.highLight}</p>\r\n            </div>\r\n            <div className=\"pd_b30 rd_posi_img\" style={{ left: '5%' }}>\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src={data.imgPath} />\r\n                </p>\r\n            </div>\r\n            <Button\r\n                className={`btn_bottom bg_primaryblue ${classes.buttonOverride}`}\r\n                onClick={onNextClick}\r\n            >\r\n                <Typography className={`p_btn_bottom txt_wh txt_b`}>\r\n                    다음\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RendingComponent;\r\n","import { Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    imgContainer: {\r\n        width: '100px',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        width: '100%',\r\n    },\r\n    bodyReplace: {\r\n        zIndex: -1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst SigninPage: React.FC = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const onClickSignup = () => {\r\n        history.push('/signup');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`bg_primaryblue ${classes.bodyReplace}`} />\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt pd_t60\">\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            style={{ width: '100px' }}\r\n                            className={`pd_t130 ${classes.imgContainer}`}\r\n                            src=\"images/Logo.png\"\r\n                        />\r\n                    </p>\r\n                    <p className=\"txt_24 txt_wh txt_center\">환영합니다!</p>\r\n                </div>\r\n\r\n                <div className=\"login_btn\">\r\n                    <Button\r\n                        onClick={onClickSignup}\r\n                        className={classes.button}\r\n                        style={{ backgroundColor: 'white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_primaryBlue txt_center txt_b\">\r\n                            혜택통 첫달 무료 체험하기\r\n                        </p>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={`mg_t10 ${classes.button}`}\r\n                        style={{ border: '1px solid white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_wh txt_center\">기존 사용자 로그인</p>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SigninPage;\r\n","import React, { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData as MainRendingData,\r\n    rendingData,\r\n} from '../component/Rending/DataModel';\r\nimport RendingPage from '../component/Rending/RendingComponent';\r\nimport { IsSplashSkip } from '../recoil/Session';\r\nimport SigninPage from './SigninPage';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [isSplashSkip, setIsSplashSkip] = useRecoilState(IsSplashSkip);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n\r\n    const onMoveButtonClick = (index: number, move: number) => {\r\n        if (index + move >= MainRendingData.length) {\r\n            setIsSplashSkip(true);\r\n        } else if (index + move === -1) {\r\n            return;\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSplashSkip ? (\r\n                <SigninPage />\r\n            ) : (\r\n                <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                    {rendingData.map((eachData, index) => {\r\n                        return (\r\n                            <RendingPage\r\n                                key={eachData.title.first}\r\n                                data={eachData}\r\n                                isFirst={index === 0}\r\n                                onMoveButtonClick={(move) =>\r\n                                    onMoveButtonClick(index, move)\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n                </Slider>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface SignUpCommon {\r\n    buttonDisable: boolean;\r\n    isLast?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n    onCustomizeNextClick?: () => void;\r\n}\r\n\r\nconst SignupCommonComponent: React.FC<PropsWithChildren<SignUpCommon>> = (\r\n    props: PropsWithChildren<SignUpCommon>\r\n) => {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar style={{ alignItems: 'center' }}>\r\n                    {!props.isLast && (\r\n                        <IconButton\r\n                            className=\"back_div\"\r\n                            disabled={props.isLast}\r\n                            onClick={() => props.onMoveButtonClick(-1)}\r\n                        >\r\n                            <KeyboardArrowLeft\r\n                                style={{\r\n                                    display: `${\r\n                                        props.isLast ? 'none' : 'block'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    )}\r\n                    <Typography className=\"txt_24 txt_b\">\r\n                        혜택통 만들기\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => {\r\n                    props.onCustomizeNextClick\r\n                        ? props.onCustomizeNextClick()\r\n                        : props.onMoveButtonClick(1);\r\n                }}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">\r\n                    {props.isLast ? '완료! 혜택 받으러 가기' : '다음'}\r\n                </p>\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupCommonComponent;\r\n","import { Box, Button, Dialog, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { SignUpAccNumState } from '../../recoil/Session';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst ACDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>계좌 인증이 확인 되었습니다.</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupAccountComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [account, setAccount] = useRecoilState<string>(SignUpAccNumState);\r\n    const [isCert, setIsCert] = useState<boolean>(false);\r\n    const [tokenStr, setTokenStr] = useState<string>('');\r\n\r\n    const [dialog, setDialog] = useState<boolean>(false);\r\n    const [complete, setComplete] = useState<boolean>(false);\r\n\r\n    const completeClick = () => {\r\n        setComplete(true);\r\n        setDialog(true);\r\n    };\r\n\r\n    const onCertClick = () => {\r\n        setIsCert(!isCert);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACDialog\r\n                open={dialog}\r\n                onClose={() => {\r\n                    setDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={!complete}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">\r\n                    본인의 우리은행 계좌번호를 알려주세요.\r\n                </p>\r\n\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"pd_t16 mg_l16\">\r\n                                        <TextField\r\n                                            disabled={isCert || complete}\r\n                                            value={account}\r\n                                            onChange={(event) => {\r\n                                                setAccount(event.target.value);\r\n                                            }}\r\n                                            label=\"계좌번호\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"pd_t4 mg_l16 pd_b16\"></div>\r\n                                </td>\r\n                                <td style={{ textAlign: 'right' }}>\r\n                                    <div className=\"\">\r\n                                        <Button\r\n                                            disabled={\r\n                                                account === '' || complete\r\n                                            }\r\n                                            className=\"btn_blueBorder\"\r\n                                            style={{\r\n                                                marginRight: '16px',\r\n                                            }}\r\n                                            onClick={onCertClick}\r\n                                        >\r\n                                            {isCert ? '취소' : '1원 인증'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <p className=\"mg_t30 txt_14 txt_center\">\r\n                    계좌 확인을 위해 계좌번호로 1원을 보낼게요\r\n                    <br />\r\n                    입금명을 확인해 주세요\r\n                </p>\r\n\r\n                <div className=\"box_div mg_t30 bg_wh\">\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"pd_t16 mg_l16\">\r\n                                        <TextField\r\n                                            disabled={!isCert || complete}\r\n                                            onChange={(event) => {\r\n                                                setTokenStr(event.target.value);\r\n                                            }}\r\n                                            placeholder=\"혜택통 +\"\r\n                                            label=\"입금명을 입력해주세요\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"pd_t4 mg_l16 pd_b16\"></div>\r\n                                </td>\r\n                                <td style={{ textAlign: 'right' }}>\r\n                                    <div className=\"\">\r\n                                        {isCert && (\r\n                                            <Button\r\n                                                disabled={\r\n                                                    tokenStr === '' || complete\r\n                                                }\r\n                                                className=\"btn_blueBorder\"\r\n                                                style={{\r\n                                                    marginRight: '16px',\r\n                                                }}\r\n                                                onClick={completeClick}\r\n                                            >\r\n                                                입력\r\n                                            </Button>\r\n                                        )}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAccountComponent;\r\n","import { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst SignupBillingComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={false}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20\">혜택 구독을 위한</p>\r\n                <p className=\"txt_20 txt_b\">결제 정보를 입력해 주세요.</p>\r\n\r\n                <Box mt=\"15px\">\r\n                    <p style={{ color: '#62c3eb' }}>\r\n                        첫달 무료 이용 후 해지하실 수 있어요.\r\n                    </p>\r\n                </Box>\r\n\r\n                <Box mt=\"25px\">\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Box display=\"flex\">\r\n                                <Box flexGrow=\"1\">\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        이름\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        이진영\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Button disabled className=\"btn_blueBorder\">\r\n                                    스캔하기\r\n                                </Button>\r\n                            </Box>\r\n\r\n                            <Box mt=\"10px\">\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                >\r\n                                    카드번호\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    0123-4567-0123-4567\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box mt=\"10px\">\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                >\r\n                                    카드 유효기간\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">01/2345</Typography>\r\n                            </Box>\r\n\r\n                            <Box mt=\"10px\">\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                >\r\n                                    CVC\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">012</Typography>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupBillingComponent;\r\n","import { Box, Button, Dialog, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { SignUpCategoryState } from '../../recoil/Session';\r\nimport { CategoryDataSet, CategoryStandInfo } from '../Category/DataModel';\r\nimport SelectList from '../Common/SelectList';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    margin: {\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst LIMIT = 2;\r\n\r\nconst ACCategoryDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>니가원하는거슨 비건어쩌고저쩌고</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst ACOverDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>딱 2가지만 선택해주세요</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCategoryComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const [category, setCategory] = useRecoilState<CategoryDataSet[]>(\r\n        SignUpCategoryState\r\n    );\r\n    const [suggestDialog, setSuggestDialog] = useState<boolean>(false);\r\n    const [overDialog, setOverDialog] = useState<boolean>(false);\r\n    const buttonDisable = category.length !== 2;\r\n\r\n    const selectData = (\r\n        data: CategoryDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            if (category.length < LIMIT) {\r\n                setCategory([...category, data]);\r\n            } else {\r\n                setOverDialog(true);\r\n            }\r\n        } else {\r\n            setCategory(category.filter((item) => data !== item));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACCategoryDialog\r\n                open={suggestDialog}\r\n                onClose={() => {\r\n                    setSuggestDialog(false);\r\n                }}\r\n            />\r\n            <ACOverDialog\r\n                open={overDialog}\r\n                onClose={() => {\r\n                    setOverDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={buttonDisable}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20\">관심있는 카테고리 2가지를 골라</p>\r\n                <p className=\"txt_20 txt_b\">집중 혜택 받으세요.</p>\r\n\r\n                <SelectList\r\n                    selectData={category}\r\n                    standardData={CategoryStandInfo}\r\n                    onChange={selectData}\r\n                />\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCategoryComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst SignupFinishComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={false}\r\n                onMoveButtonClick={() => props.onMoveButtonClick(1)}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box mt=\"25px\" />\r\n                    <p className=\"txt_20 txt_b\">축하합니다!</p>\r\n                    <p className=\"txt_20\">혜택통이 만들어졌어요!</p>\r\n                    <p className=\"txt_20\">이제 착한 소비하고</p>\r\n                    <p className=\"txt_20\">혜택도 받으세요.</p>\r\n                    <Box flexGrow=\"1\" />\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            className=\"img_rending\"\r\n                            src=\"/images/rending_1.png\"\r\n                        />\r\n                    </p>\r\n                    <Box mb=\"45px\" />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupFinishComponent;\r\n","import { Box, IconButton, InputAdornment, TextField } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserState,\r\n    SignUpAccNumState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n    UserInfo,\r\n} from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupUserModel {\r\n    name: string;\r\n    nickname: string;\r\n    accountNumber: string;\r\n    accountMoney: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n}\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\nconst SignupPasswordComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const setUserState = useSetRecoilState<UserInfo>(CurrentUserState);\r\n\r\n    const signupProfile = useRecoilValue(SignUpProfileState);\r\n    const accountNumber = useRecoilValue(SignUpAccNumState);\r\n    const currentCategory = useRecoilValue(SignUpCategoryState);\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccNum = useResetRecoilState(SignUpAccNumState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n\r\n    const [fingerDialog, setFingerDialog] = useState<boolean>(false);\r\n\r\n    const signupFunction = async () => {\r\n        const signupData: SignupUserModel = {\r\n            name: signupProfile.realName,\r\n            nickname: signupProfile.nickName,\r\n            phoneNumber: signupProfile.cellNumber,\r\n            accountNumber: accountNumber,\r\n            password: password,\r\n            accountMoney: '10000',\r\n        };\r\n        const signupCategory: SignupCategory = {\r\n            benefitCategoryList: [],\r\n        };\r\n        currentCategory.forEach((eachData) => {\r\n            signupCategory.benefitCategoryList.push({\r\n                userNickname: signupProfile.nickName,\r\n                categoryId: eachData.id,\r\n            });\r\n        });\r\n\r\n        const createRes = await http.post('/api/members', signupData); // user 먼저 만들어져야함\r\n        console.log(createRes);\r\n        const registRes = await http.post(\r\n            '/api/members/category',\r\n            signupCategory\r\n        ); // user 먼저 만들어져야함\r\n        console.log(registRes);\r\n        const userRes = await http.get(\r\n            `/api/members/${encodeURI(signupProfile.nickName)}`\r\n        ); // user 먼저 만들어져야함\r\n        const currentUser: UserInfo = userRes.data.data as UserInfo;\r\n\r\n        setUserState({\r\n            accountNumber: currentUser.accountNumber,\r\n            name: currentUser.name,\r\n            nickname: currentUser.nickname,\r\n            phoneNumber: currentUser.phoneNumber,\r\n        });\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await signupFunction();\r\n        resetProfile();\r\n        resetAccNum();\r\n        resetCategory();\r\n\r\n        setFingerDialog(false);\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <FingerDialog open={fingerDialog} onClose={onClose} />\r\n            <SignupCommonComponent\r\n                buttonDisable={password === ''}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n                onCustomizeNextClick={() => {\r\n                    setFingerDialog(true);\r\n                }}\r\n            >\r\n                <p className=\"txt_20 txt_b\">앱 사용을 위한</p>\r\n                <p className=\"txt_20\">비밀번호를 설정해 주세요.</p>\r\n\r\n                <Box mt=\"25px\">\r\n                    <TextField\r\n                        style={{ width: '80%', marginLeft: '10%' }}\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        InputProps={{\r\n                            // <-- This is where the toggle button is added.\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <Visibility\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        ) : (\r\n                                            <VisibilityOff\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPasswordComponent;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport {\r\n    SignupComponentProps,\r\n    SignupProfileInfo,\r\n    SignupProfileInterface,\r\n} from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ntype SignupProfileProps = SignupComponentProps & {\r\n    data: SignupProfileInterface;\r\n    index: number;\r\n};\r\n\r\nconst parseData = (data: SignupProfileInfo, index: number): string => {\r\n    switch (index) {\r\n        case 0:\r\n            return data.realName;\r\n        case 1:\r\n            return data.nickName;\r\n        case 2:\r\n            return data.cellNumber;\r\n    }\r\n    return '';\r\n};\r\n\r\nconst SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n    props: SignupProfileProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n    const value = parseData(profile, props.index);\r\n    const buttonDisable = value === '';\r\n    const [inValid, setInValid] = useState<boolean>(false);\r\n\r\n    const onChange = (index: number, data: string) => {\r\n        switch (index) {\r\n            case 0:\r\n                setProfile({ ...profile, realName: data });\r\n                break;\r\n            case 1:\r\n                if (data !== '') {\r\n                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n                        (res) => {\r\n                            const alreadyExist: boolean = res.data.data;\r\n                            if (alreadyExist !== inValid) {\r\n                                setInValid(alreadyExist);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                setProfile({ ...profile, nickName: data });\r\n\r\n                break;\r\n            case 2:\r\n                setProfile({ ...profile, cellNumber: data });\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={buttonDisable || inValid}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    <div className=\"pd_t16 mg_l16\"></div>\r\n                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                        <TextField\r\n                            error={inValid}\r\n                            helperText={\r\n                                inValid && '이미 존재하는 닉네임입니다.'\r\n                            }\r\n                            value={value}\r\n                            onChange={(event) => {\r\n                                onChange(props.index, event.target.value);\r\n                            }}\r\n                            label={props.data.description}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupProfileComponent;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData,\r\n    SignupProfileInterface,\r\n} from '../component/Signup/DataModel';\r\nimport SignupAccountComponent from '../component/Signup/SignupAccountComponent';\r\nimport SignupBillingComponent from '../component/Signup/SignupBillingComponent';\r\nimport SignupCategoryComponent from '../component/Signup/SignupCategoryComponent';\r\nimport SignupFinishComponent from '../component/Signup/SignupFinishComponent';\r\nimport SignupPasswordComponent from '../component/Signup/SignupPasswordComponent';\r\nimport SignupProfileComponent from '../component/Signup/SignupProfileComponent';\r\nimport {\r\n    SignUpAccNumState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n} from '../recoil/Session';\r\n\r\nconst SignupPage: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccNum = useResetRecoilState(SignUpAccNumState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n    const sliderRef = useRef<Slider>(null);\r\n\r\n    const items: Array<JSX.Element> = [];\r\n    rendingData.forEach((eachData: SignupProfileInterface, index: number) => {\r\n        items.push(\r\n            <SignupProfileComponent\r\n                key={index}\r\n                index={index}\r\n                data={eachData}\r\n                onMoveButtonClick={(move: number) => onMove(index, move)}\r\n            />\r\n        );\r\n    });\r\n\r\n    items.push(\r\n        <SignupAccountComponent\r\n            key={3}\r\n            onMoveButtonClick={(move: number) => {\r\n                onMove(3, move);\r\n            }}\r\n        />\r\n    );\r\n    items.push(\r\n        <SignupCategoryComponent\r\n            key={4}\r\n            onMoveButtonClick={(move: number) => {\r\n                onMove(4, move);\r\n            }}\r\n        />\r\n    );\r\n    items.push(\r\n        <SignupBillingComponent\r\n            key={5}\r\n            onMoveButtonClick={(move: number) => {\r\n                onMove(5, move);\r\n            }}\r\n        />\r\n    );\r\n\r\n    items.push(\r\n        <SignupPasswordComponent\r\n            key={6}\r\n            onMoveButtonClick={(move: number) => {\r\n                onMove(6, move);\r\n            }}\r\n        />\r\n    );\r\n\r\n    items.push(\r\n        <SignupFinishComponent\r\n            key={7}\r\n            onMoveButtonClick={(move: number) => {\r\n                onMove(7, move);\r\n            }}\r\n        />\r\n    );\r\n\r\n    const onMove = (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            resetProfile();\r\n            resetAccNum();\r\n            resetCategory();\r\n            history.replace('/mainpage');\r\n            return;\r\n        }\r\n\r\n        if (index + move > 7) {\r\n            // 맨마지막 페이지\r\n            // setIsAccSeq(true); real Signup\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Slider {...commonSlickSettings} ref={sliderRef}>\r\n            {items}\r\n        </Slider>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport './basic.css';\r\nimport AuthRouteGuard from './component/AuthRouteGuard';\r\nimport './overide.css';\r\nimport GivingPage from './page/GivingPage';\r\nimport HomePage from './page/HomePage';\r\nimport MainPage from './page/MainPage';\r\nimport SignupPage from './page/SignupPage';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/mainpage\" component={MainPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n                <AuthRouteGuard exact path=\"/\" component={HomePage} />\r\n                <AuthRouteGuard exact path=\"/giving\" component={GivingPage} />\r\n\r\n                <Redirect from=\"*\" to=\"/mainpage\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    StylesProvider,\r\n    ThemeProvider,\r\n    unstable_createMuiStrictModeTheme,\r\n} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <RecoilRoot>\r\n            <ThemeProvider theme={theme}>\r\n                <StylesProvider injectFirst>\r\n                    <App />\r\n                </StylesProvider>\r\n            </ThemeProvider>\r\n        </RecoilRoot>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}