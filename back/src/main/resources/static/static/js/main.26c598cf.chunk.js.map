{"version":3,"sources":["recoil/index.ts","recoil/Session.ts","component/AuthRoute.tsx","component/AuthRouteGuard.tsx","component/Common.ts","http/index.ts","recoil/Giving.ts","component/Common/FingerDialog.tsx","component/Category/DataModel.ts","component/Giving/DataModel.ts","component/Common/util.ts","component/Common/HeaderAction.tsx","component/Giving/GivingCommon.tsx","component/Giving/GivingAmountComponent.tsx","component/Common/Loading.tsx","component/Giving/GivingComponentDonationMember.tsx","component/Giving/GivingComponentDonationPie.tsx","component/Giving/GivingComponentStatus.tsx","component/Giving/GivingComponent.tsx","component/Giving/GivingFinishComponent.tsx","component/Common/SelectList.tsx","component/Giving/GivingSelectComponent.tsx","page/GivingPage.tsx","recoil/Benefit.ts","component/Common/HeaderDefault.tsx","component/Benefit/HomeBenefitInputText.tsx","component/Benefit/HomBenefitCompany.tsx","component/Benefit/HomeBenefitSearchList.tsx","component/Benefit/HomeBenefitList.tsx","component/Benefit/HomeBenefitSlider.tsx","component/Common/BottomBar.tsx","component/Benefit/HomeBenefitComponent.tsx","component/Signup/DataModel.ts","component/Home/HCBenefit.tsx","component/Home/BenefitList.tsx","component/Home/DataModel.ts","component/Home/HCPoint.tsx","component/Home/HCStatus.tsx","component/Home/HomeComponent.tsx","component/Setting/SettingComponent.tsx","component/Together/TogetherComponent.tsx","page/HomePage.tsx","component/Rending/DataModel.ts","component/Rending/RendingComponent.tsx","page/SigninPage.tsx","page/MainPage.tsx","component/Signup/SignupCommon.tsx","component/Signup/SignupAccountComponent.tsx","component/Signup/SignupCategoryComponent.tsx","component/Signup/SignupFinishComponent.tsx","component/Signup/SignupPasswordComponent.tsx","component/Signup/SignupProfileComponent.tsx","page/SignupPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistAtom","recoilPersist","key","storage","localStorage","IsSplashSkip","atom","default","effects_UNSTABLE","SignUpProfileState","cellNumber","nickName","realName","SignUpAccInfoState","accountMoney","accountNumber","SignUpCategoryState","CurrentUserState","name","nickname","phoneNumber","CurrentAccountState","point","CurrentUserCategoryState","CurrentUserTransactionState","AuthRoute","render","props","isLogin","children","component","others","to","pathname","Route","AuthRouteGuard","currentUser","useRecoilValue","commonSlickSettings","touchMove","dots","arrows","http","axios","create","baseURL","interceptors","request","use","config","console","log","error","Promise","reject","response","GivingSelectState","GivingAmountState","GivingResultState","isLoaded","donationRatioStatus","memberDTOs","totalDonationMoney","FingerDialog","onClose","open","handleOk","Dialog","Box","mt","mx","Typography","Button","onClick","className","CategoryStandInfo","id","COLOR_SET","GivingStandInfo","getCategoryNameFromId","target","find","eachId","getMoneyStr2Number","str","Math","floor","Number","getNumberString","number","toString","replace","getCategoryImgPath","prefix","HeaderAction","makeStyles","defaultType","fontFamily","selectedType","color","AppBar","position","Toolbar","style","alignItems","isLast","IconButton","onMoveClick","KeyboardArrowLeft","display","headerTitle","GivingCommon","dfColor","buttonLayout","backgroundColor","flexBasis","flexGrow","flexDirection","width","height","disableRipple","buttonDisable","disabled","buttonTitle","useStyles","inputText","textAlign","GivingAmountComponent","origin","max","index","classes","useRecoilState","givingAmount","setGivingAmount","givingSelect","userAccount","userInfo","useState","setOpen","a","post","userNickname","donationId","donationPoint","nextMove","TextField","root","marginLeft","helperText","onChange","event","value","Loading","Grid","container","justify","CircularProgress","text","maxWidth","minWidth","whiteSpace","overflow","textOverflow","money","fontSize","GivingComponentDonationMember","donationMember","orderMember","slice","sort","d1","d2","getOrderMember","sortMemger","maxValueLen","minValueLen","length","getRage","start","end","Card","borderRadius","CardContent","map","eachMember","my","src","ml","GivingComponentDonationPie","sortData","donationStatus","filter","data","totalDonationCount","labels","Array","datasets","borderColor","forEach","eachData","push","getGivingNameFromId","options","maintainAspectRatio","responsive","plugins","legend","boxWidth","usePointStyle","animation","duration","type","moneyFont","GivingComponentStatus","GivingComponent","givingData","setGivingData","useEffect","get","then","res","GivingFinishComponent","mb","margin","icon","SelectList","standardData","FormControlLabel","control","Checkbox","checkedIcon","checked","selectData","findIndex","select","label","GivingSelectComponent","currentTarget","GivingPage","sliderRef","useRef","history","useHistory","resetSelect","useResetRecoilState","resetAmount","onNextMove","goBack","current","slickGoTo","ref","BenefitStateCompany","BenefitFavoriteState","HeaderDeafault","fontWeight","title","theme","marginRight","input","spacing","flex","img","HomeBenefitInputText","Paper","InputBase","placeholder","inputProps","commonHeart","selectedHeart","HomBenefitCompany","wrap","companyName","description","userLike","totalLike","thumbNailPath","marginTop","HomeBenefitSearchList","searchText","benefitCompany","benefitFavoriteCompany","renderValue","setRenderValue","filterData","categoryName","categoryId","includes","HomeBenefitList","TabPanel","other","role","hidden","aria-labelledby","p","DISPLAY_TYPE","HomeBenefitSlider","pageIndex","override","speed","HomeBenefitComponent","setSearchText","setBenefitCompany","setFavoriteState","useSetRecoilState","encodeURI","isertArr","benefitData","page","setPage","isSearchMode","Tabs","nextValue","indicatorColor","textColor","variant","scrollButtons","Tab","a11yProps","SIGNUP_TYPE","BottomBarNav","BottomNavigation","newValue","showLabels","BottomNavigationAction","selected","HOME","BENEFIT","TOGETHER","SETTING","cardActionLayout","padding","justifyContent","CategoryIcon","HCPoint","category","setCategory","resCategory","CardHeader","eachCategory","CardActions","extractDate","date","c","Date","getMonth","getDate","getDay","BenefitList","arr","totalBuyPrice","DummyTransactionData","userCategory","transaction","setTransaction","displaySet","setDisplaySet","inline","HCStatus","account","setAccount","HomeComponent","HCBenefit","SettingComponent","TogetherComponent","homeRendering","HomePage","renderType","setCurrentRenderType","BottomBar","rendingData","first","second","highLight","imgPath","buttonOverride","RendingComponent","overflowX","isFirst","onMoveButtonClick","left","imgContainer","button","bodyReplace","zIndex","SigninPage","preventDefault","window","parent","postMessage","border","MainPage","isSplashSkip","setIsSplashSkip","move","MainRendingData","SignupCommonComponent","onCustomizeNextClick","labelLayout","paddingTop","AccountComponent","ACNO","PBOK_BAL","SignupAccountComponent","signupInfo","wooriAccountList","setWooriAccountList","selectAccount","setSelectAccount","checkCurrent","regex","cellFormat","dataBody","GRID","ACCT_KND","toUpperCase","SignupCommon","ACCategoryDialog","ACOverDialog","SignupCategoryComponent","suggestDialog","setSuggestDialog","overDialog","setOverDialog","item","SignupFinishComponent","SignupPasswordComponent","password","setPassword","showPassword","setShowPassword","setUserState","setAccountState","signupProfile","accountInfo","resetProfile","resetAccNum","resetCategory","fingerDialog","setFingerDialog","signupFunction","signupData","signupCategory","benefitCategoryList","createRes","registRes","userRes","autoComplete","InputProps","endAdornment","InputAdornment","aria-label","onMouseDown","Visibility","VisibilityOff","SignupProfileComponent","profile","setProfile","parseData","inValid","setInValid","setHelperText","alreadyExist","onlyNums","SignupPage","resetAccInfo","setIndex","items","onMove","App","addEventListener","e","alert","exact","path","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","unstable_createMuiStrictModeTheme","ReactDOM","StrictMode","ThemeProvider","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.26c598cf.chunk.js","sourcesContent":["import { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'recoil-persist', // configuration stay the same too\r\n    storage: localStorage\r\n})\r\n\r\nexport {\r\n    persistAtom\r\n}","import { atom } from 'recoil';\r\nimport { CategoryDataSet } from '../component/Category/DataModel';\r\nimport { TransactionSet } from '../component/Home/DataModel';\r\nimport { SignupProfileInfo } from '../component/Signup/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport interface UserInfo {\r\n    name: string;\r\n    nickname: string;\r\n    phoneNumber: string;\r\n    accountNumber: string;\r\n}\r\n\r\nexport interface UserAccount {\r\n    accountMoney: number;\r\n    point: number;\r\n}\r\n\r\nexport const IsSplashSkip = atom<boolean>({\r\n    key: 'IsSplashSkip',\r\n    default: false,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const SignUpProfileState = atom<SignupProfileInfo>({\r\n    key: 'SignUpProfileState',\r\n    default: {\r\n        cellNumber: '',\r\n        nickName: '',\r\n        realName: '',\r\n    },\r\n});\r\n\r\nexport const SignUpAccInfoState = atom<{\r\n    accountNumber: string;\r\n    accountMoney: number;\r\n}>({\r\n    key: 'SignUpAccInfoState',\r\n    default: {\r\n        accountMoney: 0,\r\n        accountNumber: '',\r\n    },\r\n});\r\n\r\nexport const SignUpCategoryState = atom<CategoryDataSet[]>({\r\n    key: 'SignUpCategoryState',\r\n    default: [],\r\n});\r\n\r\nexport const CurrentUserState = atom<UserInfo>({\r\n    key: 'CurrentUserState',\r\n    default: {\r\n        name: '',\r\n        nickname: '',\r\n        phoneNumber: '',\r\n        accountNumber: '',\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentAccountState = atom<UserAccount>({\r\n    key: 'CurrentAccountState',\r\n    default: {\r\n        point: 0,\r\n        accountMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserCategoryState = atom<number[]>({\r\n    key: 'CurrentUserCategoryState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserTransactionState = atom<TransactionSet[]>({\r\n    key: 'CurrentUserTransactionState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport interface AuthRouteProps extends RouteProps {\r\n    isLogin: boolean;\r\n}\r\n\r\nclass AuthRoute extends Route<AuthRouteProps> {\r\n    render = () => {\r\n        const { isLogin, children, component, ...others } = this.props;\r\n        if (isLogin) {\r\n            return (\r\n                <Route {...others} component={component}>\r\n                    {children}\r\n                </Route>\r\n            );\r\n        } else {\r\n            return (\r\n                <Route\r\n                    {...others}\r\n                    render={() => <Redirect to={{ pathname: '/signin' }} />}\r\n                />\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { RouteProps } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../recoil/Session';\r\nimport AuthRoute from './AuthRoute';\r\n\r\nconst AuthRouteGuard: React.FC<RouteProps> = (props: RouteProps) => {\r\n    const currentUser = useRecoilValue(CurrentUserState);\r\n    return <AuthRoute isLogin={currentUser.nickname !== ''} {...props} />;\r\n};\r\n\r\nexport default AuthRouteGuard;\r\n","import { Settings } from 'react-slick';\r\n\r\nexport const commonSlickSettings: Settings = {\r\n    touchMove: false,\r\n    dots: false,\r\n    arrows: false,\r\n};\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst http = axios.create({\r\n  baseURL: 'http://localhost:8000',\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    console.log(`Reqeust Interceptor Called`);\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n  (config: AxiosResponse) => {\r\n    console.log(`Response Interceptor Called`);\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default http;\r\n","import { atom } from 'recoil';\r\nimport { GivingDataSet, GivingResultInfo } from '../component/Giving/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const GivingSelectState = atom<GivingDataSet[]>({\r\n    key: 'GivingSelectState',\r\n    default: [],\r\n});\r\n\r\nexport const GivingAmountState = atom<number>({\r\n    key: 'GivingAmountState',\r\n    default: 0,\r\n});\r\n\r\nexport const GivingResultState = atom<GivingResultInfo>({\r\n    key: 'GivingResultState',\r\n    default: {\r\n        isLoaded: false,\r\n        donationRatioStatus: [],\r\n        memberDTOs: [],\r\n        totalDonationMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import { Box, Button, Dialog, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst FingerDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>지문등록 ㄱㄱㄱㄱ</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default FingerDialog;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface CategoryDataSet extends CategoryDataInfo {}\r\n\r\nexport const CategoryStandInfo: CategoryDataSet[] = [\r\n    {\r\n        id: 101,\r\n        name: '저플라스틱',\r\n    },\r\n    {\r\n        id: 102,\r\n        name: '저탄소',\r\n    },\r\n    {\r\n        id: 103,\r\n        name: '동물실험반대',\r\n    },\r\n    {\r\n        id: 104,\r\n        name: '결식아동',\r\n    },\r\n    {\r\n        id: 105,\r\n        name: '노인보호',\r\n    },\r\n    {\r\n        id: 106,\r\n        name: '장애인 복지',\r\n    },\r\n    {\r\n        id: 107,\r\n        name: '장애인이 만든 제품',\r\n    },\r\n    {\r\n        id: 108,\r\n        name: '구호물품',\r\n    },\r\n    {\r\n        id: 109,\r\n        name: '비건',\r\n    },\r\n];\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface DonationCategory {\r\n    donationId: number;\r\n    totalDonationCount: number;\r\n}\r\n\r\nexport interface DonationMember {\r\n    nickname: string;\r\n    point: number;\r\n}\r\n\r\nexport interface GivingResultInfo {\r\n    isLoaded: boolean;\r\n    totalDonationMoney: number;\r\n    donationRatioStatus: DonationCategory[];\r\n    memberDTOs: DonationMember[];\r\n}\r\n\r\nexport interface GivingDataSet extends CategoryDataInfo {}\r\n\r\nexport const COLOR_SET = [\r\n    '#3BAAD8',\r\n    '#62BBE0',\r\n    '#9DD4EC',\r\n    '#C4E5F#',\r\n    '#D8EEF7',\r\n];\r\n\r\nexport const GivingStandInfo: GivingDataSet[] = [\r\n    {\r\n        id: 201,\r\n        name: '친환경',\r\n    },\r\n    {\r\n        id: 202,\r\n        name: '동물보호',\r\n    },\r\n    {\r\n        id: 203,\r\n        name: '아동 / 노인',\r\n    },\r\n    {\r\n        id: 204,\r\n        name: '장애인',\r\n    },\r\n    {\r\n        id: 205,\r\n        name: '구호물품',\r\n    },\r\n];\r\n\r\nexport interface CommonInterface {\r\n    onMoveClick: (nextMove: number) => void;\r\n    index: number;\r\n}\r\n","import { CategoryStandInfo } from '../Category/DataModel';\r\nimport { GivingStandInfo } from '../Giving/DataModel';\r\n\r\nexport const getCategoryNameFromId = (id: number): string => {\r\n    const target = CategoryStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getGivingNameFromId = (id: number): string => {\r\n    const target = GivingStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getMoneyStr2Number = (str: string): number => {\r\n    return Math.floor(Number(str));\r\n};\r\n\r\nexport const getNumberString = (number: number): string => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport const getCategoryImgPath = (id: number): string => {\r\n    const prefix = '/images/';\r\n    switch (id) {\r\n        case 101:\r\n            return prefix + 'icn_lowPlastic.png';\r\n        case 102:\r\n            return prefix + 'icn_lowCarbon.png';\r\n        case 103:\r\n            return prefix + 'icn_noAnimalTesting.png';\r\n        case 104:\r\n            return prefix + 'icn_children.png';\r\n        case 105:\r\n            return prefix + 'icn_oldman.png';\r\n        case 106:\r\n            return prefix + 'icn_disabled.png';\r\n        case 107:\r\n            return prefix + 'icn_disabled_Product.png';\r\n        case 108:\r\n            return prefix + 'icn_relief.png';\r\n        case 109:\r\n            return prefix + 'icn_vegan.png';\r\n    }\r\n    return '';\r\n};\r\n","import {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport interface HeaderActionProps {\r\n    isLast: boolean;\r\n    headerTitle: string;\r\n    onMoveClick: () => void;\r\n}\r\n\r\nconst HeaderAction: React.FC<HeaderActionProps> = (\r\n    props: HeaderActionProps\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar style={{ alignItems: 'center' }}>\r\n                {!props.isLast && (\r\n                    <IconButton\r\n                        onClick={props.onMoveClick}\r\n                        className=\"back_div\"\r\n                    >\r\n                        <KeyboardArrowLeft\r\n                            style={{\r\n                                display: 'block',\r\n                            }}\r\n                        />\r\n                    </IconButton>\r\n                )}\r\n\r\n                <Typography className=\"txt_24 txt_b\">\r\n                    {props.headerTitle}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderAction;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport HeaderAction from '../Common/HeaderAction';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport interface GivingCommonProps {\r\n    headerTitle: string;\r\n    isLast: boolean;\r\n    buttonTitle: string;\r\n    buttonDisable?: boolean;\r\n    onMoveClick: (offset: number) => void;\r\n}\r\n\r\ntype GivingCommonType = React.PropsWithChildren<GivingCommonProps>;\r\n\r\nconst GivingCommon: React.FC<GivingCommonType> = (props: GivingCommonType) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            <HeaderAction\r\n                isLast={props.isLast}\r\n                headerTitle={props.headerTitle}\r\n                onMoveClick={() => props.onMoveClick(-1)}\r\n            />\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => props.onMoveClick(1)}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">{props.buttonTitle}</p>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GivingCommon;\r\n","import { Box, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingAmountState, GivingSelectState } from '../../recoil/Giving';\r\nimport { CurrentAccountState, CurrentUserState } from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { getNumberString } from '../Common/util';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    inputText: {\r\n        '&>div>input': {\r\n            textAlign: 'center',\r\n        },\r\n        '&>p': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst isValid = (origin: number, max: number) => {\r\n    return 0 < origin && origin <= max;\r\n};\r\n\r\nconst GivingAmountComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const classes = useStyles();\r\n\r\n    const [givingAmount, setGivingAmount] = useRecoilState(GivingAmountState);\r\n    const givingSelect = useRecoilValue(GivingSelectState);\r\n    const userAccount = useRecoilValue(CurrentAccountState);\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setGivingAmount(Number(event.target.value));\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await http.post(`/api/trading/donation`, {\r\n            userNickname: userInfo.nickname,\r\n            donationId: givingSelect[0].id,\r\n            donationPoint: givingAmount,\r\n        });\r\n        setOpen(false);\r\n        onMoveClick(index + 1);\r\n    };\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={!isValid(givingAmount, userAccount.point)}\r\n            onMoveClick={(nextMove: number) => {\r\n                if (nextMove < 0) {\r\n                    onMoveClick(index + nextMove);\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n\r\n                // onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <FingerDialog open={open} onClose={onClose} />\r\n            <p className=\"txt_20\">기부하고 싶은</p>\r\n            <p className=\"txt_20 txt_b\">금액을 입력하세요.</p>\r\n            <Box mt=\"25px\">\r\n                <TextField\r\n                    classes={{\r\n                        root: classes.inputText,\r\n                    }}\r\n                    style={{\r\n                        width: '80%',\r\n                        marginLeft: '10%',\r\n                    }}\r\n                    helperText={`최대 ${getNumberString(\r\n                        userAccount.point\r\n                    )} 원 입금 가능`}\r\n                    onChange={onChange}\r\n                />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingAmountComponent;\r\n","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: '100%' }}\r\n        >\r\n            <CircularProgress\r\n                style={{\r\n                    height: '4rem',\r\n                    width: '4rem',\r\n                    color: '#62C3EB',\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { COLOR_SET, DonationMember } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        display: 'inline-block',\r\n        maxWidth: '55px',\r\n        minWidth: '50px',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'right',\r\n        overflow: 'hidden !important',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    money: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif\",\r\n        fontSize: '17px',\r\n    },\r\n}));\r\n\r\nconst MAX_SHOW_MEMBER = 8;\r\n\r\ninterface GivingComponentDonationMemberProps {\r\n    donationMember: DonationMember[];\r\n}\r\n\r\nconst getOrderMember = (donationMember: DonationMember[]) => {\r\n    return donationMember\r\n        .slice()\r\n        .sort((d1, d2) => {\r\n            return d2.point - d1.point;\r\n        })\r\n        .slice(0, MAX_SHOW_MEMBER);\r\n};\r\n\r\nconst getRage = (sortMemger: DonationMember[]): [number, number] => {\r\n    const maxValueLen = sortMemger[0].point;\r\n    const minValueLen = sortMemger[sortMemger.length - 1].point;\r\n\r\n    if (sortMemger.length >= 1) {\r\n        const max = maxValueLen * 1.1;\r\n        const min = minValueLen * 0.9;\r\n        return [min, max];\r\n    } else {\r\n        return [0, 0];\r\n    }\r\n};\r\n\r\nconst GivingComponentDonationMember: React.FC<GivingComponentDonationMemberProps> = ({\r\n    donationMember,\r\n}: GivingComponentDonationMemberProps) => {\r\n    const classes = useStyles();\r\n    const orderMember = getOrderMember(donationMember);\r\n    const [start, end] = getRage(orderMember);\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    지난 달 기부왕👍\r\n                </Typography>\r\n                <Box>\r\n                    <Grid>\r\n                        {orderMember.map((eachMember, index) => {\r\n                            return (\r\n                                <Box\r\n                                    display=\"flex\"\r\n                                    key={eachMember.nickname}\r\n                                    my=\"1.5rem\"\r\n                                >\r\n                                    <Box\r\n                                        width=\"1.5rem\"\r\n                                        height=\"2rem\"\r\n                                        position=\"relative\"\r\n                                    >\r\n                                        {index <= 2 && (\r\n                                            <img\r\n                                                src={`/images/ICON_ranking${\r\n                                                    index + 1\r\n                                                }.png`}\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Box flexGrow=\"1\" ml=\"0.5rem\">\r\n                                        <Box\r\n                                            mt=\"0.3rem\"\r\n                                            height=\"40%\"\r\n                                            width={`${\r\n                                                (eachMember.point /\r\n                                                    (end - start)) *\r\n                                                100\r\n                                            }%`}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    COLOR_SET[\r\n                                                        index >= 5 ? 4 : index\r\n                                                    ],\r\n                                            }}\r\n                                        />\r\n                                        <Typography className={classes.money}>\r\n                                            {eachMember.point}원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Typography className={classes.text}>\r\n                                        {eachMember.nickname}\r\n                                    </Typography>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationMember;\r\n","import { Box, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getGivingNameFromId } from '../Common/util';\r\nimport { COLOR_SET, DonationCategory } from './DataModel';\r\n\r\ninterface GivingComponentDonationPieProps {\r\n    donationStatus: DonationCategory[];\r\n}\r\n\r\nconst GivingComponentDonationPie: React.FC<GivingComponentDonationPieProps> = ({\r\n    donationStatus,\r\n}: GivingComponentDonationPieProps) => {\r\n    const sortData = donationStatus\r\n        .filter((data) => data.totalDonationCount !== 0)\r\n        .sort((d1, d2) => {\r\n            return d2.totalDonationCount - d1.totalDonationCount;\r\n        });\r\n\r\n    const data = {\r\n        labels: new Array<string>(),\r\n        datasets: [\r\n            {\r\n                data: new Array<number>(),\r\n                backgroundColor: new Array<string>(),\r\n                borderColor: new Array<string>(),\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'right',\r\n                labels: {\r\n                    fontSize: 12,\r\n                    boxWidth: 12,\r\n                    usePointStyle: true,\r\n                },\r\n                onClick: null,\r\n            },\r\n        },\r\n        animation: {\r\n            duration: 0,\r\n        },\r\n    };\r\n\r\n    sortData.forEach((eachData, index) => {\r\n        data.labels.push(getGivingNameFromId(eachData.donationId));\r\n        data.datasets[0].data.push(eachData.totalDonationCount);\r\n        data.datasets[0].backgroundColor.push(COLOR_SET[index]);\r\n        data.datasets[0].borderColor.push('#00000000');\r\n    });\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">기부 현황</Typography>\r\n                <Box mt=\"1rem\">\r\n                    <Pie\r\n                        width={250}\r\n                        height={160}\r\n                        options={options}\r\n                        type=\"pie\"\r\n                        data={data}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationPie;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '36px',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\ninterface GivingComponentStatusProps {\r\n    money: number;\r\n}\r\n\r\nconst GivingComponentStatus: React.FC<GivingComponentStatusProps> = ({\r\n    money,\r\n}: GivingComponentStatusProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_20\">이번달에 모인</Typography>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    총 기부액이에요!\r\n                </Typography>\r\n                <Box mt=\"20px\">\r\n                    <Typography\r\n                        className={`txt_primaryBlue2 ${classes.moneyFont}`}\r\n                    >\r\n                        {getNumberString(money)}원\r\n                    </Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingResultState } from '../../recoil/Giving';\r\nimport Loading from '../Common/Loading';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\nimport GivingComponentDonationMember from './GivingComponentDonationMember';\r\nimport GivingComponentDonationPie from './GivingComponentDonationPie';\r\nimport GivingComponentStatus from './GivingComponentStatus';\r\n\r\nconst GivingComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingResultState);\r\n\r\n    useEffect(() => {\r\n        http.get('/api/trading/donation/statistics').then((res) => {\r\n            setGivingData({\r\n                isLoaded: true,\r\n                ...res.data.data,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"기부 동참하기\"\r\n        >\r\n            {givingData.isLoaded ? (\r\n                <>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentStatus\r\n                            money={givingData.totalDonationMoney}\r\n                        />\r\n                    </Box>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentDonationPie\r\n                            donationStatus={givingData.donationRatioStatus}\r\n                        />\r\n                    </Box>\r\n                    <Box my=\"1rem\">\r\n                        <GivingComponentDonationMember\r\n                            donationMember={givingData.memberDTOs}\r\n                        />\r\n                    </Box>\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingComponent;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingFinishComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={true}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"홈으로 이동\"\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                <Box mt=\"25px\" />\r\n                <Typography className=\"txt_20 txt_b\">\r\n                    기부 모금이 완료되었어요.\r\n                </Typography>\r\n                <Typography className=\"txt_20\">진영님의 나눔으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    세상이 한 층 더 밝아졌어요!\r\n                </Typography>\r\n                <br />\r\n                <Typography className=\"txt_20\">기부는 블록체인으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    투명하게 공개진행됩니다.\r\n                </Typography>\r\n                <Box flexGrow=\"1\" />\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src=\"/images/rending_4.png\" />\r\n                </p>\r\n                <Box mb=\"45px\" />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingFinishComponent;\r\n","import { Checkbox, FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent } from 'react';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    margin: {\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nexport interface CategoryDataInfo {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface SelectListProps {\r\n    standardData: CategoryDataInfo[];\r\n    selectData: CategoryDataInfo[];\r\n    onChange: (\r\n        data: CategoryDataInfo,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => void;\r\n}\r\n\r\nconst SelectList: React.FC<SelectListProps> = (props: SelectListProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {props.standardData.map((eachData) => {\r\n                return (\r\n                    <div\r\n                        key={eachData.id}\r\n                        className=\"box_div mg_t20 bg_wh height_80\"\r\n                    >\r\n                        <FormControlLabel\r\n                            style={{ display: 'flex' }}\r\n                            className=\"checkbox__label pd_t26 pd_l20\"\r\n                            control={\r\n                                <Checkbox\r\n                                    checkedIcon={\r\n                                        <CheckCircleOutlineIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    icon={\r\n                                        <RadioButtonUncheckedIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    color=\"primary\"\r\n                                    checked={\r\n                                        props.selectData.findIndex(\r\n                                            (select) =>\r\n                                                select.id === eachData.id\r\n                                        ) >= 0\r\n                                    }\r\n                                    onChange={(event) => {\r\n                                        props.onChange(eachData, event);\r\n                                    }}\r\n                                />\r\n                            }\r\n                            classes={{ label: classes.margin }}\r\n                            label={eachData.name}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectList;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { GivingSelectState } from '../../recoil/Giving';\r\nimport SelectList from '../Common/SelectList';\r\nimport { CommonInterface, GivingDataSet, GivingStandInfo } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingSelectComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingSelectState);\r\n\r\n    const onChange = (\r\n        data: GivingDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        console.log('Clicked');\r\n        if (event.currentTarget.checked) {\r\n            setGivingData([data]);\r\n        } else {\r\n            setGivingData([]);\r\n        }\r\n    };\r\n    console.log(givingData);\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={givingData.length === 0}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <p className=\"txt_20\">관심있는 카테고리 하나를 골라</p>\r\n            <p className=\"txt_20 txt_b\">기부하세요.</p>\r\n            <SelectList\r\n                selectData={givingData}\r\n                standardData={GivingStandInfo}\r\n                onChange={onChange}\r\n            />\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingSelectComponent;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport GivingAmountComponent from '../component/Giving/GivingAmountComponent';\r\nimport GivingComponent from '../component/Giving/GivingComponent';\r\nimport GivingFinishComponent from '../component/Giving/GivingFinishComponent';\r\nimport GivingSelectComponent from '../component/Giving/GivingSelectComponent';\r\nimport { GivingAmountState, GivingSelectState } from '../recoil/Giving';\r\n\r\nconst GivingPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const resetSelect = useResetRecoilState(GivingSelectState);\r\n    const resetAmount = useResetRecoilState(GivingAmountState);\r\n\r\n    const onNextMove = (nextMove: number) => {\r\n        if (nextMove < 0) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.goBack();\r\n            return;\r\n        }\r\n\r\n        if (nextMove > 3) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(nextMove);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                <GivingComponent index={0} onMoveClick={onNextMove} />\r\n                <GivingSelectComponent index={1} onMoveClick={onNextMove} />\r\n                <GivingAmountComponent index={2} onMoveClick={onNextMove} />\r\n                <GivingFinishComponent index={3} onMoveClick={onNextMove} />\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GivingPage;\r\n","import { atom } from 'recoil';\r\nimport {\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from '../component/Benefit/DataModel';\r\n\r\nexport const BenefitStateCompany = atom<BenefitCompanyRes>({\r\n    key: 'BenefitStateCompany',\r\n    default: {\r\n        isLoaded: false,\r\n        data: [],\r\n    },\r\n});\r\n\r\nexport const BenefitFavoriteState = atom<BenefitFavoriteCompany>({\r\n    key: 'BenefitFavoriteState',\r\n    default: {},\r\n});\r\n","import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface HeaderDeafaultProps {\r\n    icon: JSX.Element;\r\n    title: string;\r\n}\r\n\r\ntype HeaderDefaultType = PropsWithChildren<HeaderDeafaultProps>;\r\n\r\nconst HeaderDeafault: React.FC<HeaderDefaultType> = (\r\n    props: HeaderDefaultType\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\" style={{ backgroundColor: '#fafbfc' }}>\r\n            <Toolbar>\r\n                {props.icon}\r\n                <Box ml=\"0.5rem\">\r\n                    <Typography\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1.3rem',\r\n                        }}\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                </Box>\r\n            </Toolbar>\r\n            {props.children}\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderDeafault;\r\n","import { IconButton, makeStyles, Paper } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginRight: '5%',\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    img: {\r\n        width: '1rem',\r\n        height: '1rem',\r\n        margin: '0.5rem',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitInputTextProps {\r\n    inputText: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nconst HomeBenefitInputText: React.FC<HomeBenefitInputTextProps> = (\r\n    props: HomeBenefitInputTextProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <img className={classes.img} src=\"/images/ICON_Search.png\" />\r\n            <InputBase\r\n                className={classes.input}\r\n                value={props.inputText}\r\n                onChange={(event) => {\r\n                    props.onChange(event.target.value);\r\n                }}\r\n                placeholder=\"기업이나 제품들을 검색하세요.\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n            />\r\n            {props.inputText.length > 0 && (\r\n                <IconButton\r\n                    onClick={() => {\r\n                        props.onChange('');\r\n                    }}\r\n                >\r\n                    <img\r\n                        className={classes.img}\r\n                        src=\"/images/ICON_Close_Button.png\"\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitInputText;\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport React from 'react';\r\nimport { BenefitCompany } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    commonHeart: {\r\n        fontSize: '0.8rem !important',\r\n        color: 'gray',\r\n    },\r\n    selectedHeart: {\r\n        color: 'red !important',\r\n    },\r\n}));\r\n\r\nconst HomBenefitCompany: React.FC<BenefitCompany> = (props: BenefitCompany) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container wrap=\"nowrap\">\r\n                    <Grid container>\r\n                        <Typography className=\"txt_b txt_20\">\r\n                            {props.companyName}\r\n                        </Typography>\r\n                        <Typography className=\"txt_14\">\r\n                            {props.description}\r\n                        </Typography>\r\n                        <Grid>\r\n                            {props.userLike ? (\r\n                                <FavoriteIcon\r\n                                    className={`${classes.commonHeart} ${classes.selectedHeart}`}\r\n                                />\r\n                            ) : (\r\n                                <FavoriteBorderIcon\r\n                                    className={classes.commonHeart}\r\n                                />\r\n                            )}\r\n                            <Typography\r\n                                style={{\r\n                                    marginLeft: '0.4rem',\r\n                                    display: 'inline-block',\r\n                                }}\r\n                                className=\"txt_14 txt_gray1\"\r\n                            >\r\n                                {props.totalLike}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <img\r\n                            src={props.thumbNailPath.replace(/.jpg/gi, '.png')}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HomBenefitCompany;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSearchListProps {\r\n    searchText: string;\r\n}\r\n\r\nconst HomeBenefitSearchList: React.FC<HomeBenefitSearchListProps> = ({\r\n    searchText,\r\n}: HomeBenefitSearchListProps) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            const categoryName = getCategoryNameFromId(eachData.categoryId);\r\n            console.log(\r\n                `Current Category Name ${categoryName} ${eachData.companyName} ${searchText}`\r\n            );\r\n            return (\r\n                categoryName.includes(searchText) ||\r\n                eachData.companyName.includes(searchText)\r\n            );\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [searchText]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSearchList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitListProps {\r\n    categoryId: number;\r\n}\r\n\r\nconst HomeBenefitList: React.FC<HomeBenefitListProps> = (\r\n    props: HomeBenefitListProps\r\n) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            return eachData.categoryId === props.categoryId;\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [benefitCompany.data]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport { commonSlickSettings } from '../Common';\r\nimport HomeBenefitList from './HomeBenefitList';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: 'rgb(250, 251, 252)',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSliderProps {\r\n    pageIndex: number;\r\n}\r\n\r\nconst HomeBenefitSlider: React.FC<HomeBenefitSliderProps> = (\r\n    props: HomeBenefitSliderProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        sliderRef.current && sliderRef.current.slickGoTo(props.pageIndex);\r\n    }, [props.pageIndex]);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n    const override = commonSlickSettings;\r\n    override.speed = 100;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider {...override} ref={sliderRef}>\r\n                {CategoryStandInfo.map((eachData, index) => {\r\n                    return (\r\n                        <TabPanel\r\n                            key={props.pageIndex}\r\n                            value={props.pageIndex}\r\n                            index={index}\r\n                        >\r\n                            <HomeBenefitList categoryId={eachData.id} />\r\n                        </TabPanel>\r\n                    );\r\n                })}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSlider;\r\n","import {\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport enum DISPLAY_TYPE {\r\n    HOME,\r\n    BENEFIT,\r\n    TOGETHER,\r\n    SETTING,\r\n}\r\n\r\ninterface BottomBarNavProps {\r\n    current: DISPLAY_TYPE;\r\n    onChange: (clickType: DISPLAY_TYPE) => void;\r\n}\r\n\r\nconst BottomBarNav: React.FC<BottomBarNavProps> = (\r\n    props: BottomBarNavProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (\r\n        event: React.ChangeEvent<any>,\r\n        newValue: DISPLAY_TYPE\r\n    ) => {\r\n        props.onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={props.current}\r\n            onChange={handleChange}\r\n            showLabels={true}\r\n        >\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"홈\"\r\n                value={DISPLAY_TYPE.HOME}\r\n                icon={<HomeIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"혜택찾기\"\r\n                value={DISPLAY_TYPE.BENEFIT}\r\n                icon={<StorefrontIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"투게더\"\r\n                value={DISPLAY_TYPE.TOGETHER}\r\n                icon={<PeopleIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"My\"\r\n                value={DISPLAY_TYPE.SETTING}\r\n                icon={<SettingsIcon />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default BottomBarNav;\r\n","import { Box, Tab, Tabs } from '@material-ui/core';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport {\r\n    BenefitCompany,\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from './DataModel';\r\nimport HomeBenefitInputText from './HomeBenefitInputText';\r\nimport HomeBenefitSearchList from './HomeBenefitSearchList';\r\nimport HomeBenefitSlider from './HomeBenefitSlider';\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst HomeBenefitComponent: React.FC = () => {\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [searchText, setSearchText] = useState<string>('');\r\n    const [benefitCompany, setBenefitCompany] = useRecoilState(\r\n        BenefitStateCompany\r\n    );\r\n    const setFavoriteState = useSetRecoilState(BenefitFavoriteState);\r\n\r\n    useEffect(() => {\r\n        if (benefitCompany.isLoaded) {\r\n            return;\r\n        }\r\n        http.get(`/api/${encodeURI(userInfo.nickname)}/company`).then((res) => {\r\n            const isertArr: BenefitCompanyRes = {\r\n                isLoaded: true,\r\n                data: [],\r\n            };\r\n            const benefitData: BenefitFavoriteCompany = {};\r\n            res.data.data.forEach((eachData: BenefitCompany) => {\r\n                isertArr.data.push({\r\n                    categoryId: eachData.categoryId,\r\n                    companyName: eachData.companyName,\r\n                    description: eachData.description,\r\n                    thumbNailPath: eachData.thumbNailPath.replace(\r\n                        /\\/\\//gi,\r\n                        '/'\r\n                    ),\r\n                    totalLike: eachData.totalLike,\r\n                });\r\n                benefitData[eachData.companyName] = eachData.userLike;\r\n            });\r\n            setBenefitCompany(isertArr);\r\n            setFavoriteState(benefitData);\r\n        });\r\n    }, []);\r\n\r\n    const onChange = (value: string) => {\r\n        setSearchText(value);\r\n    };\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n\r\n    const tabChange = (event: ChangeEvent<any>, nextValue: number) => {\r\n        setPage(nextValue);\r\n    };\r\n\r\n    const isSearchMode = searchText.length !== 0;\r\n\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<StorefrontIcon />} title=\"혜택 찾기\">\r\n                <HomeBenefitInputText\r\n                    inputText={searchText}\r\n                    onChange={onChange}\r\n                />\r\n                {!isSearchMode && (\r\n                    <Tabs\r\n                        value={page}\r\n                        onChange={tabChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {CategoryStandInfo.map((eachData, index) => {\r\n                            return (\r\n                                <Tab\r\n                                    key={index}\r\n                                    label={eachData.name}\r\n                                    {...a11yProps(index)}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Tabs>\r\n                )}\r\n            </HeaderDeafault>\r\n            {isSearchMode ? (\r\n                <Box p={3}>\r\n                    <HomeBenefitSearchList searchText={searchText} />\r\n                </Box>\r\n            ) : (\r\n                <HomeBenefitSlider pageIndex={page} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitComponent;\r\n","export enum SIGNUP_TYPE {\r\n    PROFILE,\r\n    ACCOUNT,\r\n    ADD_CATEGORY,\r\n    BILL_INFO,\r\n    PASSWORD,\r\n}\r\n\r\nexport interface SignupAccountInterface {\r\n    ACCT_KND: string;\r\n    ACNO: string;\r\n    ACT_STCD: string;\r\n    ADNT_RGS_YN: string;\r\n    CUCD: string;\r\n    FAXC_BAL: string;\r\n    NEW_DT: string;\r\n    PBOK_BAL: string;\r\n    PRD_NM: string;\r\n    PSKL_ACT_YN: string;\r\n    XPR_DT: string;\r\n}\r\n\r\nexport interface SignupProfileInterface {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SignupComponentProps {\r\n    checkCurrent?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\nexport interface SignupProfileInfo {\r\n    realName: string;\r\n    nickName: string;\r\n    cellNumber: string;\r\n}\r\n\r\nexport const rendingData: Array<SignupProfileInterface> = [\r\n    {\r\n        title: '이름을 알려주세요.',\r\n        description: '이름',\r\n    },\r\n    {\r\n        title: '닉네임을 정해주세요.',\r\n        description: '닉네임',\r\n    },\r\n    {\r\n        title: '휴대폰번호를 입력하세요.',\r\n        description: '휴대폰번호',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n} from '../../recoil/Session';\r\nimport { getCategoryImgPath, getCategoryNameFromId } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\ninterface CategoryIconProps {\r\n    id: number;\r\n}\r\n\r\nconst CategoryIcon: React.FC<CategoryIconProps> = (\r\n    props: CategoryIconProps\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <img\r\n                src={getCategoryImgPath(props.id)}\r\n                style={{ width: '3.5rem', height: '3.5rem', margin: 'auto' }}\r\n            />\r\n            <Typography style={{ textAlign: 'center' }}>\r\n                {getCategoryNameFromId(props.id)}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [category, setCategory] = useRecoilState(CurrentUserCategoryState);\r\n\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    };\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${encodeURI(userInfo.nickname)}/category`).then(\r\n            (res) => {\r\n                const resCategory = res.data.data.map(\r\n                    (eachData: any) => eachData.categoryId\r\n                );\r\n                setCategory(resCategory);\r\n            }\r\n        );\r\n    }, [userInfo]);\r\n\r\n    if (category.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>내가 선택한 혜택</Typography>} />\r\n            <CardContent>\r\n                <Box display=\"flex\">\r\n                    {category.map((eachCategory: number) => {\r\n                        return (\r\n                            <Box key={eachCategory} margin=\"auto\">\r\n                                <CategoryIcon id={eachCategory} />\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Typography onClick={onClick} variant=\"caption\">\r\n                    혜택을 바꾸고 싶나요?\r\n                </Typography>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import { Box, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getCategoryNameFromId, getNumberString } from '../Common/util';\r\nimport { TransactionSet } from './DataModel';\r\n\r\nexport interface BenefitListProps {\r\n    data: TransactionSet[];\r\n}\r\n\r\nconst extractDate = (date: string): string => {\r\n    const c = new Date(date);\r\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n    return `${c.getMonth()}월 ${c.getDate()} (${week[c.getDay()]})`;\r\n};\r\n\r\nconst BenefitList: React.FC<BenefitListProps> = ({\r\n    data,\r\n}: BenefitListProps) => {\r\n    return (\r\n        <>\r\n            {data.map((eachData, index, arr) => {\r\n                return (\r\n                    <Box key={index} mt={index === 0 ? '0px' : '5px'}>\r\n                        <Typography className={`txt_14`}>\r\n                            {extractDate(eachData.date)}\r\n                        </Typography>\r\n                        <Grid container style={{ marginTop: '5px' }}>\r\n                            <Grid>\r\n                                <Typography className={`txt_16`}>\r\n                                    {eachData.companyName}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Box flexGrow=\"1\" />\r\n\r\n                            <Grid style={{ textAlign: 'right' }}>\r\n                                <Typography className={`txt_16`}>\r\n                                    {getNumberString(eachData.totalBuyPrice)}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_14 txt_primaryBlue2`}\r\n                                >{`${getCategoryNameFromId(\r\n                                    eachData.categoryId\r\n                                )} 적립 ${getNumberString(\r\n                                    eachData.point\r\n                                )}`}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {arr.length - 1 !== index && (\r\n                            <div className=\"line bg_gray3 mg_t20\" />\r\n                        )}\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BenefitList;\r\n","export interface TransactionSet {\r\n    companyName: string;\r\n    categoryId: number;\r\n    totalBuyPrice: number;\r\n    point: number;\r\n    date: string;\r\n}\r\n\r\nexport const DummyTransactionData: TransactionSet[] = [\r\n    {\r\n        date: '2021-04-08',\r\n        companyName: '연화바루',\r\n        totalBuyPrice: -32000,\r\n        categoryId: 101,\r\n        point: 1600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -12000,\r\n        categoryId: 102,\r\n        point: 600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '테스트1',\r\n        totalBuyPrice: -37000,\r\n        categoryId: 104,\r\n        point: 3600,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '테스트2',\r\n        totalBuyPrice: -1200,\r\n        categoryId: 101,\r\n        point: 60,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -1000,\r\n        categoryId: 101,\r\n        point: 10,\r\n    },\r\n];\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n    CurrentUserTransactionState,\r\n} from '../../recoil/Session';\r\nimport BenefitList from './BenefitList';\r\nimport { DummyTransactionData, TransactionSet } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst DISPLAY_COUNT = 3;\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const userCategory = useRecoilValue(CurrentUserCategoryState);\r\n    const [transaction, setTransaction] = useRecoilState(\r\n        CurrentUserTransactionState\r\n    );\r\n    const [displaySet, setDisplaySet] = useState<TransactionSet[]>([]);\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/trading/benefits/${encodeURI(userInfo.nickname)}`).then(\r\n            (res) => {\r\n                let data: TransactionSet[] = [];\r\n                if (res.data.data.length === 0) {\r\n                    data = DummyTransactionData;\r\n                } else {\r\n                    data = res.data.data;\r\n                }\r\n                data = data.filter((eachData) => {\r\n                    return userCategory.includes(eachData.categoryId);\r\n                });\r\n                setDisplaySet(data.slice(0, DISPLAY_COUNT));\r\n                setTransaction(data);\r\n            }\r\n        );\r\n    }, [userCategory]);\r\n\r\n    if (displaySet.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>혜택 적립 내역</Typography>} />\r\n            <CardContent>\r\n                <BenefitList data={displaySet} />\r\n            </CardContent>\r\n            {transaction.length > DISPLAY_COUNT && (\r\n                <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                    <Button\r\n                        className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    >\r\n                        이용 내역 더 보기\r\n                    </Button>\r\n                </CardActions>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentAccountState, CurrentUserState } from '../../recoil/Session';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    moneyFont: {\r\n        fontSize: '26px',\r\n        fontFamily: '\"Recursive\", sans-serif',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst HCStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [account, setAccount] = useRecoilState(CurrentAccountState);\r\n\r\n    useEffect(() => {\r\n        if (userInfo.nickname) {\r\n            http.get(`/api/members/${encodeURI(userInfo.nickname)}`).then(\r\n                (res) => {\r\n                    setAccount({\r\n                        accountMoney: res.data.data.accountMoney,\r\n                        point: res.data.data.point,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const onGivingClick = () => {\r\n        history.push('/giving');\r\n    };\r\n\r\n    return (\r\n        <Card style={{ backgroundColor: '#62C3EB', borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className={classes.dfColor}>\r\n                    {`${userInfo.name}님의`}\r\n                    <br />\r\n                    혜택통 현황입니다.\r\n                </Typography>\r\n                <Typography\r\n                    className={`${classes.inline} ${classes.moneyFont} ${classes.dfColor}`}\r\n                >\r\n                    {getNumberString(account.point)}\r\n                </Typography>\r\n                <Typography className={`${classes.inline} ${classes.dfColor}`}>\r\n                    원\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    disabled\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    내 계좌로 인출\r\n                </Button>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    onClick={onGivingClick}\r\n                >\r\n                    기부하기\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport React from 'react';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport HCBenefit from './HCBenefit';\r\nimport HCPoint from './HCPoint';\r\nimport HCStatus from './HCStatus';\r\n\r\nconst HomeComponent: React.FC = () => {\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<HomeIcon />} title=\"홈\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                <Box mt=\"1rem\">\r\n                    <HCStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <HCBenefit />\r\n                </Box>\r\n                <Box my=\"1rem\">\r\n                    <HCPoint />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import React from 'react';\r\n\r\nconst SettingComponent: React.FC = () => {\r\n    return <>this is setting</>;\r\n};\r\n\r\nexport default SettingComponent;\r\n","import React from 'react';\r\n\r\nconst TogetherComponent: React.FC = () => {\r\n    return <>this is togheter</>;\r\n};\r\n\r\nexport default TogetherComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport HomeBenefitComponent from '../component/Benefit/HomeBenefitComponent';\r\nimport BottomBarNav, { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport HomeComponent from '../component/Home/HomeComponent';\r\nimport SettingComponent from '../component/Setting/SettingComponent';\r\nimport TogetherComponent from '../component/Together/TogetherComponent';\r\n\r\nconst homeRendering = (type: DISPLAY_TYPE) => {\r\n    switch (type) {\r\n        case DISPLAY_TYPE.HOME:\r\n            return <HomeComponent />;\r\n        case DISPLAY_TYPE.BENEFIT:\r\n            return <HomeBenefitComponent />;\r\n        case DISPLAY_TYPE.TOGETHER:\r\n            return <TogetherComponent />;\r\n        case DISPLAY_TYPE.SETTING:\r\n            return <SettingComponent />;\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n    const [renderType, setCurrentRenderType] = useState<DISPLAY_TYPE>(\r\n        DISPLAY_TYPE.HOME\r\n    );\r\n\r\n    const onChange = (type: DISPLAY_TYPE) => {\r\n        setCurrentRenderType(type);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Box className=\"glow_body\" overflow=\"hidden\">\r\n                {homeRendering(renderType)}\r\n            </Box>\r\n            <BottomBarNav current={renderType} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface RenderComponentInterface {\r\n    title: { first: string; second: string };\r\n    description: string[];\r\n    highLight: string;\r\n    imgPath: string;\r\n}\r\n\r\nexport const rendingData: Array<RenderComponentInterface> = [\r\n    {\r\n        title: { first: '내맘대로', second: '혜택고르기!' },\r\n        description: ['정해진 틀에 맞춰서', '혜택받기는 싫어!'],\r\n        highLight: '내가 관심있는 카테고리 대로 혜택을!',\r\n        imgPath: '/images/rending_1.png',\r\n    },\r\n    {\r\n        title: { first: '나는 소비하면서', second: '사회까지 생각한다!' },\r\n        description: ['환경, 유기견, 소상공인', '저소득층, 동물보호...'],\r\n        highLight: '작은 소비 하나하나 모여 사회를 개선!',\r\n        imgPath: '/images/rending_2.png',\r\n    },\r\n    {\r\n        title: { first: '내가 이 골목 혜택왕!', second: '친구들과 혜택대결' },\r\n        description: ['누가 누가', '더 많이 혜택을 모았나?'],\r\n        highLight: '여기 모여라! 친구들끼리 혜택 대결!',\r\n        imgPath: '/images/rending_3.png',\r\n    },\r\n    {\r\n        title: { first: '혜택을 모아모아', second: '기부까지?!' },\r\n        description: [\r\n            '혜택받은 금액을 인출하거나',\r\n            '원하는 곳에 기부할 수 있지!',\r\n        ],\r\n        highLight: \"우리은행에서 '모인 기부액의 2배를' 기부!\",\r\n        imgPath: '/images/rending_4.png',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { RenderComponentInterface } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    buttonOverride: {\r\n        position: 'absolute !important' as 'absolute',\r\n    },\r\n}));\r\n\r\ninterface RenderingPageProps {\r\n    data: RenderComponentInterface;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\ntype PropsType = RenderingPageProps & { isFirst: boolean };\r\n\r\nconst RendingComponent: React.FC<PropsType> = ({\r\n    data,\r\n    ...props\r\n}: PropsType) => {\r\n    const classes = useStyles();\r\n\r\n    const onNextClick = () => {\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        props.onMoveButtonClick(-1);\r\n    };\r\n\r\n    return (\r\n        <Box style={{ position: 'relative' }} width=\"100%\" height=\"100%\">\r\n            <div className=\"container mg_t10\" style={{ overflowX: 'visible' }}>\r\n                <IconButton\r\n                    className={`back_div ${props.isFirst && 'hide'}`}\r\n                    onClick={onBackClick}\r\n                >\r\n                    <KeyboardArrowLeft />\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                <p className=\"rd_posi_1 txt_30\">{data.title.first}</p>\r\n                <p className=\"rd_posi_2 txt_30 txt_b\">{data.title.second}</p>\r\n\r\n                <p className=\"rd_posi_3 txt_18\">\r\n                    {data.description[0]}\r\n                    <br />\r\n                    {data.description[1]}\r\n                </p>\r\n                <div\r\n                    className=\"txt_back_highlight\"\r\n                    style={{ width: '276px' }}\r\n                />\r\n                <p className=\"rd_posi_4 txt_18 txt_b\">{data.highLight}</p>\r\n            </div>\r\n            <div className=\"pd_b30 rd_posi_img\" style={{ left: '5%' }}>\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src={data.imgPath} />\r\n                </p>\r\n            </div>\r\n            <Button\r\n                className={`btn_bottom bg_primaryblue ${classes.buttonOverride}`}\r\n                onClick={onNextClick}\r\n            >\r\n                <Typography className={`p_btn_bottom txt_wh txt_b`}>\r\n                    다음\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RendingComponent;\r\n","import { Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    imgContainer: {\r\n        width: '100px',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        width: '100%',\r\n    },\r\n    bodyReplace: {\r\n        zIndex: -1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst SigninPage: React.FC = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const onClickSignup = () => {\r\n        history.push('/signup');\r\n    };\r\n\r\n    const postMessage = (event: any) => {\r\n        event.preventDefault();\r\n        console.log(`Post Message Called`);\r\n        if (window && window.parent) {\r\n            console.log(`Post Send`);\r\n            window.parent.postMessage(1, '*');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={postMessage} style={{ display: 'absolute' }}>\r\n                IFrame Message Test\r\n            </Button>\r\n            <div className={`bg_primaryblue ${classes.bodyReplace}`} />\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt pd_t60\">\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            style={{ width: '100px' }}\r\n                            className={`pd_t130 ${classes.imgContainer}`}\r\n                            src=\"images/Logo.png\"\r\n                        />\r\n                    </p>\r\n                    <p className=\"txt_24 txt_wh txt_center\">환영합니다!</p>\r\n                </div>\r\n\r\n                <div className=\"login_btn\">\r\n                    <Button\r\n                        onClick={onClickSignup}\r\n                        className={classes.button}\r\n                        style={{ backgroundColor: 'white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_primaryBlue txt_center txt_b\">\r\n                            혜택통 첫달 무료 체험하기\r\n                        </p>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={`mg_t10 ${classes.button}`}\r\n                        style={{ border: '1px solid white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_wh txt_center\">기존 사용자 로그인</p>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SigninPage;\r\n","import React, { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData as MainRendingData,\r\n    rendingData,\r\n} from '../component/Rending/DataModel';\r\nimport RendingPage from '../component/Rending/RendingComponent';\r\nimport { IsSplashSkip } from '../recoil/Session';\r\nimport SigninPage from './SigninPage';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [isSplashSkip, setIsSplashSkip] = useRecoilState(IsSplashSkip);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n\r\n    const onMoveButtonClick = (index: number, move: number) => {\r\n        if (index + move >= MainRendingData.length) {\r\n            setIsSplashSkip(true);\r\n        } else if (index + move === -1) {\r\n            return;\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSplashSkip ? (\r\n                <SigninPage />\r\n            ) : (\r\n                <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                    {rendingData.map((eachData, index) => {\r\n                        return (\r\n                            <RendingPage\r\n                                key={eachData.title.first}\r\n                                data={eachData}\r\n                                isFirst={index === 0}\r\n                                onMoveButtonClick={(move) =>\r\n                                    onMoveButtonClick(index, move)\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n                </Slider>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface SignUpCommon {\r\n    buttonDisable: boolean;\r\n    isLast?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n    onCustomizeNextClick?: () => void;\r\n}\r\n\r\nconst SignupCommonComponent: React.FC<PropsWithChildren<SignUpCommon>> = (\r\n    props: PropsWithChildren<SignUpCommon>\r\n) => {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar style={{ alignItems: 'center' }}>\r\n                    {!props.isLast && (\r\n                        <IconButton\r\n                            className=\"back_div\"\r\n                            disabled={props.isLast}\r\n                            onClick={() => props.onMoveButtonClick(-1)}\r\n                        >\r\n                            <KeyboardArrowLeft\r\n                                style={{\r\n                                    display: `${\r\n                                        props.isLast ? 'none' : 'block'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    )}\r\n                    <Typography className=\"txt_24 txt_b\">\r\n                        혜택통 만들기\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => {\r\n                    props.onCustomizeNextClick\r\n                        ? props.onCustomizeNextClick()\r\n                        : props.onMoveButtonClick(1);\r\n                }}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">\r\n                    {props.isLast ? '완료! 혜택 받으러 가기' : '다음'}\r\n                </p>\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupCommonComponent;\r\n","import {\r\n    Box,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpAccInfoState, SignUpProfileState } from '../../recoil/Session';\r\nimport { getMoneyStr2Number, getNumberString } from '../Common/util';\r\nimport { SignupAccountInterface, SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst useStyles = makeStyles({\r\n    labelLayout: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        paddingTop: 0,\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nconst AccountComponent: React.FC<SignupAccountInterface> = (\r\n    props: SignupAccountInterface\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <Grid>\r\n                <Typography>계좌번호: {props.ACNO}</Typography>\r\n            </Grid>\r\n            <Grid>\r\n                <Typography>\r\n                    잔액: {getNumberString(getMoneyStr2Number(props.PBOK_BAL))}\r\n                </Typography>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SignupAccountComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const setAccount = useSetRecoilState(SignUpAccInfoState);\r\n    const signupInfo = useRecoilValue(SignUpProfileState);\r\n\r\n    const [wooriAccountList, setWooriAccountList] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    const [selectAccount, setSelectAccount] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    console.log('Account Called');\r\n    console.log(props.checkCurrent);\r\n    useEffect(() => {\r\n        if (props.checkCurrent) {\r\n            let regex = /(\\d{3})(\\d{3})(\\d{4})/;\r\n            if (signupInfo.cellNumber.length === 11) {\r\n                regex = /(\\d{3})(\\d{4})(\\d{4})/;\r\n            }\r\n            const cellFormat = signupInfo.cellNumber.replace(regex, '$1-$2-$3');\r\n            http.get(\r\n                `/api/wooribank/userPhoneNumber/${encodeURI(\r\n                    cellFormat\r\n                )}/accounts`\r\n            ).then((res) => {\r\n                const data: SignupAccountInterface[] = (res.data.dataBody\r\n                    .GRID as SignupAccountInterface[]).filter((eachData) => {\r\n                    return eachData.ACCT_KND.toUpperCase() === 'P';\r\n                });\r\n                setWooriAccountList(data);\r\n            });\r\n        }\r\n    }, [props.checkCurrent]);\r\n\r\n    const onChange = (\r\n        data: SignupAccountInterface,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            setSelectAccount([data]);\r\n            setAccount({\r\n                accountNumber: data.ACNO,\r\n                accountMoney: getMoneyStr2Number(data.PBOK_BAL),\r\n            });\r\n        } else {\r\n            setSelectAccount([]);\r\n        }\r\n    };\r\n\r\n    console.log(selectAccount);\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={selectAccount.length === 0}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">\r\n                    결재하실 계좌번호를 선택해 주세요.\r\n                </p>\r\n\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    {wooriAccountList.map((eachData) => {\r\n                        return (\r\n                            <div\r\n                                key={eachData.ACNO}\r\n                                className=\"box_div mg_t20 bg_wh height_80\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    style={{ display: 'flex' }}\r\n                                    className=\"checkbox__label pd_l20\"\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checkedIcon={\r\n                                                <CheckCircleOutlineIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            icon={\r\n                                                <RadioButtonUncheckedIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            color=\"primary\"\r\n                                            checked={\r\n                                                selectAccount.findIndex(\r\n                                                    (select) =>\r\n                                                        select.ACNO ===\r\n                                                        eachData.ACNO\r\n                                                ) >= 0\r\n                                            }\r\n                                            onChange={(event) =>\r\n                                                onChange(eachData, event)\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                    classes={{ root: classes.labelLayout }}\r\n                                    label={<AccountComponent {...eachData} />}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAccountComponent;\r\n","import { Box, Button, Dialog, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { SignUpCategoryState } from '../../recoil/Session';\r\nimport { CategoryDataSet, CategoryStandInfo } from '../Category/DataModel';\r\nimport SelectList from '../Common/SelectList';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst LIMIT = 2;\r\n\r\nconst ACCategoryDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>니가원하는거슨 비건어쩌고저쩌고</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst ACOverDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Box mt=\"15px\" mx=\"15px\">\r\n                <Typography>딱 2가지만 선택해주세요</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Button onClick={handleOk} className=\"p_btn_bottom txt_b\">\r\n                    확인\r\n                </Button>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCategoryComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [category, setCategory] = useRecoilState<CategoryDataSet[]>(\r\n        SignUpCategoryState\r\n    );\r\n    const [suggestDialog, setSuggestDialog] = useState<boolean>(false);\r\n    const [overDialog, setOverDialog] = useState<boolean>(false);\r\n    const buttonDisable = category.length !== 2;\r\n\r\n    const selectData = (\r\n        data: CategoryDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            if (category.length < LIMIT) {\r\n                setCategory([...category, data]);\r\n            } else {\r\n                setOverDialog(true);\r\n            }\r\n        } else {\r\n            setCategory(category.filter((item) => data !== item));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACCategoryDialog\r\n                open={suggestDialog}\r\n                onClose={() => {\r\n                    setSuggestDialog(false);\r\n                }}\r\n            />\r\n            <ACOverDialog\r\n                open={overDialog}\r\n                onClose={() => {\r\n                    setOverDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={buttonDisable}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20\">관심있는 카테고리 2가지를 골라</p>\r\n                <p className=\"txt_20 txt_b\">집중 혜택 받으세요.</p>\r\n\r\n                <SelectList\r\n                    selectData={category}\r\n                    standardData={CategoryStandInfo}\r\n                    onChange={selectData}\r\n                />\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCategoryComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst SignupFinishComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={false}\r\n                onMoveButtonClick={() => props.onMoveButtonClick(1)}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box mt=\"25px\" />\r\n                    <p className=\"txt_20 txt_b\">축하합니다!</p>\r\n                    <p className=\"txt_20\">혜택통이 만들어졌어요!</p>\r\n                    <p className=\"txt_20\">이제 착한 소비하고</p>\r\n                    <p className=\"txt_20\">혜택도 받으세요.</p>\r\n                    <Box flexGrow=\"1\" />\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            className=\"img_rending\"\r\n                            src=\"/images/rending_1.png\"\r\n                        />\r\n                    </p>\r\n                    <Box mb=\"45px\" />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupFinishComponent;\r\n","import { Box, IconButton, InputAdornment, TextField } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentAccountState,\r\n    CurrentUserState,\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n    UserAccount,\r\n    UserInfo,\r\n} from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupUserModel {\r\n    name: string;\r\n    nickname: string;\r\n    accountNumber: string;\r\n    accountMoney: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n}\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\nconst SignupPasswordComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const setUserState = useSetRecoilState<UserInfo>(CurrentUserState);\r\n    const setAccountState = useSetRecoilState(CurrentAccountState);\r\n\r\n    const signupProfile = useRecoilValue(SignUpProfileState);\r\n    const accountInfo = useRecoilValue(SignUpAccInfoState);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccNum = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n\r\n    const [fingerDialog, setFingerDialog] = useState<boolean>(false);\r\n\r\n    const signupFunction = async () => {\r\n        const signupData: SignupUserModel = {\r\n            name: signupProfile.realName,\r\n            nickname: signupProfile.nickName,\r\n            phoneNumber: signupProfile.cellNumber,\r\n            accountNumber: accountInfo.accountNumber,\r\n            password: password,\r\n            accountMoney: accountInfo.accountMoney + '',\r\n        };\r\n        const signupCategory: SignupCategory = {\r\n            benefitCategoryList: [\r\n                {\r\n                    categoryId: 101,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n                {\r\n                    categoryId: 102,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const createRes = await http.post('/api/members', signupData); // user 먼저 만들어져야함\r\n        console.log(createRes);\r\n        const registRes = await http.post(\r\n            '/api/members/category',\r\n            signupCategory\r\n        ); // user 먼저 만들어져야함\r\n        console.log(registRes);\r\n        const userRes = await http.get(\r\n            `/api/members/${encodeURI(signupProfile.nickName)}`\r\n        ); // user 먼저 만들어져야함\r\n        console.log(userRes.data.data);\r\n        const currentUser: UserInfo & UserAccount = userRes.data.data;\r\n\r\n        setUserState({\r\n            accountNumber: currentUser.accountNumber,\r\n            name: currentUser.name,\r\n            nickname: currentUser.nickname,\r\n            phoneNumber: currentUser.phoneNumber,\r\n        });\r\n        setAccountState({\r\n            accountMoney: currentUser.accountMoney,\r\n            point: currentUser.point,\r\n        });\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await signupFunction();\r\n        resetProfile();\r\n        resetAccNum();\r\n        resetCategory();\r\n\r\n        setFingerDialog(false);\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <FingerDialog open={fingerDialog} onClose={onClose} />\r\n            <SignupCommonComponent\r\n                buttonDisable={password === ''}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n                onCustomizeNextClick={() => {\r\n                    setFingerDialog(true);\r\n                }}\r\n            >\r\n                <p className=\"txt_20 txt_b\">앱 사용을 위한</p>\r\n                <p className=\"txt_20\">비밀번호를 설정해 주세요.</p>\r\n\r\n                <Box mt=\"25px\">\r\n                    <TextField\r\n                        style={{ width: '80%', marginLeft: '10%' }}\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        InputProps={{\r\n                            // <-- This is where the toggle button is added.\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <Visibility\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        ) : (\r\n                                            <VisibilityOff\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPasswordComponent;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport {\r\n    SignupComponentProps,\r\n    SignupProfileInfo,\r\n    SignupProfileInterface,\r\n} from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ntype SignupProfileProps = SignupComponentProps & {\r\n    data: SignupProfileInterface;\r\n    index: number;\r\n};\r\n\r\nconst parseData = (data: SignupProfileInfo, index: number): string => {\r\n    switch (index) {\r\n        case 0:\r\n            return data.realName;\r\n        case 1:\r\n            return data.nickName;\r\n        case 2:\r\n            return data.cellNumber;\r\n    }\r\n    return '';\r\n};\r\n\r\nconst SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n    props: SignupProfileProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n    const value = parseData(profile, props.index);\r\n    const buttonDisable = value === '';\r\n    const [inValid, setInValid] = useState<boolean>(false);\r\n    const [helperText, setHelperText] = useState<string>('');\r\n\r\n    const onChange = (index: number, data: string) => {\r\n        switch (index) {\r\n            case 0:\r\n                setProfile({ ...profile, realName: data });\r\n                break;\r\n            case 1:\r\n                if (data !== '') {\r\n                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n                        (res) => {\r\n                            const alreadyExist: boolean = res.data.data;\r\n                            if (alreadyExist !== inValid) {\r\n                                setInValid(alreadyExist);\r\n                                setHelperText('이미 존재하는 닉네임입니다.');\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                setProfile({ ...profile, nickName: data });\r\n\r\n                break;\r\n            case 2:\r\n                let onlyNums = data.replace(/[^0-9]/g, '');\r\n                if (onlyNums.length > 11) {\r\n                    onlyNums = onlyNums.slice(0, 11);\r\n                }\r\n                setProfile({ ...profile, cellNumber: onlyNums });\r\n                if (onlyNums.length < 10 || onlyNums.length > 11) {\r\n                    setInValid(true);\r\n                    setHelperText('휴대전화 번호는 10~11 자리입니다');\r\n                } else {\r\n                    setInValid(false);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={buttonDisable || inValid}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    <div className=\"pd_t16 mg_l16\"></div>\r\n                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                        <TextField\r\n                            error={inValid}\r\n                            helperText={inValid && helperText}\r\n                            value={value}\r\n                            onChange={(event) => {\r\n                                onChange(props.index, event.target.value);\r\n                            }}\r\n                            label={props.data.description}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupProfileComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData,\r\n    SignupProfileInterface,\r\n} from '../component/Signup/DataModel';\r\nimport SignupAccountComponent from '../component/Signup/SignupAccountComponent';\r\nimport SignupCategoryComponent from '../component/Signup/SignupCategoryComponent';\r\nimport SignupFinishComponent from '../component/Signup/SignupFinishComponent';\r\nimport SignupPasswordComponent from '../component/Signup/SignupPasswordComponent';\r\nimport SignupProfileComponent from '../component/Signup/SignupProfileComponent';\r\nimport {\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n} from '../recoil/Session';\r\n\r\nconst SignupPage: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccInfo = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n    const sliderRef = useRef<Slider>(null);\r\n    const [index, setIndex] = useState<number>(0);\r\n\r\n    const items: Array<JSX.Element> = [];\r\n    rendingData.forEach((eachData: SignupProfileInterface, index: number) => {\r\n        items.push(\r\n            <SignupProfileComponent\r\n                key={index}\r\n                index={index}\r\n                data={eachData}\r\n                onMoveButtonClick={(move: number) => onMove(index, move)}\r\n            />\r\n        );\r\n    });\r\n\r\n    const onMove = async (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            resetProfile();\r\n            resetAccInfo();\r\n            resetCategory();\r\n            history.replace('/mainpage');\r\n            setIndex(0);\r\n            return;\r\n        }\r\n        setIndex(index + move);\r\n        if (index + move > 7) {\r\n            // 맨마지막 페이지\r\n            // setIsAccSeq(true); real Signup\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Slider {...commonSlickSettings} ref={sliderRef}>\r\n            {items}\r\n            <SignupAccountComponent\r\n                key={3}\r\n                checkCurrent={index === 3}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(3, move);\r\n                }}\r\n            />\r\n            <SignupPasswordComponent\r\n                key={4}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(4, move);\r\n                }}\r\n            />\r\n\r\n            <SignupCategoryComponent\r\n                key={5}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(5, move);\r\n                }}\r\n            />\r\n\r\n            <SignupFinishComponent\r\n                key={6}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(6, move);\r\n                }}\r\n            />\r\n        </Slider>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport './basic.css';\r\nimport AuthRouteGuard from './component/AuthRouteGuard';\r\nimport './overide.css';\r\nimport GivingPage from './page/GivingPage';\r\nimport HomePage from './page/HomePage';\r\nimport MainPage from './page/MainPage';\r\nimport SignupPage from './page/SignupPage';\r\n\r\nconst App: React.FC = () => {\r\n    useEffect(() => {\r\n        window.addEventListener(\r\n            'receivePhoneNumberList',\r\n            (e) => {\r\n                console.log(e);\r\n                alert(`receivePhoneNumberList ${e}`);\r\n            },\r\n            false\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/mainpage\" component={MainPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n                <AuthRouteGuard exact path=\"/\" component={HomePage} />\r\n                <AuthRouteGuard exact path=\"/giving\" component={GivingPage} />\r\n\r\n                <Redirect from=\"*\" to=\"/mainpage\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    StylesProvider,\r\n    ThemeProvider,\r\n    unstable_createMuiStrictModeTheme,\r\n} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <RecoilRoot>\r\n            <ThemeProvider theme={theme}>\r\n                <StylesProvider injectFirst>\r\n                    <App />\r\n                </StylesProvider>\r\n            </ThemeProvider>\r\n        </RecoilRoot>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}