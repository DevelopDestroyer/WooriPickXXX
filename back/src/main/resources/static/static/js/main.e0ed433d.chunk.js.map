{"version":3,"sources":["component/Common/BottomBar.tsx","recoil/index.ts","recoil/Session.ts","component/AuthRoute.tsx","component/AuthRouteGuard.tsx","component/Common/HeaderAction.tsx","recoil/Benefit.ts","page/BenefitCompanyPage.tsx","http/index.ts","component/Category/DataModel.ts","component/Common/SelectList.tsx","component/Giving/DataModel.ts","component/Common/util.ts","component/Signup/SignupCommon.tsx","component/Signup/SignupCategoryComponent.tsx","component/Signup/SignupFinishComponent.tsx","page/CategoryPage.tsx","component/Common.ts","recoil/Giving.ts","component/Common/FingerDialog.tsx","component/Giving/GivingCommon.tsx","component/Giving/GivingAmountComponent.tsx","component/Common/Loading.tsx","component/Giving/GivingComponentDonationMember.tsx","component/Giving/GivingComponentDonationPie.tsx","component/Giving/GivingComponentStatus.tsx","component/Giving/GivingComponent.tsx","component/Giving/GivingFinishComponent.tsx","component/Giving/GivingSelectComponent.tsx","page/GivingPage.tsx","component/Common/HeaderDefault.tsx","component/Benefit/HomeBenefitInputText.tsx","component/Benefit/HomBenefitCompany.tsx","component/Benefit/HomeBenefitSearchList.tsx","component/Benefit/HomeBenefitList.tsx","component/Benefit/HomeBenefitSlider.tsx","component/Signup/DataModel.ts","component/Benefit/HomeBenefitComponent.tsx","component/Common/CategoryIcon.tsx","component/Home/HCBenefit.tsx","component/Home/BenefitList.tsx","component/Home/DataModel.ts","component/Home/HCPoint.tsx","component/Home/HCStatus.tsx","component/Home/HomeComponent.tsx","component/Setting/SettingBenefit.tsx","component/Setting/SettingStatus.tsx","component/Setting/SettingComponent.tsx","recoil/Together.ts","component/Together/TCNoFriend.tsx","component/Together/TCRanking.tsx","component/Together/TCStatus.tsx","component/Together/TogetherComponent.tsx","page/HomePage.tsx","component/Rending/DataModel.ts","component/Rending/RendingComponent.tsx","page/SigninPage.tsx","page/MainPage.tsx","component/Signup/SignupAccountComponent.tsx","component/Signup/SignupCellphoneComponent.tsx","component/Signup/SignupPasswordComponent.tsx","component/Signup/SignupProfileComponent.tsx","page/SignupPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DISPLAY_TYPE","useStyles","makeStyles","defaultType","fontFamily","selectedType","color","BottomBarNav","props","classes","BottomNavigation","value","current","onChange","event","newValue","showLabels","BottomNavigationAction","selected","label","HOME","icon","BENEFIT","TOGETHER","SETTING","persistAtom","recoilPersist","key","storage","localStorage","IsSplashSkip","atom","default","effects_UNSTABLE","BottomNavState","BenefitSearch","SignUpProfileState","cellNumber","nickName","realName","SignUpAccInfoState","accountMoney","accountNumber","SignUpCategoryState","CurrentUserState","name","nickname","phoneNumber","point","CurrentUserCategoryState","CurrentUserTransactionState","AuthRoute","render","isLogin","children","component","others","to","pathname","Route","AuthRouteGuard","currentUser","useRecoilValue","HeaderAction","AppBar","position","Toolbar","style","alignItems","isLast","IconButton","onClick","onMoveClick","className","KeyboardArrowLeft","display","Typography","headerTitle","BenefitStateCompany","isLoaded","data","BenefitFavoriteState","dfColor","buttonLayout","width","backgroundColor","borderRadius","flexBasis","flexGrow","BenefitCompanyPage","useParams","history","useHistory","company","favoriteCompany","useState","currentCompany","setCompany","useEffect","find","companyName","userLike","console","log","goBack","thumbNailPath","src","description","marginLeft","Box","my","textAlign","Button","height","process","http","axios","create","baseURL","interceptors","request","use","config","error","Promise","reject","response","CategoryStandInfo","id","root","margin","fontSize","SelectList","standardData","map","eachData","FormControlLabel","control","Checkbox","checkedIcon","checked","selectData","findIndex","select","COLOR_SET","GivingStandInfo","getCategoryNameFromId","target","eachId","getMoneyStr2Number","str","Math","floor","Number","getNumberString","number","toString","replace","getCategoryImgPath","prefix","SignupCommonComponent","disabled","onMoveButtonClick","disableRipple","buttonDisable","onCustomizeNextClick","ACCategoryDialog","onClose","open","recommand","handleOk","forEach","index","length","Dialog","Card","CardHeader","title","CardContent","CardActions","justifyContent","paddingTop","ACOverDialog","SignupCategoryComponent","useRecoilState","category","setCategory","userInfo","suggestDialog","setSuggestDialog","overDialog","setOverDialog","setRecommand","get","then","res","categoryId","SignupCommon","next","benefitCategoryList","push","userNickname","post","currentTarget","filter","item","SignupFinishComponent","flexDirection","mt","mb","CategoryPage","sliderRef","useRef","currentIndex","setIndex","onMove","move","a","slickGoTo","commonSlickSettings","touchMove","dots","arrows","GivingSelectState","GivingAmountState","GivingResultState","donationRatioStatus","memberDTOs","totalDonationMoney","FingerDialog","fingerClick","subheader","GivingCommon","buttonTitle","inputText","GivingAmountComponent","origin","max","givingAmount","setGivingAmount","givingSelect","setOpen","donationId","donationPoint","nextMove","TextField","helperText","Loading","Grid","container","justify","CircularProgress","text","maxWidth","minWidth","whiteSpace","overflow","textOverflow","money","GivingComponentDonationMember","donationMember","orderMember","slice","sort","d1","d2","getOrderMember","sortMemger","maxValueLen","minValueLen","getRage","start","end","eachMember","ml","GivingComponentDonationPie","sortData","donationStatus","totalDonationCount","labels","Array","datasets","borderColor","getGivingNameFromId","options","maintainAspectRatio","responsive","plugins","legend","boxWidth","usePointStyle","animation","duration","type","moneyFont","GivingComponentStatus","GivingComponent","givingData","setGivingData","GivingFinishComponent","GivingSelectComponent","GivingPage","resetSelect","useResetRecoilState","resetAmount","onNextMove","ref","HeaderDeafault","fontWeight","theme","marginRight","input","spacing","flex","img","HomeBenefitInputText","Paper","InputBase","placeholder","inputProps","commonHeart","selectedHeart","HomBenefitCompany","CardActionArea","encodeURI","wrap","totalLike","marginTop","HomeBenefitSearchList","searchText","benefitCompany","benefitFavoriteCompany","renderValue","setRenderValue","filterData","categoryName","includes","HomeBenefitList","TabPanel","other","role","hidden","aria-labelledby","p","SIGNUP_TYPE","HomeBenefitSlider","pageIndex","override","speed","HomeBenefitComponent","setSearchText","setBenefitCompany","setFavoriteState","useSetRecoilState","isertArr","benefitData","setTimeout","page","setPage","isSearchMode","Tabs","nextValue","indicatorColor","textColor","variant","scrollButtons","Tab","a11yProps","CategoryIcon","cardActionLayout","padding","HCPoint","resCategory","eachCategory","extractDate","date","c","Date","getMonth","getDate","getDay","BenefitList","arr","totalBuyPrice","DummyTransactionData","userCategory","transaction","setTransaction","displaySet","setDisplaySet","inline","HCStatus","setUserInfo","HomeComponent","mx","HCBenefit","SettingBenefit","SettingStatus","containerOuter","paddingBottom","iconSize","SettingComponent","Divider","FriendDataSetState","TogetherAVGState","aveRank","ago3MonthBenefitPoint","myRank","thisMonthBenefitPoint","TCNoFriend","mr","preventDefault","window","parent","postMessage","TCRanking","avgInfo","xs","pt","TCStatus","TogetherComponent","friendList","friendMode","setAVGInfo","displayname","cellphone","homeRendering","HomePage","renderType","setCurrentRenderType","BottomBar","rendingData","first","second","highLight","imgPath","buttonOverride","RendingComponent","overflowX","isFirst","left","imgContainer","button","bodyReplace","zIndex","SigninPage","border","MainPage","isSplashSkip","setIsSplashSkip","MainRendingData","labelLayout","AccountComponent","ACNO","PBOK_BAL","SignupAccountComponent","setAccount","signupInfo","wooriAccountList","setWooriAccountList","selectAccount","setSelectAccount","checkCurrent","regex","cellFormat","dataBody","GRID","ACCT_KND","toUpperCase","ACDialog","validNumber","SignupCellphoneComponent","profile","setProfile","dialog","setDialog","complete","setComplete","inputValidStr","setInputValidStr","validStr","setValidStr","certMode","inValid","px","pb","onlyNums","onChangePhoneNumber","result","characters","charactersLength","i","charAt","random","join","makeNumberId","SignupPasswordComponent","password","setPassword","showPassword","setShowPassword","setUserState","signupProfile","accountInfo","resetProfile","resetAccNum","resetCategory","fingerDialog","setFingerDialog","signupFunction","signupData","signupCategory","createRes","registRes","userRes","autoComplete","InputProps","endAdornment","InputAdornment","aria-label","onMouseDown","Visibility","VisibilityOff","SignupProfileComponent","parseData","setInValid","setHelperText","alreadyExist","SignupPage","resetAccInfo","items","App","setFrined","addEventListener","e","split","dataStr","eachPersonStr","eachStr","privateDataList","exact","path","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","unstable_createMuiStrictModeTheme","ReactDOM","StrictMode","ThemeProvider","StylesProvider","injectFirst","document","getElementById"],"mappings":"uJAoBYA,E,4NATNC,EAAYC,aAAW,iBAAO,CAChCC,YAAa,CACTC,WAAY,8BAEhBC,aAAc,CACVC,MAAO,gB,SAIHN,O,eAAAA,I,qBAAAA,I,uBAAAA,I,sBAAAA,M,KAYZ,IA0DeO,EA1DmC,SAC9CC,GAEA,IAAMC,EAAUR,IAShB,OACI,eAACS,EAAA,EAAD,CACIC,MAAOH,EAAMI,QACbC,SAVa,SACjBC,EACAC,GAEAP,EAAMK,SAASE,IAOXC,YAAY,EAHhB,UAKI,cAACC,EAAA,EAAD,CACIR,QAAS,CACLS,SAAUT,EAAQJ,aAClBc,MAAOV,EAAQN,aAEnBgB,MAAM,SACNR,MAAOX,EAAaoB,KACpBC,KAAM,cAAC,IAAD,MAEV,cAACJ,EAAA,EAAD,CACIR,QAAS,CACLS,SAAUT,EAAQJ,aAClBc,MAAOV,EAAQN,aAEnBgB,MAAM,2BACNR,MAAOX,EAAasB,QACpBD,KAAM,cAAC,IAAD,MAEV,cAACJ,EAAA,EAAD,CACIR,QAAS,CACLS,SAAUT,EAAQJ,aAClBc,MAAOV,EAAQN,aAEnBgB,MAAM,qBACNR,MAAOX,EAAauB,SACpBF,KAAM,cAAC,IAAD,MAEV,cAACJ,EAAA,EAAD,CACIR,QAAS,CACLS,SAAUT,EAAQJ,aAClBc,MAAOV,EAAQN,aAEnBgB,MAAM,KACNR,MAAOX,EAAawB,QACpBH,KAAM,cAAC,IAAD,U,SClFdI,EAAgBC,wBAAc,CAClCC,IAAK,iBACLC,QAASC,eAFLJ,YCcKK,EAAeC,eAAc,CACtCJ,IAAK,eACLK,SAAS,EACTC,iBAAkB,CAACR,KAGVS,EAAiBH,eAAmB,CAC7CJ,IAAK,iBACLK,QAAShC,EAAaoB,OAGbe,EAAgBJ,eAAa,CACtCJ,IAAK,gBACLK,QAAS,KAGAI,EAAqBL,eAAwB,CACtDJ,IAAK,qBACLK,QAAS,CACLK,WAAY,GACZC,SAAU,GACVC,SAAU,MAILC,EAAqBT,eAG/B,CACCJ,IAAK,qBACLK,QAAS,CACLS,aAAc,EACdC,cAAe,MAIVC,EAAsBZ,eAAwB,CACvDJ,IAAK,sBACLK,QAAS,KAGAY,EAAmBb,eAAe,CAC3CJ,IAAK,mBACLK,QAAS,CACLa,KAAM,GACNC,SAAU,GACVC,YAAa,GACbL,cAAe,GACfD,aAAc,EACdO,MAAO,GAEXf,iBAAkB,CAACR,KAGVwB,EAA2BlB,eAAe,CACnDJ,IAAK,2BACLK,QAAS,GACTC,iBAAkB,CAACR,KAGVyB,EAA8BnB,eAAuB,CAC9DJ,IAAK,8BACLK,QAAS,GACTC,iBAAkB,CAACR,K,gCCpDR0B,E,4MAnBXC,OAAS,WAAO,IAAD,EACyC,EAAK5C,MAAjD6C,EADG,EACHA,QAASC,EADN,EACMA,SAAUC,EADhB,EACgBA,UAAcC,EAD9B,kDAEX,OAAIH,EAEI,cAAC,IAAD,2BAAWG,GAAX,IAAmBD,UAAWA,EAA9B,SACKD,KAKL,cAAC,IAAD,2BACQE,GADR,IAEIJ,OAAQ,kBAAM,cAAC,IAAD,CAAUK,GAAI,CAAEC,SAAU,kB,YAbpCC,KCITC,EAL8B,SAACpD,GAC1C,IAAMqD,EAAcC,yBAAelB,GACnC,OAAO,cAAC,EAAD,aAAWS,QAAkC,KAAzBQ,EAAYf,UAAqBtC,K,8EC4CjDuD,IA1CG7D,aAAW,iBAAO,CAChCC,YAAa,CACTC,WAAY,8BAEhBC,aAAc,CACVC,MAAO,eAUmC,SAC9CE,GAEA,OACI,cAACwD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,CAASC,MAAO,CAAEC,WAAY,UAA9B,WACM5D,EAAM6D,QACJ,cAACC,EAAA,EAAD,CACIC,QAAS/D,EAAMgE,YACfC,UAAU,WAFd,SAII,cAACC,EAAA,EAAD,CACIP,MAAO,CACHQ,QAAS,aAMzB,cAACC,EAAA,EAAD,CAAYH,UAAU,eAAtB,SACKjE,EAAMqE,qBCtCdC,GAAsB/C,eAAwB,CACvDJ,IAAK,sBACLK,QAAS,CACL+C,UAAU,EACVC,KAAM,IAEV/C,iBAAkB,CAACR,KAGVwD,GAAuBlD,eAA6B,CAC7DJ,IAAK,uBACLK,QAAS,GACTC,iBAAkB,CAACR,KCZjBxB,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVC,MAAO,MACPC,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,OAyNHC,GArNsB,WAAO,IAChC5C,EAAS6C,cAAT7C,KACFpC,EAAUR,KACV0F,EAAUC,cACVC,EAAU/B,yBAAegB,IACzBgB,EAAkBhC,yBAAemB,IALA,EAMFc,qBANE,mBAMhCC,EANgC,KAMhBC,EANgB,KAqBvC,OAbAC,qBAAU,WACN,IAAMlB,EAAOa,EAAQb,KAAKmB,MAAK,SAACnB,GAC5B,OAAOA,EAAKoB,cAAgBvD,KAEhCiD,EAAgBjD,GACZmC,GACAiB,EAAW,2BACJjB,GADG,IAENqB,WAAYP,EAAgBjD,QAGrC,CAACgD,EAASC,IACbQ,QAAQC,IAAIP,GAER,sBAAKvB,UAAU,WAAf,UACI,cAAC,GAAD,CACII,YAAahC,EACbwB,QAAQ,EACRG,YAAa,WACTmB,EAAQa,UAJhB,SAOK3D,KAEU,OAAdmD,QAAc,IAAdA,OAAA,EAAAA,EAAgBS,gBACb,qBAAKC,IAAG,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAgBS,gBAG9B,sBAAKhC,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,oBAAGA,UAAU,eAAb,UAA6B5B,EAA7B,wBAEA,mBAAG4B,UAAU,SAAb,0BACQuB,QADR,IACQA,OADR,EACQA,EAAgBW,YADxB,4BAKJ,sBAAKlC,UAAU,6BAAf,UACI,oBAAGA,UAAU,eAAb,UAA6B5B,EAA7B,mBACA,sBAAK4B,UAAU,SAASN,MAAO,CAAEiB,MAAO,QAAxC,UACI,sBACIjB,MAAO,CACHF,SAAU,WACVU,QAAS,eACTS,MAAO,OAJf,UAOI,qBAAKsB,IAAI,kCACT,mBAAGjC,UAAU,SAAb,yEAEJ,sBACIN,MAAO,CACHF,SAAU,WACVU,QAAS,eACTS,MAAO,MACPwB,WAAY,MALpB,UAQI,qBAAKF,IAAI,kCACT,mBAAGjC,UAAU,SAAb,2EAGR,sBAAKA,UAAU,SAASN,MAAO,CAAEiB,MAAO,QAAxC,UACI,sBACIjB,MAAO,CACHF,SAAU,WACVU,QAAS,eACTS,MAAO,OAJf,UAOI,qBAAKsB,IAAI,kCACT,mBAAGjC,UAAU,SAAb,mEAEJ,sBACIN,MAAO,CACHF,SAAU,WACVU,QAAS,eACTS,MAAO,MACPwB,WAAY,MALpB,UAQI,qBAAKF,IAAI,kCACT,mBAAGjC,UAAU,SAAb,sEAGR,cAACoC,EAAA,EAAD,CAAKC,GAAG,OAAOC,UAAU,SAAzB,SACI,cAACC,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SADlD,+DAQR,sBAAKT,UAAU,6BAAf,UACI,oBAAGA,UAAU,eAAb,UAA6B5B,EAA7B,mBACA,qBACI4B,UAAU,SACVN,MAAO,CAAEiB,MAAO,QAChBsB,IAAI,sCAER,qBAAKjC,UAAU,yBAEf,mBAAGA,UAAU,sBAAb,gGAGA,qBACIA,UAAU,QACVN,MAAO,CACH8C,OAAQ,OACR7B,MAAO,OACPnB,SAAU,WACVU,QAAS,gBAEb+B,IAAI,+BAER,mBACIjC,UAAU,0BACVN,MAAO,CACHF,SAAU,WACVU,QAAS,gBAJjB,wBAUA,oBAAGF,UAAU,gBAAb,0iBAI4B,OAE5B,sBAAKA,UAAU,cAAf,UACI,qBACIA,UAAU,2BACViC,IAAI,2CAER,qBACIjC,UAAU,2BACViC,IAAI,8CAIZ,qBAAKjC,UAAU,yBAEf,mBAAGA,UAAU,sBAAb,0EAGA,qBACIA,UAAU,QACVN,MAAO,CACH8C,OAAQ,OACR7B,MAAO,OACPnB,SAAU,WACVU,QAAS,gBAEb+B,IAAI,+BAER,mBACIjC,UAAU,0BACVN,MAAO,CACHF,SAAU,WACVU,QAAS,gBAJjB,wBAUA,mBAAGF,UAAU,gBAAb,glBAMA,sBAAKA,UAAU,cAAf,UACI,qBACIA,UAAU,2BACViC,IAAI,2CAER,qBACIjC,UAAU,2BACViC,IAAI,2CAER,qBACIjC,UAAU,2BACViC,IAAI,2CAER,qBACIjC,UAAU,2BACViC,IAAI,8CAGZ,cAACG,EAAA,EAAD,CAAKC,GAAG,OAAOC,UAAU,SAAzB,SACI,cAACC,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SADlD,yE,6GC3NxBoB,QAAQC,IAAR,4BAAiCW,MACjC,IAAMC,GAAOC,KAAMC,OAAO,CACtBC,QAASJ,MAGbC,GAAKI,aAAaC,QAAQC,KACtB,SAACC,GAEG,OADApB,QAAQC,IAAR,8BACOmB,KAEX,SAACC,GAEG,OADArB,QAAQC,IAAIoB,GACLC,QAAQC,OAAOF,MAI9BR,GAAKI,aAAaO,SAASL,KACvB,SAACC,GAEG,OADApB,QAAQC,IAAR,+BACOmB,KAEX,SAACC,GAEG,OADArB,QAAQC,IAAIoB,GACLC,QAAQC,OAAOF,MAIfR,UCzBFY,GAAuC,CAChD,CACIC,GAAI,IACJnF,KAAM,kCAEV,CACImF,GAAI,IACJnF,KAAM,sBAEV,CACImF,GAAI,IACJnF,KAAM,wCAEV,CACImF,GAAI,IACJnF,KAAM,4BAEV,CACImF,GAAI,IACJnF,KAAM,4BAEV,CACImF,GAAI,IACJnF,KAAM,mCAEV,CACImF,GAAI,IACJnF,KAAM,sDAEV,CACImF,GAAI,IACJnF,KAAM,4BAEV,CACImF,GAAI,IACJnF,KAAM,iB,8DCnCR5C,GAAYC,YAAW,CACzB+H,KAAM,CACF,UAAW,CACP5C,gBAAiB,gBAGzB6C,OAAQ,CACJtB,WAAY,OAEhBvF,KAAM,CACFf,MAAO,UACP6H,SAAU,YAiEHC,GA/C+B,SAAC5H,GAC3C,IAAMC,EAAUR,KAChB,OACI,mCACKO,EAAM6H,aAAaC,KAAI,SAACC,GACrB,OACI,qBAEI9D,UAAU,iCAFd,SAII,cAAC+D,GAAA,EAAD,CACIrE,MAAO,CAAEQ,QAAS,QAClBF,UAAU,gCACVgE,QACI,cAACC,GAAA,EAAD,CACIC,YACI,cAAC,KAAD,CACIlE,UAAWhE,EAAQY,OAG3BA,KACI,cAAC,KAAD,CACIoD,UAAWhE,EAAQY,OAG3Bf,MAAM,UACNsI,QACIpI,EAAMqI,WAAWC,WACb,SAACC,GAAD,OACIA,EAAOf,KAAOO,EAASP,OAC1B,EAETnH,SAAU,SAACC,GACPN,EAAMK,SAAS0H,EAAUzH,MAIrCL,QAAS,CAAEU,MAAOV,EAAQyH,QAC1B/G,MAAOoH,EAAS1F,QA/Bf0F,EAASP,UCnBzBgB,GAAY,CACrB,UACA,UACA,UACA,UACA,WAGSC,GAAmC,CAC5C,CACIjB,GAAI,IACJnF,KAAM,sBAEV,CACImF,GAAI,IACJnF,KAAM,4BAEV,CACImF,GAAI,IACJnF,KAAM,+BAEV,CACImF,GAAI,IACJnF,KAAM,sBAEV,CACImF,GAAI,IACJnF,KAAM,6BC7CDqG,GAAwB,SAAClB,GAClC,IAAMmB,EAASpB,GAAkB5B,MAAK,SAACiD,GAAD,OAAYA,EAAOpB,IAAMA,KAC/D,OAAOmB,EAASA,EAAOtG,KAAO,IAQrBwG,GAAqB,SAACC,GAC/B,OAAOC,KAAKC,MAAMC,OAAOH,KAGhBI,GAAkB,SAACC,GAC5B,OAAOA,EAAOC,WAAWC,QAAQ,wBAAyB,MAejDC,GAAqB,SAAC9B,GAC/B,IAAM+B,EAAS,WACf,OAAQ/B,GACJ,KAAK,IACD,OAAO+B,EAAS,qBACpB,KAAK,IACD,OAAOA,EAAS,oBACpB,KAAK,IACD,OAAOA,EAAS,0BACpB,KAAK,IACD,OAAOA,EAAS,mBACpB,KAAK,IACD,OAAOA,EAAS,iBACpB,KAAK,IACD,OAAOA,EAAS,mBACpB,KAAK,IACD,OAAOA,EAAS,2BACpB,KAAK,IACD,OAAOA,EAAS,iBACpB,KAAK,IACD,OAAOA,EAAS,gBAExB,MAAO,ICcIC,GApD0D,SACrExJ,GAEA,OACI,qCACI,cAACwD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,CAASC,MAAO,CAAEC,WAAY,UAA9B,WACM5D,EAAM6D,QACJ,cAACC,EAAA,EAAD,CACIG,UAAU,WACVwF,SAAUzJ,EAAM6D,OAChBE,QAAS,kBAAM/D,EAAM0J,mBAAmB,IAH5C,SAKI,cAACxF,EAAA,EAAD,CACIP,MAAO,CACHQ,QAAQ,GAAD,OACHnE,EAAM6D,OAAS,OAAS,cAM5C,cAACO,EAAA,EAAD,CAAYH,UAAU,eAAtB,wDAKR,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAmBN,MAAO,CAAE8C,OAAQ,QAAnD,SACKzG,EAAM8C,aAGf,cAAC0D,EAAA,EAAD,CACImD,cAAe3J,EAAM4J,cACrBH,SAAUzJ,EAAM4J,cAChB3F,UAAS,qBACLjE,EAAM4J,cAAgB,WAAa,kBAEvC7F,QAAS,WACL/D,EAAM6J,qBACA7J,EAAM6J,uBACN7J,EAAM0J,kBAAkB,IATtC,SAYI,mBAAGzF,UAAU,4BAAb,SACKjE,EAAM6D,OAAS,6DAAkB,uBChChDiG,GAAsE,SACxE9J,GACE,IACM+J,EAA6B/J,EAA7B+J,QAASC,EAAoBhK,EAApBgK,KAAMC,EAAcjK,EAAdiK,UAEjBC,EAAW,WACbH,KAGAjB,EAAM,GAOV,OALAmB,EAAUE,SAAQ,SAACpC,EAAkBqC,GACjCtB,GAAOJ,GAAsBX,GAC7Be,GAAOmB,EAAUI,OAAS,IAAMD,EAAQ,KAAO,OAI/C,cAACE,GAAA,EAAD,CAAQP,QAASG,EAAUF,KAAMA,EAAjC,SACI,eAACO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,MACI,cAACrG,EAAA,EAAD,CAAYH,UAAU,eAAtB,qDAMR,eAACyG,GAAA,EAAD,WACI,cAACtG,EAAA,EAAD,CACIH,UAAU,SACVN,MAAO,CAAEQ,QAAS,UAFtB,qGAMA,cAACC,EAAA,EAAD,CACIH,UAAU,SACVN,MAAO,CAAEQ,QAAS,SAAUrE,MAAO,WAFvC,SAIKgJ,IAEL,cAAC1E,EAAA,EAAD,CACIH,UAAU,SACVN,MAAO,CAAEQ,QAAS,UAFtB,kMAQJ,cAACwG,GAAA,EAAD,CACIhH,MAAO,CAAEiH,eAAgB,WAAYC,WAAY,GADrD,SAGI,cAACrE,EAAA,EAAD,CACIzC,QAASmG,EACTP,eAAa,EACbhG,MAAO,CAAE7D,MAAO,WAHpB,+CAadgL,GAAwC,SAAC9K,GAA0B,IAC7D+J,EAAkB/J,EAAlB+J,QAASC,EAAShK,EAATgK,KAEXE,EAAW,WACbH,KAGJ,OACI,eAACO,GAAA,EAAD,CAAQP,QAASG,EAAUF,KAAMA,EAAjC,UACI,cAACU,GAAA,EAAD,UACI,cAACtG,EAAA,EAAD,kHAEJ,cAACuG,GAAA,EAAD,CAAahH,MAAO,CAAEiH,eAAgB,WAAYC,WAAY,GAA9D,SACI,cAACrE,EAAA,EAAD,CACIzC,QAASmG,EACTP,eAAa,EACbhG,MAAO,CAAE7D,MAAO,WAHpB,6CAyGDiL,GA7FiD,SAC5D/K,GACE,IAAD,EAC+BgL,yBAC5B7I,GAFH,mBACM8I,EADN,KACgBC,EADhB,KAKKC,EAAW7H,yBAAelB,GAL/B,EAOyCmD,oBAAkB,GAP3D,mBAOM6F,EAPN,KAOqBC,EAPrB,OAQmC9F,oBAAkB,GARrD,mBAQM+F,EARN,KAQkBC,EARlB,OAUiChG,mBAAmB,IAVpD,mBAUM0E,EAVN,KAUiBuB,EAVjB,KAWK5B,EAAoC,IAApBqB,EAASZ,OAE/B3E,qBAAU,WACNiB,GAAK8E,IAAL,uBAAyBN,EAAS7I,SAAlC,wBAAiEoJ,MAC7D,SAACC,GACG,IAAM1B,EAAY0B,EAAInH,KAAKA,KAAKsD,KAAI,SAACC,GACjC,OAAOA,EAAS6D,cAEpBJ,EAAavB,GACboB,GAAiB,QAG1B,IAEHvF,QAAQC,IAAIoF,GAiCZ,OACI,sBAAKlH,UAAU,WAAf,UACI,cAAC,GAAD,CACIgG,UAAWA,EACXD,KAAMoB,EACNrB,QAAS,WACLsB,GAAiB,MAGzB,cAAC,GAAD,CACIrB,KAAMsB,EACNvB,QAAS,WACLwB,GAAc,MAGtB,eAACM,GAAD,CACIhI,QAAQ,EACR+F,cAAeA,EACfF,kBAnCQ,SAACoC,GACjB,IAAMtH,EAAuB,CACzBuH,oBAAqB,IAGzBd,EAASd,SAAQ,SAACpC,GACdvD,EAAKuH,oBAAoBC,KAAK,CAC1BJ,WAAY7D,EAASP,GACrByE,aAAcd,EAAS7I,cAG/BqE,GAAKuF,KAAL,wBAAmCjB,GAAUS,MAAK,SAACC,GAC/C7F,QAAQC,IAAI4F,GACZ3L,EAAM0J,kBAAkBoC,OAmBxB,UAKI,mBAAG7H,UAAU,SAAb,gGACA,mBAAGA,UAAU,eAAb,iEAEA,cAAC,GAAD,CACIoE,WAAY4C,EACZpD,aAAcN,GACdlH,SA1DG,SACfmE,EACAlE,GAEIA,EAAM6L,cAAc/D,QAChB6C,EAASZ,OA5HX,EA6HEa,EAAY,GAAD,oBAAKD,GAAL,CAAezG,KAE1B+G,GAAc,GAGlBL,EAAYD,EAASmB,QAAO,SAACC,GAAD,OAAU7H,IAAS6H,gBC3H5CC,GA9B+C,SAC1DtM,GAEA,OACI,qBAAKiE,UAAU,WAAf,SACI,cAAC4H,GAAD,CACIhI,QAAQ,EACR+F,eAAe,EACfF,kBAAmB,kBAAM1J,EAAM0J,kBAAkB,IAHrD,SAKI,eAACrD,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAS9F,OAAO,OAAlD,UACI,cAACJ,EAAA,EAAD,CAAKmG,GAAG,SACR,mBAAGvI,UAAU,eAAb,6CACA,mBAAGA,UAAU,SAAb,4EACA,mBAAGA,UAAU,SAAb,gEACA,mBAAGA,UAAU,SAAb,0DACA,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,mBAAGf,UAAU,aAAb,SACI,qBACIA,UAAU,cACViC,IAAI,4BAGZ,cAACG,EAAA,EAAD,CAAKoG,GAAG,iBCgBbC,GAtCgB,WAC3B,IAAMC,EAAYC,iBAAe,MAC3BzH,EAAUC,cAFiB,EAGAG,mBAAS,GAHT,mBAG1BsH,EAH0B,KAGZC,EAHY,KAK3BC,EAAM,yCAAG,WAAO3C,EAAe4C,GAAtB,UAAAC,EAAA,2DACP7C,EAAQ4C,EAAO,GADR,iDAIXF,EAAS1C,EAAQ4C,GACb5C,EAAQ4C,GAAQ,EAChB7H,EAAQkE,QAAQ,KAEhBsD,EAAUvM,SAAWuM,EAAUvM,QAAQ8M,UAAU9C,EAAQ4C,GARlD,2CAAH,wDAYZ,OACI,mCACsB,IAAjBH,EACG,cAAC,GAAD,CAEInD,kBAAmB,SAACsD,GAChBD,EAAO,EAAGC,KAFT,GAMT,cAAC,GAAD,CAEItD,kBAAmB,SAACsD,GAChBD,EAAO,EAAGC,KAFT,M,oBChCZG,GAAgC,CACzCC,WAAW,EACXC,MAAM,EACNC,QAAQ,G,UCDCC,GAAoBhM,eAAsB,CACnDJ,IAAK,oBACLK,QAAS,KAGAgM,GAAoBjM,eAAa,CAC1CJ,IAAK,oBACLK,QAAS,IAGAiM,GAAoBlM,eAAuB,CACpDJ,IAAK,oBACLK,QAAS,CACL+C,UAAU,EACVmJ,oBAAqB,GACrBC,WAAY,GACZC,mBAAoB,GAExBnM,iBAAkB,CAACR,KCqCR4M,GA1C+B,SAAC7N,GAA0B,IAC7D+J,EAA+B/J,EAA/B+J,QAASC,EAAsBhK,EAAtBgK,KAAM8D,EAAgB9N,EAAhB8N,YAMvB,OACI,eAACxD,GAAA,EAAD,CAAQP,QALK,WACbA,KAI2BC,KAAMA,EAAjC,UACI,cAACO,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIC,MACI,cAACrG,EAAA,EAAD,CAAYH,UAAU,eAAtB,sCAIJ8J,UACI,cAAC3J,EAAA,EAAD,CAAYH,UAAU,SAAtB,wJAMZ,eAACyG,GAAA,EAAD,CAAa/G,MAAO,CAAE4C,UAAW,UAAjC,UACI,cAACzC,EAAA,EAAD,CAAYC,QAAS+J,EAArB,SACI,qBAAK5H,IAAI,oCAEb,cAAC9B,EAAA,EAAD,CAAYH,UAAU,SAAtB,4DAEJ,cAAC0G,GAAA,EAAD,CAAahH,MAAO,CAAEiH,eAAgB,WAAYC,WAAY,GAA9D,SACI,cAACrE,EAAA,EAAD,CACIzC,QAASgG,EACTJ,eAAa,EACbhG,MAAO,CAAE7D,MAAO,WAHpB,gCCKDkO,IAhDGtO,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBE,UAAW,EACXC,SAAU,OAc+B,SAAChF,GAC9C,OACI,eAACqG,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAS3H,MAAM,OAAjD,UACI,cAAC,GAAD,CACIf,OAAQ7D,EAAM6D,OACdQ,YAAarE,EAAMqE,YACnBL,YAAa,kBAAMhE,EAAMgE,aAAa,MAE1C,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAmBN,MAAO,CAAE8C,OAAQ,QAAnD,SACKzG,EAAM8C,aAGf,cAAC0D,EAAA,EAAD,CACImD,cAAe3J,EAAM4J,cACrBH,SAAUzJ,EAAM4J,cAChB3F,UAAS,qBACLjE,EAAM4J,cAAgB,WAAa,kBAEvC7F,QAAS,kBAAM/D,EAAMgE,YAAY,IANrC,SAQI,mBAAGC,UAAU,4BAAb,SAA0CjE,EAAMiO,qBCnC1DxO,GAAYC,aAAW,iBAAO,CAChCwO,UAAW,CACP,cAAe,CACX3H,UAAW,UAEf,MAAO,CACHA,UAAW,eAyER4H,GAhE0C,SAAC,GAGlC,IAPPC,EAAgBC,EAK7BjE,EAEmB,EAFnBA,MACApG,EACmB,EADnBA,YAEM/D,EAAUR,KADG,EAGqBuL,yBAAewC,IAHpC,mBAGZc,EAHY,KAGEC,EAHF,KAIbC,EAAelL,yBAAeiK,IAC9BpC,EAAW7H,yBAAelB,GALb,EAOKmD,oBAAkB,GAPvB,mBAOZyE,EAPY,KAONyE,EAPM,KAab1E,EAAO,yCAAG,uBAAAkD,EAAA,sEACNtG,GAAKuF,KAAL,wBAAmC,CACrCD,aAAcd,EAAS7I,SACvBoM,WAAYF,EAAa,GAAGhH,GAC5BmH,cAAeL,IAJP,OAMZG,GAAQ,GACRzK,EAAYoG,EAAQ,GAPR,2CAAH,qDAUb,OACI,eAAC,GAAD,CACI/F,YAAY,2BACZR,QAAQ,EACR+F,eAlCKwE,EAkCmBE,EAlCHD,EAkCiBlD,EAAS3I,QAjChD,EAAI4L,GAAUA,GAAUC,IAkCvBrK,YAAa,SAAC4K,GACNA,EAAW,EACX5K,EAAYoG,EAAQwE,GAEpBH,GAAQ,IAKhBR,YAAY,eAbhB,UAeI,cAAC,GAAD,CAAcH,YAAa/D,EAASC,KAAMA,EAAMD,QAASA,IACzD,mBAAG9F,UAAU,SAAb,mDACA,mBAAGA,UAAU,eAAb,gEACA,cAACoC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAACqC,GAAA,EAAD,CACI5O,QAAS,CACLwH,KAAMxH,EAAQiO,WAElBvK,MAAO,CACHiB,MAAO,MACPwB,WAAY,OAEhB0I,WAAU,uBAAQ5F,GACdiC,EAAS3I,OADH,qCAGVnC,SA7CC,SAACC,GACdiO,EAAgBtF,OAAO3I,EAAMqI,OAAOxI,iB,oBCjB7B4O,GAnBW,WACtB,OACI,cAACC,GAAA,EAAD,CACIC,WAAS,EACTC,QAAQ,SACRtL,WAAW,SACXD,MAAO,CAAE8C,OAAQ,QAJrB,SAMI,cAAC0I,GAAA,EAAD,CACIxL,MAAO,CACH8C,OAAQ,OACR7B,MAAO,OACP9E,MAAO,gBCJrBL,GAAYC,aAAW,iBAAO,CAChC0P,KAAM,CACFjL,QAAS,eACTkL,SAAU,OACVC,SAAU,OACVC,WAAY,SACZhJ,UAAW,QACXiJ,SAAU,oBACVC,aAAc,YAElBC,MAAO,CACHjM,SAAU,WACVU,QAAS,eACTvE,WAAY,0BACZ+H,SAAU,YAuGHgI,GAvEqE,SAAC,GAE1C,IADvCC,EACsC,EADtCA,eAEM3P,EAAUR,KACVoQ,EA1Ba,SAACD,GACpB,OAAOA,EACFE,QACAC,MAAK,SAACC,EAAIC,GACP,OAAOA,EAAGzN,MAAQwN,EAAGxN,SAExBsN,MAAM,EAZS,GAgCAI,CAAeN,GAFG,EAf1B,SAACO,GACb,IAAMC,EAAcD,EAAW,GAAG3N,MAC5B6N,EAAcF,EAAWA,EAAW9F,OAAS,GAAG7H,MAEtD,OAAI2N,EAAW9F,QAAU,EAGd,CADmB,GAAdgG,EADc,IAAdD,GAIL,CAAC,EAAG,GASME,CAAQT,GAHS,mBAG/BU,EAH+B,KAGxBC,EAHwB,KAItC,OACI,cAACjG,GAAA,EAAD,CACI5G,MAAO,CACHmB,aAAc,UAFtB,SAKI,eAAC4F,GAAA,EAAD,WACI,cAACtG,EAAA,EAAD,CAAYH,UAAU,eAAtB,gEAGA,cAACoC,EAAA,EAAD,UACI,cAAC2I,GAAA,EAAD,UACKa,EAAY/H,KAAI,SAAC2I,EAAYrG,GAC1B,OACI,eAAC/D,EAAA,EAAD,CACIlC,QAAQ,OAERmC,GAAG,SAHP,UAKI,cAACD,EAAA,EAAD,CACIzB,MAAM,SACN6B,OAAO,OACPhD,SAAS,WAHb,SAKK2G,GAAS,GACN,qBACIlE,IAAG,8BACCkE,EAAQ,EADT,YAMf,eAAC/D,EAAA,EAAD,CAAKrB,SAAS,IAAI0L,GAAG,SAArB,UACI,cAACrK,EAAA,EAAD,CACImG,GAAG,SACH/F,OAAO,MACP7B,MAAK,UACA6L,EAAWjO,OACPgO,EAAMD,GACX,IAHC,KAKL5M,MAAO,CACHkB,gBACI2D,GACI4B,GAAS,EAAI,EAAIA,MAIjC,eAAChG,EAAA,EAAD,CAAYH,UAAWhE,EAAQyP,MAA/B,UACKe,EAAWjO,MADhB,eAIJ,cAAC4B,EAAA,EAAD,CAAYH,UAAWhE,EAAQmP,KAA/B,SACKqB,EAAWnO,aArCXmO,EAAWnO,uB,UCDrCqO,GApE+D,SAAC,GAEvC,IAC9BC,EAD6B,EADnCC,eAGKzE,QAAO,SAAC5H,GAAD,OAAsC,IAA5BA,EAAKsM,sBACtBf,MAAK,SAACC,EAAIC,GACP,OAAOA,EAAGa,mBAAqBd,EAAGc,sBAGpCtM,EAAO,CACTuM,OAAQ,IAAIC,MACZC,SAAU,CACN,CACIzM,KAAM,IAAIwM,MACVnM,gBAAiB,IAAImM,MACrBE,YAAa,IAAIF,SA+B7B,OAPAJ,EAASzG,SAAQ,SAACpC,EAAUqC,GACxB5F,EAAKuM,OAAO/E,KZ1Ce,SAACxE,GAChC,IAAMmB,EAASF,GAAgB9C,MAAK,SAACiD,GAAD,OAAYA,EAAOpB,IAAMA,KAC7D,OAAOmB,EAASA,EAAOtG,KAAO,GYwCT8O,CAAoBpJ,EAAS2G,aAC9ClK,EAAKyM,SAAS,GAAGzM,KAAKwH,KAAKjE,EAAS+I,oBACpCtM,EAAKyM,SAAS,GAAGpM,gBAAgBmH,KAAKxD,GAAU4B,IAChD5F,EAAKyM,SAAS,GAAGC,YAAYlF,KAAK,gBAIlC,cAACzB,GAAA,EAAD,CACI5G,MAAO,CACHmB,aAAc,UAFtB,SAKI,eAAC4F,GAAA,EAAD,WACI,cAACtG,EAAA,EAAD,CAAYH,UAAU,eAAtB,uCACA,cAACoC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,KAAD,CACI5H,MAAO,IACP6B,OAAQ,IACR2K,QAtCJ,CACZC,qBAAqB,EACrBC,YAAY,EACZC,QAAS,CACLC,OAAQ,CACJ/N,SAAU,QACVsN,OAAQ,CACJpJ,SAAU,GACV8J,SAAU,GACVC,eAAe,GAEnB3N,QAAS,OAGjB4N,UAAW,CACPC,SAAU,IAwBEC,KAAK,MACLrN,KAAMA,YC5DxB/E,GAAYC,aAAW,iBAAO,CAChCoS,UAAW,CACPlS,WAAY,qCACZ+H,SAAU,OACVpB,UAAW,cAoCJwL,GA5BqD,SAAC,GAElC,IAD/BrC,EAC8B,EAD9BA,MAEMzP,EAAUR,KAEhB,OACI,cAAC8K,GAAA,EAAD,CACI5G,MAAO,CACHmB,aAAc,UAFtB,SAKI,eAAC4F,GAAA,EAAD,WACI,cAACtG,EAAA,EAAD,CAAYH,UAAU,SAAtB,mDACA,cAACG,EAAA,EAAD,CAAYH,UAAU,eAAtB,0DAGA,cAACoC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,eAACpI,EAAA,EAAD,CACIH,UAAS,2BAAsBhE,EAAQ6R,WAD3C,UAGK5I,GAAgBwG,GAHrB,oBCsBLsC,GAjDoC,SAAC,GAG5B,IAFpB5H,EAEmB,EAFnBA,MACApG,EACmB,EADnBA,YACmB,EACiBgH,yBAAeyC,IADhC,mBACZwE,EADY,KACAC,EADA,KAYnB,OATAxM,qBAAU,WACNiB,GAAK8E,IAAI,oCAAoCC,MAAK,SAACC,GAC/CuG,EAAc,aACV3N,UAAU,GACPoH,EAAInH,KAAKA,YAGrB,IAGC,cAAC,GAAD,CACIH,YAAY,2BACZR,QAAQ,EACRG,YAAa,SAAC4K,GACV5K,EAAYoG,EAAQwE,IAExBX,YAAY,wCANhB,SAQKgE,EAAW1N,SACR,qCACI,cAAC8B,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,CACIkD,MAAOuC,EAAWrE,uBAG1B,cAACvH,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,CACIqE,eAAgBoB,EAAWvE,wBAGnC,cAACrH,EAAA,EAAD,CAAKC,GAAG,OAAR,SACI,cAAC,GAAD,CACIsJ,eAAgBqC,EAAWtE,kBAKvC,cAAC,GAAD,OCbDwE,GArC0C,SAAC,GAGlC,IAFpB/H,EAEmB,EAFnBA,MACApG,EACmB,EADnBA,YAEA,OACI,cAAC,GAAD,CACIK,YAAY,2BACZR,QAAQ,EACRG,YAAa,SAAC4K,GACV5K,EAAYoG,EAAQwE,IAExBX,YAAY,kCANhB,SAQI,eAAC5H,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAS9F,OAAO,OAAlD,UACI,cAACJ,EAAA,EAAD,CAAKmG,GAAG,SACR,cAACpI,EAAA,EAAD,CAAYH,UAAU,eAAtB,mFAGA,cAACG,EAAA,EAAD,CAAYH,UAAU,SAAtB,+DACA,cAACG,EAAA,EAAD,CAAYH,UAAU,SAAtB,qFAGA,uBACA,cAACG,EAAA,EAAD,CAAYH,UAAU,SAAtB,qEACA,cAACG,EAAA,EAAD,CAAYH,UAAU,SAAtB,kFAGA,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,mBAAGf,UAAU,aAAb,SACI,qBAAKA,UAAU,cAAciC,IAAI,4BAErC,cAACG,EAAA,EAAD,CAAKoG,GAAG,eCUT2F,GAvC0C,SAAC,GAGlC,IAFpBhI,EAEmB,EAFnBA,MACApG,EACmB,EADnBA,YACmB,EACiBgH,yBAAeuC,IADhC,mBACZ0E,EADY,KACAC,EADA,KAenB,OADApM,QAAQC,IAAIkM,GAER,eAAC,GAAD,CACI5N,YAAY,2BACZR,QAAQ,EACR+F,cAAqC,IAAtBqI,EAAW5H,OAC1BrG,YAAa,SAAC4K,GACV5K,EAAYoG,EAAQwE,IAExBX,YAAY,eAPhB,UASI,mBAAGhK,UAAU,SAAb,+FACA,mBAAGA,UAAU,eAAb,6CACA,cAAC,GAAD,CACIoE,WAAY4J,EACZpK,aAAcY,GACdpI,SA3BK,SACbmE,EACAlE,GAEAwF,QAAQC,IAAI,WACRzF,EAAM6L,cAAc/D,QACpB8J,EAAc,CAAC1N,IAEf0N,EAAc,WCyBXG,GAnCc,WACzB,IAAM1F,EAAYC,iBAAe,MAC3BzH,EAAUC,cACVkN,EAAcC,8BAAoBhF,IAClCiF,EAAcD,8BAAoB/E,IAElCiF,EAAa,SAAC7D,GAChB,GAAIA,EAAW,EAIX,OAHA0D,IACAE,SACArN,EAAQa,SAIR4I,EAAW,GACX0D,IACAE,IACArN,EAAQkE,QAAQ,MAEhBsD,EAAUvM,SAAWuM,EAAUvM,QAAQ8M,UAAU0B,IAIzD,OACI,qBAAK3K,UAAU,WAAf,SACI,eAAC,KAAD,2BAAYkJ,IAAZ,IAAiCuF,IAAK/F,EAAtC,UACI,cAAC,GAAD,CAAiBvC,MAAO,EAAGpG,YAAayO,IACxC,cAAC,GAAD,CAAuBrI,MAAO,EAAGpG,YAAayO,IAC9C,cAAC,GAAD,CAAuBrI,MAAO,EAAGpG,YAAayO,IAC9C,cAAC,GAAD,CAAuBrI,MAAO,EAAGpG,YAAayO,W,oBCP/CE,GAvBqC,SAChD3S,GAEA,OACI,eAACwD,EAAA,EAAD,CAAQC,SAAS,SAASE,MAAO,CAAEkB,gBAAiB,WAApD,UACI,eAACnB,EAAA,EAAD,WACK1D,EAAMa,KACP,cAACwF,EAAA,EAAD,CAAKqK,GAAG,SAAR,SACI,cAACtM,EAAA,EAAD,CACIT,MAAO,CACHiP,WAAY,OACZjL,SAAU,UAHlB,SAMK3H,EAAMyK,aAIlBzK,EAAM8C,a,oBCxBbrD,GAAYC,aAAW,SAACmT,GAAD,MAAY,CACrCpL,KAAM,CACFqL,YAAa,KACb1M,WAAY,KACZjC,QAAS,OACTP,WAAY,UAEhBmP,MAAO,CACH3M,WAAYyM,EAAMG,QAAQ,GAC1BC,KAAM,GAEVC,IAAK,CACDtO,MAAO,OACP6B,OAAQ,OACRiB,OAAQ,cA0CDyL,GAjCmD,SAC9DnT,GAEA,IAAMC,EAAUR,KAEhB,OACI,eAAC2T,GAAA,EAAD,CAAOrQ,UAAU,OAAOkB,UAAWhE,EAAQwH,KAA3C,UACI,qBAAKxD,UAAWhE,EAAQiT,IAAKhN,IAAI,4BACjC,cAACmN,GAAA,EAAD,CACIpP,UAAWhE,EAAQ8S,MACnB5S,MAAOH,EAAMkO,UACb7N,SAAU,SAACC,GACPN,EAAMK,SAASC,EAAMqI,OAAOxI,QAEhCmT,YAAY,oFACZC,WAAY,CAAE,aAAc,wBAE/BvT,EAAMkO,UAAU7D,OAAS,GACtB,cAACvG,EAAA,EAAD,CACIC,QAAS,WACL/D,EAAMK,SAAS,KAFvB,SAKI,qBACI4D,UAAWhE,EAAQiT,IACnBhN,IAAI,wC,oDCtCtBzG,GAAYC,aAAW,iBAAO,CAChC8T,YAAa,CACT7L,SAAU,oBACV7H,MAAO,QAEX2T,cAAe,CACX3T,MAAO,sBA6DA4T,GAzDqC,SAAC1T,GACjD,IAAMC,EAAUR,KACV0F,EAAUC,cAChB,OACI,cAACmF,GAAA,EAAD,UACI,cAACoJ,GAAA,EAAD,CACI5P,QAAS,WACLoB,EAAQ6G,KAAR,2BACwB4H,UAAU5T,EAAM4F,gBAHhD,SAOI,cAAC8E,GAAA,EAAD,UACI,eAACsE,GAAA,EAAD,CAAMC,WAAS,EAAC4E,KAAK,SAArB,UACI,eAAC7E,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAAC7K,EAAA,EAAD,CAAYH,UAAU,eAAtB,SACKjE,EAAM4F,cAEX,cAACxB,EAAA,EAAD,CAAYH,UAAU,SAAtB,SACKjE,EAAMmG,cAEX,eAAC6I,GAAA,EAAD,WACKhP,EAAM6F,SACH,cAAC,KAAD,CACI5B,UAAS,UAAKhE,EAAQuT,YAAb,YAA4BvT,EAAQwT,iBAGjD,cAAC,KAAD,CACIxP,UAAWhE,EAAQuT,cAG3B,cAACpP,EAAA,EAAD,CACIT,MAAO,CACHyC,WAAY,SACZjC,QAAS,gBAEbF,UAAU,mBALd,SAOKjE,EAAM8T,kBAInB,cAAC9E,GAAA,EAAD,UACI,qBACI9I,IAAKlG,EAAMiG,cAAcoD,QACrB,SACA,sBC1D9B5J,GAAYC,aAAW,SAACmT,GAAD,MAAmB,CAC5CpL,KAAM,CACFsM,UAAW,SACX,gBAAiB,CACbA,UAAW,QAuDRC,GA9CqD,SAAC,GAElC,IAD/BC,EAC8B,EAD9BA,WAEMhU,EAAUR,KACVyU,EAAiB5Q,yBAAegB,IAChC6P,EAAyB7Q,yBAAemB,IAHhB,EAIQc,qBAJR,mBAIvB6O,EAJuB,KAIVC,EAJU,KAsB9B,OAdA3O,qBAAU,WACN,IAAM4O,EAAaJ,EAAe1P,KAAK4H,QAAO,SAACrE,GAC3C,IAAMwM,EAAe7L,GAAsBX,EAAS6D,YAIpD,OAHA9F,QAAQC,IAAR,gCAC6BwO,EAD7B,YAC6CxM,EAASnC,YADtD,YACqEqO,IAGjEM,EAAaC,SAASP,IACtBlM,EAASnC,YAAY4O,SAASP,MAGtCI,EAAeC,KAChB,CAACL,IAGA,0CACKG,QADL,IACKA,OADL,EACKA,EAAatM,KAAI,SAACC,GACf,OACI,cAAC1B,EAAA,EAAD,CAAgCpC,UAAWhE,EAAQwH,KAAnD,SACI,cAAC,GAAD,CACI7B,YAAamC,EAASnC,YACtBgG,WAAY7D,EAAS6D,WACrBzF,YAAa4B,EAAS5B,YACtBF,cAAe8B,EAAS9B,cACxB6N,UAAW/L,EAAS+L,UACpBjO,WACMsO,EAAuBpM,EAASnC,gBARpCmC,EAASnC,mBC1CjCnG,GAAYC,aAAW,SAACmT,GAAD,MAAmB,CAC5CpL,KAAM,CACFsM,UAAW,SACX,gBAAiB,CACbA,UAAW,QAgDRU,GAvCyC,SACpDzU,GAEA,IAAMC,EAAUR,KACVyU,EAAiB5Q,yBAAegB,IAChC6P,EAAyB7Q,yBAAemB,IAH7C,EAIqCc,qBAJrC,mBAIM6O,EAJN,KAImBC,EAJnB,KAeD,OAPA3O,qBAAU,WACN,IAAM4O,EAAaJ,EAAe1P,KAAK4H,QAAO,SAACrE,GAC3C,OAAOA,EAAS6D,aAAe5L,EAAM4L,cAEzCyI,EAAeC,KAChB,CAACJ,EAAe1P,OAGf,0CACK4P,QADL,IACKA,OADL,EACKA,EAAatM,KAAI,SAACC,GACf,OACI,cAAC1B,EAAA,EAAD,CAAgCpC,UAAWhE,EAAQwH,KAAnD,SACI,cAAC,GAAD,CACI7B,YAAamC,EAASnC,YACtBgG,WAAY7D,EAAS6D,WACrBzF,YAAa4B,EAAS5B,YACtBF,cAAe8B,EAAS9B,cACxB6N,UAAW/L,EAAS+L,UACpBjO,WACMsO,EAAuBpM,EAASnC,gBARpCmC,EAASnC,mBC/BvC,SAAS8O,GAAS1U,GAAuB,IAC7B8C,EAAqC9C,EAArC8C,SAAU3C,EAA2BH,EAA3BG,MAAOiK,EAAoBpK,EAApBoK,MAAUuK,EADC,YACS3U,EADT,8BAGpC,OACI,6CACI4U,KAAK,WACLC,OAAQ1U,IAAUiK,EAClB5C,GAAE,8BAAyB4C,GAC3B0K,kBAAA,yBAAmC1K,IAC/BuK,GALR,aAOI,cAACtO,EAAA,EAAD,CAAK0O,EAAG,EAAR,SAAYjS,OAKxB,IC9BYkS,GD8BNvV,GAAYC,aAAW,SAACmT,GAAD,MAAmB,CAC5CpL,KAAM,CACF5C,gBAAiB,0BAwCVoQ,GAhC6C,SACxDjV,GAEA,IAAMC,EAAUR,KAEhBiG,qBAAU,WACNiH,EAAUvM,SAAWuM,EAAUvM,QAAQ8M,UAAUlN,EAAMkV,aACxD,CAAClV,EAAMkV,YAEV,IAAMvI,EAAYC,iBAAe,MAC3BuI,EAAWhI,GAGjB,OAFAgI,EAASC,MAAQ,IAGb,qBAAKnR,UAAWhE,EAAQwH,KAAxB,SACI,cAAC,KAAD,2BAAY0N,GAAZ,IAAsBzC,IAAK/F,EAA3B,SACKpF,GAAkBO,KAAI,SAACC,EAAUqC,GAC9B,OACI,cAACsK,GAAD,CAEIvU,MAAOH,EAAMkV,UACb9K,MAAOA,EAHX,SAKI,cAAC,GAAD,CAAiBwB,WAAY7D,EAASP,MAJjCxH,EAAMkV,oBE4DxBG,GA3FwB,WACnC,IAAMlK,EAAW7H,yBAAelB,GADS,EAGL4I,yBAAerJ,GAHV,mBAGlCsS,EAHkC,KAGtBqB,EAHsB,OAIGtK,yBACxC1G,IALqC,mBAIlC4P,EAJkC,KAIlBqB,EAJkB,KAOnCC,EAAmBC,4BAAkBhR,IAE3CiB,qBAAU,WACFwO,EAAe3P,UAInBoC,GAAK8E,IAAL,eAAiBmI,UAAUzI,EAAS7I,UAApC,aAAyDoJ,MAAK,SAACC,GAC3D,IAAM+J,EAA8B,CAChCnR,UAAU,EACVC,KAAM,IAEJmR,EAAsC,GAC5ChK,EAAInH,KAAKA,KAAK2F,SAAQ,SAACpC,GACnB2N,EAASlR,KAAKwH,KAAK,CACfJ,WAAY7D,EAAS6D,WACrBhG,YAAamC,EAASnC,YACtBO,YAAa4B,EAAS5B,YACtBF,cAAe8B,EAAS9B,cACnBoD,QAAQ,SAAU,KAClBA,QAAQ,YAAa,QAC1ByK,UAAW/L,EAAS+L,YAExB6B,EAAY5N,EAASnC,aAAemC,EAASlC,YAGjD0P,EAAkBG,GAClBE,YAAW,WACPJ,EAAiBG,KAClB,UAER,IAEH,IAxCyC,EA4CjBpQ,mBAAiB,GA5CA,mBA4ClCsQ,EA5CkC,KA4C5BC,EA5C4B,KAkDnCC,EAAqC,IAAtB9B,EAAW5J,OAEhC,OACI,qCACI,eAAC,GAAD,CAAgBxJ,KAAM,cAAC,IAAD,IAAoB4J,MAAM,4BAAhD,UACI,cAAC,GAAD,CACIyD,UAAW+F,EACX5T,SAjBC,SAACF,GACdmV,EAAcnV,OAkBJ4V,GACE,cAACC,GAAA,EAAD,CACI7V,MAAO0V,EACPxV,SAhBF,SAACC,EAAyB2V,GACxCH,EAAQG,IAgBQC,eAAe,UACfC,UAAU,UACVC,QAAQ,aACRC,cAAc,OANlB,SAQK9O,GAAkBO,KAAI,SAACC,EAAUqC,GAC9B,OACI,cAACkM,GAAA,EAAD,aAEI3V,MAAOoH,EAAS1F,MA/ElC,SAAC+H,GACf,MAAO,CACH5C,GAAG,kBAAD,OAAoB4C,GACtB,gBAAgB,uBAAhB,OAAwCA,IA6ERmM,CAAUnM,IAFTA,WAS5B2L,EACG,cAAC1P,EAAA,EAAD,CAAK0O,EAAG,EAAR,SACI,cAAC,GAAD,CAAuBd,WAAYA,MAGvC,cAAC,GAAD,CAAmBiB,UAAWW,QCzF/BW,GAhBmC,SAC9CxW,GAEA,OACI,eAACqG,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAlC,UACI,qBACIrG,IAAKoD,GAAmBtJ,EAAMwH,IAC9B7D,MAAO,CAAEiB,MAAO,SAAU6B,OAAQ,SAAUiB,OAAQ,UAExD,cAACtD,EAAA,EAAD,CAAYT,MAAO,CAAE4C,UAAW,UAAhC,SACKmC,GAAsB1I,EAAMwH,UCAvC/H,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,GAEdyR,iBAAkB,CACdC,QAAS,OACT9L,eAAgB,gBAwDT+L,GApDW,WACtB,IAAM1W,EAAUR,KACV0L,EAAW7H,yBAAelB,GAFJ,EAGI4I,yBAAevI,GAHnB,mBAGrBwI,EAHqB,KAGXC,EAHW,KAoB5B,OAXAxF,qBAAU,WACNiB,GAAK8E,IAAL,uBAAyBmI,UAAUzI,EAAS7I,UAA5C,cAAkEoJ,MAC9D,SAACC,GACG,IAAMiL,EAAcjL,EAAInH,KAAKA,KAAKsD,KAC9B,SAACC,GAAD,OAAmBA,EAAS6D,cAEhCV,EAAY0L,QAGrB,CAACzL,IAEoB,IAApBF,EAASZ,OACF,6BAGP,eAACE,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,UACI,cAAC0F,GAAA,EAAD,CACIC,MACI,cAACrG,EAAA,EAAD,CAAYH,UAAU,eAAtB,4DAKR,cAACyG,GAAA,EAAD,UACI,cAACrE,EAAA,EAAD,CAAKlC,QAAQ,OAAb,SACK8G,EAASnD,KAAI,SAAC+O,GACX,OACI,cAACxQ,EAAA,EAAD,CAAwBqB,OAAO,OAA/B,SACI,cAAC,GAAD,CAAcF,GAAIqP,KADZA,UAO1B,cAAClM,GAAA,EAAD,CAAa1K,QAAS,CAAEwH,KAAMxH,EAAQwW,kBAAtC,SACI,cAACrS,EAAA,EAAD,CAAYL,QAvCR,WACZ+B,QAAQC,IAAI,UAsC0BqQ,QAAQ,UAAtC,6ECrEVU,GAAc,SAACC,GACjB,IAAMC,EAAI,IAAIC,KAAKF,GAGnB,MAAM,GAAN,OAAUC,EAAEE,WAAZ,kBAA2BF,EAAEG,UAA7B,aAFa,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAEIH,EAAEI,UAAlD,MA8CWC,GA3CiC,SAAC,GAExB,IADrB7S,EACoB,EADpBA,KAEA,OACI,mCACKA,EAAKsD,KAAI,SAACC,EAAUqC,EAAOkN,GACxB,OACI,eAACjR,EAAA,EAAD,CAAiBmG,GAAc,IAAVpC,EAAc,MAAQ,MAA3C,UACI,cAAChG,EAAA,EAAD,CAAYH,UAAS,SAArB,SACK6S,GAAY/O,EAASgP,QAE1B,eAAC/H,GAAA,EAAD,CAAMC,WAAS,EAACtL,MAAO,CAAEoQ,UAAW,OAApC,UACI,cAAC/E,GAAA,EAAD,UACI,cAAC5K,EAAA,EAAD,CAAYH,UAAS,SAArB,SACK8D,EAASnC,gBAGlB,cAACS,EAAA,EAAD,CAAKrB,SAAS,MAEd,eAACgK,GAAA,EAAD,CAAMrL,MAAO,CAAE4C,UAAW,SAA1B,UACI,cAACnC,EAAA,EAAD,CAAYH,UAAS,SAArB,SACKiF,GAAgBnB,EAASwP,iBAE9B,cAACnT,EAAA,EAAD,CACIH,UAAS,0BADb,mBAEKyE,GACDX,EAAS6D,YAHb,yBAIQ1C,GACJnB,EAASvF,gBAKpB8U,EAAIjN,OAAS,IAAMD,GAChB,qBAAKnG,UAAU,2BA3BbmG,SCfjBoN,GAAyC,CAClD,CACIT,KAAM,aACNnR,YAAa,2BACb2R,eAAgB,KAChB3L,WAAY,IACZpJ,MAAO,MAEX,CACIuU,KAAM,aACNnR,YAAa,qBACb2R,eAAgB,KAChB3L,WAAY,IACZpJ,MAAO,KAEX,CACIuU,KAAM,aACNnR,YAAa,sBACb2R,eAAgB,KAChB3L,WAAY,IACZpJ,MAAO,MAEX,CACIuU,KAAM,aACNnR,YAAa,sBACb2R,eAAgB,KAChB3L,WAAY,IACZpJ,MAAO,IAEX,CACIuU,KAAM,aACNnR,YAAa,qBACb2R,eAAgB,IAChB3L,WAAY,IACZpJ,MAAO,KCtBT/C,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,GAEdyR,iBAAkB,CACdC,QAAS,YAwDFC,GAlDW,WACtB,IAAM1W,EAAUR,KACV0L,EAAW7H,yBAAelB,GAC1BqV,EAAenU,yBAAeb,GAHR,EAIUuI,yBAClCtI,GALwB,mBAIrBgV,EAJqB,KAIRC,EAJQ,OAOQpS,mBAA2B,IAPnC,mBAOrBqS,EAPqB,KAOTC,EAPS,KA2B5B,OAlBAnS,qBAAU,WACNiB,GAAK8E,IAAL,gCAAkCmI,UAAUzI,EAAS7I,YAAaoJ,MAC9D,SAACC,GACG,IAAInH,EAAyB,GAM7BA,GAJIA,EADyB,IAAzBmH,EAAInH,KAAKA,KAAK6F,OACPmN,GAEA7L,EAAInH,KAAKA,MAER4H,QAAO,SAACrE,GAChB,OAAO0P,EAAajD,SAASzM,EAAS6D,eAE1CiM,EAAcrT,EAAKsL,MAAM,EAvBnB,IAwBN6H,EAAenT,QAGxB,CAACiT,IAEsB,IAAtBG,EAAWvN,OACJ,6BAIP,eAACE,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,UACI,cAAC0F,GAAA,EAAD,CAAYC,MAAO,cAACrG,EAAA,EAAD,uDACnB,cAACsG,GAAA,EAAD,UACI,cAAC,GAAD,CAAalG,KAAMoT,MAEtBF,EAAYrN,OAvCH,GAwCN,cAACM,GAAA,EAAD,CAAa1K,QAAS,CAAEwH,KAAMxH,EAAQwW,kBAAtC,SACI,cAACjQ,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SADlD,iEC7DdjF,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,GAEd8M,UAAW,CACPnK,SAAU,OACV/H,WAAY,sCAEhBkY,OAAQ,CACJ3T,QAAS,UAEbsS,iBAAkB,CACdC,QAAS,YA+DFqB,GA3DY,WACvB,IAAM9X,EAAUR,KACV0F,EAAUC,cAFa,EAGG4F,yBAAe5I,GAHlB,mBAGtB+I,EAHsB,KAGZ6M,EAHY,KAM7BtS,qBAAU,WACFyF,EAAS7I,UACTqE,GAAK8E,IAAL,uBAAyBmI,UAAUzI,EAAS7I,YAAaoJ,MACrD,SAACC,GACGqM,EAAY,2BACL7M,GADI,IAEPlJ,aAAc0J,EAAInH,KAAKA,KAAKvC,aAC5BO,MAAOmJ,EAAInH,KAAKA,KAAKhC,cAKtC,IAMH,OACI,eAAC+H,GAAA,EAAD,CAAM5G,MAAO,CAAEkB,gBAAiB,UAAWC,aAAc,UAAzD,UACI,eAAC4F,GAAA,EAAD,WACI,eAACtG,EAAA,EAAD,CAAYH,UAAWhE,EAAQyE,QAA/B,oBACQyG,EAAS9I,KADjB,gBAEI,uBAFJ,wDAKA,cAAC+B,EAAA,EAAD,CACIH,UAAS,UAAKhE,EAAQ6X,OAAb,YAAuB7X,EAAQ6R,UAA/B,YAA4C7R,EAAQyE,SADjE,SAGKwE,GAAgBiC,EAAS3I,SAE9B,cAAC4B,EAAA,EAAD,CAAYH,UAAS,UAAKhE,EAAQ6X,OAAb,YAAuB7X,EAAQyE,SAApD,uBAIJ,eAACiG,GAAA,EAAD,CAAa1K,QAAS,CAAEwH,KAAMxH,EAAQwW,kBAAtC,UACI,cAACjQ,EAAA,EAAD,CACIiD,UAAQ,EACRxF,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SAFlD,oDAMA,cAAC8B,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SAC9CX,QA9BM,WAClBoB,EAAQ6G,KAAK,YA2BL,6CC1DDiM,GAnBiB,WAC5B,OACI,qCACI,cAAC,GAAD,CAAgBpX,KAAM,cAAC,IAAD,IAAc4J,MAAM,WAC1C,eAACpE,EAAA,EAAD,CAAK6R,GAAG,OAAO1I,SAAS,SAAxB,UACI,cAACnJ,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,MAEJ,cAACnG,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC2L,GAAD,MAEJ,cAAC9R,EAAA,EAAD,CAAKC,GAAG,OAAR,SACI,cAAC,GAAD,a,kHCLd7G,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,GAEdyR,iBAAkB,CACdC,QAAS,OACT9L,eAAgB,gBAsCTwN,GAlCkB,WAC7B,IAAMnY,EAAUR,KACVwL,EAAW3H,yBAAeb,GAChC,OACI,eAAC8H,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,UACI,cAAC0F,GAAA,EAAD,CACIC,MACI,cAACrG,EAAA,EAAD,CAAYH,UAAU,eAAtB,4DAKR,cAACyG,GAAA,EAAD,UACI,cAACrE,EAAA,EAAD,CAAKlC,QAAQ,OAAb,SACK8G,EAASnD,KAAI,SAAC+O,GACX,OACI,cAACxQ,EAAA,EAAD,CAAwBqB,OAAO,OAA/B,SACI,cAAC,GAAD,CAAcF,GAAIqP,KADZA,UAO1B,cAAClM,GAAA,EAAD,CAAa1K,QAAS,CAAEwH,KAAMxH,EAAQwW,kBAAtC,SACI,cAACjQ,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SADlD,mDCxCVjF,GAAYC,aAAW,iBAAO,CAChCgF,QAAS,CACL5E,MAAO,SAEX6E,aAAc,CACVE,gBAAiB,UACjBC,aAAc,SACdC,UAAW,EACXC,SAAU,GAEd8M,UAAW,CACPlS,WAAY,sCAEhBkY,OAAQ,CACJ3T,QAAS,UAEbsS,iBAAkB,CACdC,QAAS,YAwCF2B,GApCiB,WAC5B,IAAMpY,EAAUR,KAEV0L,GADU/F,cACC9B,yBAAelB,IAGhC,OACI,eAACmI,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,UACI,eAAC4F,GAAA,EAAD,WACI,cAACtG,EAAA,EAAD,CAAYH,UAAU,eAAtB,sCACA,cAACG,EAAA,EAAD,CAAYH,UAAU,mBAAtB,SACKkH,EAASjJ,gBAEd,eAACmE,EAAA,EAAD,CAAKE,UAAU,MAAf,UACI,cAACnC,EAAA,EAAD,CAAYH,UAAS,iBAAYhE,EAAQ6X,QAAzC,0BAGA,cAAC1T,EAAA,EAAD,CACIH,UAAS,iBAAYhE,EAAQ6X,OAApB,YAA8B7X,EAAQ6R,WADnD,SAGK5I,GAAgBiC,EAASlJ,gBAE9B,cAACmC,EAAA,EAAD,CAAYH,UAAS,UAAKhE,EAAQ6X,OAAb,KAArB,0BAGR,cAACnN,GAAA,EAAD,CAAa1K,QAAS,CAAEwH,KAAMxH,EAAQwW,kBAAtC,SACI,cAACjQ,EAAA,EAAD,CACIvC,UAAS,UAAKhE,EAAQ0E,aAAb,YAA6B1E,EAAQyE,SADlD,6CClDVjF,GAAYC,aAAW,iBAAO,CAChCuP,UAAW,CACP9K,QAAS,OACTyG,eAAgB,SAChB2B,cAAe,UAEnB+L,eAAgB,CACZnU,QAAS,OACToI,cAAe,MACf1B,WAAY,OACZ0N,cAAe,QAEnBC,SAAU,CACN7Q,SAAU,yBA0EH8Q,GAtEoB,WAC/B,IAAMxY,EAAUR,KAChB,OACI,sBAAKwE,UAAU,WAAf,UACI,cAAC,GAAD,CAAgBpD,KAAM,cAAC,IAAD,IAAkB4J,MAAM,oCAC9C,eAACpE,EAAA,EAAD,CAAK6R,GAAG,OAAO1I,SAAS,SAAxB,UACI,cAACnJ,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,MAEJ,cAACnG,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,MAEJ,eAACnG,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAlC,UACI,eAAClG,EAAA,EAAD,CAAKpC,UAAWhE,EAAQqY,eAAxB,UACI,cAACjS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC,KAAD,CAAYhL,UAAWhE,EAAQuY,aAEnC,cAACnS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC7K,EAAA,EAAD,CAAYH,UAAU,gBAAtB,sBAIJ,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,cAAC,KAAD,OAEJ,cAAC0T,GAAA,EAAD,IACA,eAACrS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQqY,eAAxB,UACI,cAACjS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC,KAAD,CAAiBhL,UAAWhE,EAAQuY,aAExC,cAACnS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC7K,EAAA,EAAD,CAAYH,UAAU,gBAAtB,yCAIJ,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,cAAC,KAAD,OAEJ,cAAC0T,GAAA,EAAD,IACA,eAACrS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQqY,eAAxB,UACI,cAACjS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC,KAAD,CAAchL,UAAWhE,EAAQuY,aAErC,cAACnS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC7K,EAAA,EAAD,CAAYH,UAAU,gBAAtB,wCAIJ,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,cAAC,KAAD,OAEJ,cAAC0T,GAAA,EAAD,IACA,eAACrS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQqY,eAAxB,UACI,cAACjS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC,KAAD,CAAWhL,UAAWhE,EAAQuY,aAElC,cAACnS,EAAA,EAAD,CAAKpC,UAAWhE,EAAQgP,UAAxB,SACI,cAAC7K,EAAA,EAAD,CAAYH,UAAU,gBAAtB,wCAIJ,cAACoC,EAAA,EAAD,CAAKrB,SAAS,MACd,cAAC,KAAD,iBCvFX2T,GAAqBpX,eAAsB,CACpDJ,IAAK,qBACLK,QAAS,GACTC,iBAAkB,CAACR,KAGV2X,GAAmBrX,eAAqB,CACjDJ,IAAK,mBACLK,QAAS,CACLqX,SAAU,EACVC,uBAAwB,EACxBC,QAAS,EACTC,uBAAwB,KCwCjBC,IA7CGvZ,aAAW,iBAAO,CAChCoS,UAAW,CACPrO,SAAU,WACVU,QAAS,eACTvE,WAAY,qCACZ+H,SAAU,QAEdmQ,OAAQ,CACJ3T,QAAS,UAEbsS,iBAAkB,CACdC,QAAS,YAIY,WAQzB,OACI,eAACnM,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,UACI,cAAC4F,GAAA,EAAD,UACI,cAACtG,EAAA,EAAD,CAAYH,UAAU,SAAtB,+MAKJ,cAAC0G,GAAA,EAAD,CAAahH,MAAO,CAAEiH,eAAgB,YAAtC,SACI,cAACvE,EAAA,EAAD,CAAK6S,GAAG,OAAR,SACI,cAAC1S,EAAA,EAAD,CACIzC,QAlBA,SAACzD,GACjBA,EAAM6Y,iBACFC,QAAUA,OAAOC,QACjBD,OAAOC,OAAOC,YAAY,6BAA8B,MAgB5CrV,UAAU,yBAFd,mCC7BdxE,GAAYC,aAAW,iBAAO,CAChCoS,UAAW,CACPrO,SAAU,WACVU,QAAS,eACTvE,WAAY,qCACZ+H,SAAU,QAEdmQ,OAAQ,CACJ3T,QAAS,UAEbsS,iBAAkB,CACdC,QAAS,YAsFF6C,GAlFa,WACxB,IAAMtZ,EAAUR,KACV0L,EAAW7H,yBAAelB,GAC1BoX,EAAUlW,yBAAesV,IAE/B,OACI,cAACrO,GAAA,EAAD,CAAM5G,MAAO,CAAEmB,aAAc,UAA7B,SACK0U,EAAQX,SAAW,EAChB,qCACI,cAACrO,GAAA,EAAD,CACIC,MACI,eAACpE,EAAA,EAAD,WACI,cAACjC,EAAA,EAAD,CACIH,UAAS,uBAAkBhE,EAAQ6X,QADvC,mBAGQ3M,EAAS7I,SAHjB,aAKA,cAAC8B,EAAA,EAAD,CACIH,UAAS,iBAAYhE,EAAQ6X,QADjC,4EAQZ,cAACpN,GAAA,EAAD,UACI,cAACrE,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,eAACwC,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,GAAA,EAAD,CAAM3C,MAAI,EAACoN,GAAI,EAAf,UACI,cAACrV,EAAA,EAAD,CAAYH,UAAU,0BAAtB,oBAGA,eAACoC,EAAA,EAAD,CAAKqT,GAAG,OAAOnT,UAAU,SAAzB,UACI,cAACnC,EAAA,EAAD,CAAYH,UAAU,kBAAtB,0BAGA,cAACG,EAAA,EAAD,CACIH,UAAS,UAAKhE,EAAQ6R,UAAb,oBADb,SAGK0H,EAAQT,SAEb,cAAC3U,EAAA,EAAD,CAAYH,UAAU,kBAAtB,qBAKR,eAAC+K,GAAA,EAAD,CAAM3C,MAAI,EAACoN,GAAI,EAAf,UACI,cAACrV,EAAA,EAAD,CAAYH,UAAU,0BAAtB,0DAGA,eAACoC,EAAA,EAAD,CAAKqT,GAAG,OAAOnT,UAAU,SAAzB,UACI,cAACnC,EAAA,EAAD,CAAYH,UAAU,kBAAtB,SACK,kBAEL,cAACG,EAAA,EAAD,CACIH,UAAS,UAAKhE,EAAQ6R,WAD1B,SAGK0H,EAAQX,UAEb,cAACzU,EAAA,EAAD,CAAYH,UAAU,kBAAtB,+BAUxB,cAACoC,EAAA,EAAD,CACII,OAAO,QACPtC,QAAQ,OACRyG,eAAe,SACfhH,WAAW,SAJf,SAMI,cAACuL,GAAA,EAAD,CAAkBxL,MAAO,CAAE7D,MAAO,gBC1FhDL,GAAYC,aAAW,iBAAO,CAChCoS,UAAW,CACPrO,SAAU,WACVU,QAAS,eACTvE,WAAY,qCACZ+H,SAAU,QAEdmQ,OAAQ,CACJ3T,QAAS,UAEbsS,iBAAkB,CACdC,QAAS,YAgFFiD,GA5EY,WACvB,IAAM1Z,EAAUR,KACV0L,EAAW7H,yBAAelB,GAC1BoX,EAAUlW,yBAAesV,IAE/B,OACI,cAACrO,GAAA,EAAD,CAAM5G,MAAO,CAAEkB,gBAAiB,UAAWC,aAAc,UAAzD,SACK0U,EAAQX,SAAW,EAChB,qCACI,cAACrO,GAAA,EAAD,CACIC,MACI,eAACpE,EAAA,EAAD,WACI,cAACjC,EAAA,EAAD,CACIH,UAAS,8BAAyBhE,EAAQ6X,QAD9C,mBAGQ3M,EAAS7I,SAHjB,aAKA,cAAC8B,EAAA,EAAD,CACIH,UAAS,wBAAmBhE,EAAQ6X,QADxC,mDAQZ,cAACpN,GAAA,EAAD,UACI,cAACrE,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,eAACwC,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,GAAA,EAAD,CAAM3C,MAAI,EAACoN,GAAI,EAAf,UACI,cAACrV,EAAA,EAAD,CAAYH,UAAU,iCAAtB,iCAGA,eAACoC,EAAA,EAAD,CAAKqT,GAAG,OAAOnT,UAAU,SAAzB,UACI,cAACnC,EAAA,EAAD,CACIH,UAAS,iBAAYhE,EAAQ6R,WADjC,SAGK0H,EAAQR,wBAEb,cAAC5U,EAAA,EAAD,CAAYH,UAAU,yBAAtB,0BAKR,eAAC+K,GAAA,EAAD,CAAM3C,MAAI,EAACoN,GAAI,EAAf,UACI,cAACrV,EAAA,EAAD,CAAYH,UAAU,iCAAtB,wCAGA,eAACoC,EAAA,EAAD,CAAKqT,GAAG,OAAOnT,UAAU,SAAzB,UACI,cAACnC,EAAA,EAAD,CACIH,UAAS,iBAAYhE,EAAQ6R,WADjC,SAGK0H,EAAQV,wBAEb,cAAC1U,EAAA,EAAD,CAAYH,UAAU,yBAAtB,oCAUxB,cAACoC,EAAA,EAAD,CACII,OAAO,QACPtC,QAAQ,OACRyG,eAAe,SACfhH,WAAW,SAJf,SAMI,cAACuL,GAAA,EAAD,CAAkBxL,MAAO,CAAE7D,MAAO,gBCvCvC8Z,GAhDqB,WAChC,IAAMC,EAAavW,yBAAeqV,IAC5BmB,EAAaD,EAAWxP,OAAS,EAEjCc,EAAW7H,yBAAelB,GAC1B2X,EAAatE,4BAAkBmD,IAarC,OAXAlT,qBAAU,WACFyF,EAAS7I,UACTqE,GAAK8E,IAAL,uBAAyBN,EAAS7I,SAAlC,cAAuDoJ,MACnD,SAACC,GACGoO,EAAWpO,EAAInH,KAAKA,MACpBsB,QAAQC,IAAI4F,QAIzB,CAACR,IAGA,qCACI,cAAC,GAAD,CAAgBtK,KAAM,cAAC,IAAD,IAAgB4J,MAAM,uBAC5C,eAACpE,EAAA,EAAD,CAAK6R,GAAG,OAAO1I,SAAS,SAAxB,UACKsK,GAAc,iDACf,cAACzT,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,MAEJ,cAACnG,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,OAEFsN,GACE,cAACzT,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAAC,GAAD,MAGPqN,EAAW/R,KAAI,SAACC,GACb,OACI,mCACI,cAAC1B,EAAA,EAAD,UACI,cAACjC,EAAA,EAAD,oBAAgB2D,EAAS1F,KAAzB,YAAiC0F,EAASiS,YAA1C,YAAyDjS,EAASkS,2BCzC5FC,GAAgB,SAACrI,GACnB,OAAQA,GACJ,KAAKrS,EAAaoB,KACd,OAAO,cAAC,GAAD,IACX,KAAKpB,EAAasB,QACd,OAAO,cAAC,GAAD,IACX,KAAKtB,EAAauB,SACd,OAAO,cAAC,GAAD,IACX,KAAKvB,EAAawB,QACd,OAAO,cAAC,GAAD,IACX,QACI,OAAO,+BAqBJmZ,GAjBY,WAAO,IAAD,EACcnP,yBAAetJ,GAD7B,mBACtB0Y,EADsB,KACVC,EADU,KAO7B,OACI,sBAAKpW,UAAU,WAAf,UACI,cAACoC,EAAA,EAAD,CAAKpC,UAAU,YAAYuL,SAAS,SAApC,SACK0K,GAAcE,KAEnB,cAACE,EAAD,CAAcla,QAASga,EAAY/Z,SAT1B,SAACwR,GACdwI,EAAqBxI,UCrBhB0I,GAA+C,CACxD,CACI9P,MAAO,CAAE+P,MAAO,2BAAQC,OAAQ,mCAChCtU,YAAa,CAAC,qDAAc,gDAC5BuU,UAAW,kGACXC,QAAS,yBAEb,CACIlQ,MAAO,CAAE+P,MAAO,8CAAYC,OAAQ,sDACpCtU,YAAa,CAAC,6DAAiB,yDAC/BuU,UAAW,mGACXC,QAAS,yBAEb,CACIlQ,MAAO,CAAE+P,MAAO,uDAAgBC,OAAQ,qDACxCtU,YAAa,CAAC,4BAAS,8DACvBuU,UAAW,6FACXC,QAAS,yBAEb,CACIlQ,MAAO,CAAE+P,MAAO,8CAAYC,OAAQ,8BACpCtU,YAAa,CACT,6EACA,2EAEJuU,UAAW,2GACXC,QAAS,0BCtBXlb,GAAYC,aAAW,iBAAO,CAChCkb,eAAgB,CACZnX,SAAU,2BAmEHoX,GAxD+B,SAAC,GAG7B,IAFdrW,EAEa,EAFbA,KACGxE,EACU,wBACPC,EAAUR,KAUhB,OACI,eAAC4G,EAAA,EAAD,CAAK1C,MAAO,CAAEF,SAAU,YAAcmB,MAAM,OAAO6B,OAAO,OAA1D,UACI,qBAAKxC,UAAU,mBAAmBN,MAAO,CAAEmX,UAAW,WAAtD,SACI,cAAChX,EAAA,EAAD,CACIG,UAAS,mBAAcjE,EAAM+a,SAAW,QACxChX,QATI,WAChB/D,EAAM0J,mBAAmB,IAMjB,SAII,cAACxF,EAAA,EAAD,QAGR,gCACI,mBAAGD,UAAU,mBAAb,SAAiCO,EAAKiG,MAAM+P,QAC5C,mBAAGvW,UAAU,yBAAb,SAAuCO,EAAKiG,MAAMgQ,SAElD,oBAAGxW,UAAU,mBAAb,UACKO,EAAK2B,YAAY,GAClB,uBACC3B,EAAK2B,YAAY,MAEtB,qBACIlC,UAAU,qBACVN,MAAO,CAAEiB,MAAO,WAEpB,mBAAGX,UAAU,yBAAb,SAAuCO,EAAKkW,eAEhD,qBAAKzW,UAAU,qBAAqBN,MAAO,CAAEqX,KAAM,MAAnD,SACI,mBAAG/W,UAAU,aAAb,SACI,qBAAKA,UAAU,cAAciC,IAAK1B,EAAKmW,cAG/C,cAACnU,EAAA,EAAD,CACIvC,UAAS,oCAA+BhE,EAAQ2a,gBAChD7W,QAxCQ,WAChB/D,EAAM0J,kBAAkB,IAqCpB,SAII,cAACtF,EAAA,EAAD,CAAYH,UAAS,4BAArB,gCCpEVxE,GAAYC,aAAW,iBAAO,CAChCub,aAAc,CACVrW,MAAO,SAEXsW,OAAQ,CACJ/W,QAAS,QACTS,MAAO,QAEXuW,YAAa,CACTC,QAAS,EACT3X,SAAU,QACVmB,MAAO,OACP6B,OAAQ,YA0DD4U,GAtDc,SAACrb,GAC1B,IAAMC,EAAUR,KACV0F,EAAUC,cAchB,OACI,qCACI,qBAAKnB,UAAS,yBAAoBhE,EAAQkb,eAC1C,sBAAKlX,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,mBAAGA,UAAU,aAAb,SACI,qBACIN,MAAO,CAAEiB,MAAO,SAChBX,UAAS,kBAAahE,EAAQgb,cAC9B/U,IAAI,sBAGZ,mBAAGjC,UAAU,2BAAb,gDAGJ,sBAAKA,UAAU,YAAf,UACI,cAACuC,EAAA,EAAD,CACIzC,QA9BE,WAClBoB,EAAQ6G,KAAK,YA8BG/H,UAAWhE,EAAQib,OACnBvX,MAAO,CAAEkB,gBAAiB,QAAS4B,OAAQ,QAH/C,SAKI,mBAAGxC,UAAU,mCAAb,qFAKJ,cAACuC,EAAA,EAAD,CACIvC,UAAS,iBAAYhE,EAAQib,QAC7BvX,MAAO,CAAE2X,OAAQ,kBAAmB7U,OAAQ,QAFhD,SAII,mBAAGxC,UAAU,oBAAb,4ECfTsX,GAvCY,WAAO,IAAD,EACWvQ,yBAAe1J,GAD1B,mBACtBka,EADsB,KACRC,EADQ,KAGvB9O,EAAYC,iBAAe,MAYjC,OACI,mCACK4O,EACG,cAAC,GAAD,IAEA,cAAC,KAAD,2BAAYrO,IAAZ,IAAiCuF,IAAK/F,EAAtC,SACK4N,GAAYzS,KAAI,SAACC,EAAUqC,GACxB,OACI,cAAC,GAAD,CAEI5F,KAAMuD,EACNgT,QAAmB,IAAV3Q,EACTV,kBAAmB,SAACsD,GAAD,OAtBrB,SAAC5C,EAAe4C,GACtC,GAAI5C,EAAQ4C,GAAQ0O,GAAgBrR,OAChCoR,GAAgB,OACb,IAAIrR,EAAQ4C,KAAU,EACzB,OAEAL,EAAUvM,SAAWuM,EAAUvM,QAAQ8M,UAAU9C,EAAQ4C,IAiBjCtD,CAAkBU,EAAO4C,KAJxBjF,EAAS0C,MAAM+P,iB,SrBpCxCxF,O,qBAAAA,I,qBAAAA,I,+BAAAA,I,yBAAAA,I,wBAAAA,Q,KAsCL,IAAMuF,GAA6C,CACtD,CACI9P,MAAO,qDACPtE,YAAa,gBAEjB,CACIsE,MAAO,2DACPtE,YAAa,uBsB3Bf1G,GAAYC,YAAW,CACzBic,YAAa,CACTxX,QAAS,OACTP,WAAY,SACZ6C,OAAQ,OACRoE,WAAY,EACZzE,WAAY,OAEhBvF,KAAM,CACFf,MAAO,UACP6H,SAAU,YAIZiU,GAAqD,SACvD5b,GAEA,OACI,eAACqG,EAAA,EAAD,CAAKlC,QAAQ,OAAOoI,cAAc,SAAlC,UACI,cAACyC,GAAA,EAAD,UACI,eAAC5K,EAAA,EAAD,wCAAmBpE,EAAM6b,UAE7B,cAAC7M,GAAA,EAAD,UACI,eAAC5K,EAAA,EAAD,4BACS8E,GAAgBL,GAAmB7I,EAAM8b,oBAgInDC,GAzHgD,SAC3D/b,GAEA,IAAMC,EAAUR,KAEVuc,EAAavG,4BAAkBzT,GAC/Bia,EAAa3Y,yBAAe1B,GAJjC,EAM+C2D,mBAE9C,IARD,mBAMM2W,EANN,KAMwBC,EANxB,OAUyC5W,mBAExC,IAZD,mBAUM6W,EAVN,KAUqBC,EAVrB,KAcDvW,QAAQC,IAAI,kBACZD,QAAQC,IAAI/F,EAAMsc,cAClB5W,qBAAU,WACN,GAAI1F,EAAMsc,aAAc,CACpB,IAAIC,EAAQ,wBACyB,KAAjCN,EAAWpa,WAAWwI,SACtBkS,EAAQ,yBAEZ,IAAMC,EAAaP,EAAWpa,WAAWwH,QAAQkT,EAAO,YACxD5V,GAAK8E,IAAL,yCACsCmI,UAC9B4I,GAFR,cAIE9Q,MAAK,SAACC,GACJ,IAAMnH,EAAkCmH,EAAInH,KAAKiY,SAC5CC,KAAkCtQ,QAAO,SAACrE,GAC3C,MAA2C,MAApCA,EAAS4U,SAASC,iBAE7BT,EAAoB3X,SAG7B,CAACxE,EAAMsc,eAkBV,OADAxW,QAAQC,IAAIqW,GAER,qBAAKnY,UAAU,WAAf,SACI,eAAC4H,GAAD,CACIjC,cAAwC,IAAzBwS,EAAc/R,OAC7BX,kBAAmB1J,EAAM0J,kBAF7B,UAII,mBAAGzF,UAAU,SAAb,2FACA,mBAAGA,UAAU,eAAb,mDAEA,mBAAGA,UAAU,SAASN,MAAO,CAAE7D,MAAO,WAAtC,uKAIA,uBAEA,mBAAGmE,UAAU,SAASN,MAAO,CAAE7D,MAAO,WAAtC,kIAIA,qBAAKmE,UAAU,uBAAf,SACKiY,EAAiBpU,KAAI,SAACC,GACnB,OACI,qBAEI9D,UAAU,iCAFd,SAII,cAAC+D,GAAA,EAAD,CACIrE,MAAO,CAAEQ,QAAS,QAClBF,UAAU,yBACVgE,QACI,cAACC,GAAA,EAAD,CACIC,YACI,cAAC,KAAD,CACIlE,UAAWhE,EAAQY,OAG3BA,KACI,cAAC,KAAD,CACIoD,UAAWhE,EAAQY,OAG3Bf,MAAM,UACNsI,QACIgU,EAAc9T,WACV,SAACC,GAAD,OACIA,EAAOsT,OACP9T,EAAS8T,SACZ,EAETxb,SAAU,SAACC,GAAD,OAjEjC,SACbkE,EACAlE,GAEIA,EAAM6L,cAAc/D,SACpBiU,EAAiB,CAAC7X,IAClBwX,EAAW,CACP9Z,cAAesC,EAAKqX,KACpB5Z,aAAc4G,GAAmBrE,EAAKsX,aAG1CO,EAAiB,IAuDmBhc,CAAS0H,EAAUzH,MAI/BL,QAAS,CAAEwH,KAAMxH,EAAQ0b,aACzBhb,MAAO,cAAC,GAAD,eAAsBoH,OAhC5BA,EAAS8T,iBCtGxCgB,GAAoC,SAAC7c,GAA0B,IACzD+J,EAA+B/J,EAA/B+J,QAASC,EAAsBhK,EAAtBgK,KAAM8S,EAAgB9c,EAAhB8c,YAEjB5S,EAAW,WACbH,KAGJ,OACI,cAACO,GAAA,EAAD,CAAQP,QAASG,EAAUF,KAAMA,EAAjC,SACI,eAACO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,MACI,cAACrG,EAAA,EAAD,CAAYH,UAAU,eAAtB,mDAIJ8J,UACI,cAAC3J,EAAA,EAAD,CAAYH,UAAU,SAAtB,iIAKR,cAACyG,GAAA,EAAD,UACI,cAACtG,EAAA,EAAD,CACIH,UAAU,eACVN,MAAO,CAAE4C,UAAW,UAFxB,SAIKuW,MAGT,cAACnS,GAAA,EAAD,CACIhH,MAAO,CAAEiH,eAAgB,WAAYC,WAAY,GADrD,SAGI,cAACrE,EAAA,EAAD,CACIzC,QAASmG,EACTP,eAAa,EACbhG,MAAO,CAAE7D,MAAO,WAHpB,kCA+ILid,GAlIkD,SAC7D/c,GACE,IAAD,EAC6BgL,yBAAepJ,GAD5C,mBACMob,EADN,KACeC,EADf,OAG2B1X,oBAAkB,GAH7C,mBAGM2X,EAHN,KAGcC,EAHd,OAI+B5X,oBAAkB,GAJjD,mBAIM6X,EAJN,KAIgBC,EAJhB,OAMyC9X,mBAAiB,IAN1D,mBAMM+X,EANN,KAMqBC,EANrB,OAO+BhY,mBAAiB,IAPhD,mBAOMiY,EAPN,KAOgBC,EAPhB,KAkCKC,EAAWF,EAASnT,OAAS,EAC7BsT,EACFX,EAAQnb,WAAWwI,OAAS,IAAM2S,EAAQnb,WAAWwI,OAAS,GAElE,OACI,sBAAKpG,UAAU,WAAf,UACI,cAAC,GAAD,CACI6Y,YAAaU,EACbxT,KAAMkT,EACNnT,QAAS,WACLoT,GAAU,MAGlB,eAACtR,GAAD,CACIjC,eAAgBwT,EAChB1T,kBAAmB1J,EAAM0J,kBAF7B,UAII,mBAAGzF,UAAU,eAAb,iFACA,cAACoC,EAAA,EAAD,CACIpC,UAAU,uBACV2Z,GAAG,OACHlE,GAAG,OACHmE,GAAG,OAJP,SAMI,eAAC7O,GAAA,EAAD,CAAMC,WAAS,EAACrL,WAAW,SAA3B,UACI,cAACiL,GAAA,EAAD,CACIpF,SAAUiU,GAAYN,EACtBjW,MAAOwW,EACP7O,WACI6O,GAAW,mFAEfxd,MAAO6c,EAAQnb,WACfxB,SAAU,SAACC,IApDP,SAACkE,GACzB,IAAIsZ,EAAWtZ,EAAK6E,QAAQ,UAAW,IACnCyU,EAASzT,OAAS,KAClByT,EAAWA,EAAShO,MAAM,EAAG,KAEjCmN,EAAW,2BAAKD,GAAN,IAAenb,WAAYic,KAgDbC,CAAoBzd,EAAMqI,OAAOxI,QAErCQ,MAAO,kCACPyV,QAAQ,aAEZ,cAAC/P,EAAA,EAAD,CAAKrB,SAAU,IACf,cAACwB,EAAA,EAAD,CACIiD,SAAUkU,GAAWP,EACrBnZ,UAAU,iBACVN,MAAO,CACH+S,QAAS,GAEb3S,QAzDE,WACtBoZ,GAAU,GACVM,E/C5EoB,SAACpT,GAIzB,IAHA,IAAM2T,EAAS,GACTC,EAAa,aACbC,EAAmBD,EAAW5T,OAC3B8T,EAAI,EAAGA,EAAI9T,EAAQ8T,IACxBH,EAAOhS,KACHiS,EAAWG,OAAOrV,KAAKC,MAAMD,KAAKsV,SAAWH,KAGrD,OAAOF,EAAOM,KAAK,I+CmEHC,CAAa,KAiDT,SAQKb,EAAW,qBAAQ,sBAK/BA,GACG,qCACI,mBAAGzZ,UAAU,2BAAb,0IAGA,cAACoC,EAAA,EAAD,CACIpC,UAAU,uBACV2Z,GAAG,OACHlE,GAAG,OACHmE,GAAG,OAJP,SAMI,eAAC7O,GAAA,EAAD,CAAMC,WAAS,EAACrL,WAAW,SAA3B,UACI,cAACiL,GAAA,EAAD,CACIpF,SAAU2T,EACVjW,MAAOmW,IAAkBE,EACzBrd,MAAOmd,EACPjd,SAAU,SAACC,GACPid,EAAiBjd,EAAMqI,OAAOxI,QAElCQ,MAAO,wCACPyV,QAAQ,aAEZ,cAAC/P,EAAA,EAAD,CAAKrB,SAAU,IACf,cAACwB,EAAA,EAAD,CACIiD,SAAU2T,EACVnZ,UAAU,iBACVN,MAAO,CACH+S,QAAS,GAEb3S,QAxFJ,WACpBuZ,IAAkBE,GAClBH,GAAY,IAgFQ,yC,8BCtBjBmB,GAnIiD,SAC5Dxe,GACE,IAAD,EAC+BuF,mBAAiB,IADhD,mBACMkZ,EADN,KACgBC,EADhB,OAEuCnZ,oBAAS,GAFhD,mBAEMoZ,EAFN,KAEoBC,EAFpB,KAIKC,EAAepJ,4BAA4BrT,GAE3C0c,EAAgBxb,yBAAe1B,GAC/Bmd,EAAczb,yBAAetB,GAK7Bgd,EAAezM,8BAAoB3Q,GACnCqd,EAAc1M,8BAAoBvQ,GAClCkd,EAAgB3M,8BAAoBpQ,GAdzC,EAgBuCoD,oBAAkB,GAhBzD,mBAgBM4Z,EAhBN,KAgBoBC,EAhBpB,KAkBKC,EAAc,yCAAG,uCAAApS,EAAA,6DACbqS,EAA8B,CAChCjd,KAAMyc,EAAc/c,SACpBO,SAAUwc,EAAchd,SACxBS,YAAauc,EAAcjd,WAC3BK,cAAe6c,EAAY7c,cAC3Buc,SAAUA,EACVxc,aAAc8c,EAAY9c,aAAe,IAEvCsd,EAAiC,CACnCxT,oBAAqB,CACjB,CACIH,WAAY,IACZK,aAAc6S,EAAchd,UAEhC,CACI8J,WAAY,IACZK,aAAc6S,EAAchd,YAjBrB,SAsBK6E,GAAKuF,KAAK,eAAgBoT,GAtB/B,cAsBbE,EAtBa,OAuBnB1Z,QAAQC,IAAIyZ,GAvBO,SAwBK7Y,GAAKuF,KACzB,wBACAqT,GA1Be,cAwBbE,EAxBa,OA4BnB3Z,QAAQC,IAAI0Z,GA5BO,UA6BG9Y,GAAK8E,IAAL,uBACFmI,UAAUkL,EAAchd,YA9BzB,QA6Bb4d,EA7Ba,OAgCnB5Z,QAAQC,IAAI2Z,EAAQlb,KAAKA,MACnBnB,EAAwBqc,EAAQlb,KAAKA,KAC3Cqa,EAAa,CACT5c,aAAcoB,EAAYpB,aAC1BO,MAAOa,EAAYb,MACnBN,cAAemB,EAAYnB,cAC3BG,KAAMgB,EAAYhB,KAClBC,SAAUe,EAAYf,SACtBC,YAAac,EAAYd,cAE7Byc,IACAC,IACAC,IAEAE,GAAgB,GAChBpf,EAAM0J,kBAAkB,GA/CL,4CAAH,qDAkDdoE,EAAW,yCAAG,uBAAAb,EAAA,sEACVoS,IADU,2CAAH,qDAQjB,OACI,sBAAKpb,UAAU,WAAf,UACI,cAAC,GAAD,CACI6J,YAAaA,EACb9D,KAAMmV,EACNpV,QATQ,WAChBqV,GAAgB,MAUZ,eAACvT,GAAD,CACIjC,cAA4B,KAAb6U,EACf/U,kBAAmB1J,EAAM0J,kBACzBG,qBAAsB,WAClBuV,GAAgB,IAJxB,UAOI,mBAAGnb,UAAU,eAAb,oDACA,mBAAGA,UAAU,SAAb,mFAEA,cAACoC,EAAA,EAAD,CAAKmG,GAAG,OAAR,SACI,cAACqC,GAAA,EAAD,CACIlL,MAAO,CAAEiB,MAAO,MAAOwB,WAAY,OACnCzF,MAAM,WACNkR,KAAM8M,EAAe,OAAS,WAC9BgB,aAAa,mBACbtf,SAAU,SAACC,GAAD,OAAWoe,EAAYpe,EAAMqI,OAAOxI,QAC9Cyf,WAAY,CAERC,aACI,cAACC,GAAA,EAAD,CAAgBrc,SAAS,MAAzB,SACI,cAACK,EAAA,EAAD,CACIic,aAAW,6BACXhc,QAjGJ,kBAAM6a,GAAiBD,IAkGnBqB,YAjGJ,kBAAMpB,GAAiBD,IA8FvB,SAKKA,EACG,cAACsB,GAAA,EAAD,CACItc,MAAO,CAAEgE,SAAU,YAGvB,cAACuY,GAAA,EAAD,CACIvc,MAAO,CAAEgE,SAAU,4BC5DpDwY,GA3D8C,SACzDngB,GACE,IAAD,EAC6BgL,yBAAepJ,GAD5C,mBACMob,EADN,KACeC,EADf,KAEK9c,EAdQ,SAACqE,EAAyB4F,GACxC,OAAQA,GACJ,KAAK,EACD,OAAO5F,EAAKzC,SAChB,KAAK,EACD,OAAOyC,EAAK1C,SAEpB,MAAO,GAOOse,CAAUpD,EAAShd,EAAMoK,OACjCR,EAA0B,KAAVzJ,EAHrB,EAI6BoF,oBAAkB,GAJ/C,mBAIMoY,EAJN,KAIe0C,EAJf,OAKmC9a,mBAAiB,IALpD,mBAKMuJ,EALN,KAKkBwR,EALlB,KA8BD,OACI,qBAAKrc,UAAU,WAAf,SACI,eAAC4H,GAAD,CACIjC,cAAeA,GAAiB+T,EAChCjU,kBAAmB1J,EAAM0J,kBAF7B,UAII,mBAAGzF,UAAU,eAAb,SAA6BjE,EAAMwE,KAAKiG,QACxC,sBAAKxG,UAAU,uBAAf,UACI,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBAAf,SACI,cAAC4K,GAAA,EAAD,CACI1H,MAAOwW,EACP7O,WAAY6O,GAAW7O,EACvB3O,MAAOA,EACPE,SAAU,SAACC,IArClB,SAAC8J,EAAe5F,GAC7B,OAAQ4F,GACJ,KAAK,EACD6S,EAAW,2BAAKD,GAAN,IAAejb,SAAUyC,KACnC,MACJ,KAAK,EACY,KAATA,GACAmC,GAAK8E,IAAL,qCAAuCjH,IAAQkH,MAC3C,SAACC,GACG,IAAM4U,EAAwB5U,EAAInH,KAAKA,KACnC+b,IAAiB5C,IACjB0C,EAAWE,GACXD,EAAc,mFAK9BrD,EAAW,2BAAKD,GAAN,IAAelb,SAAU0C,MAqBnBnE,CAASL,EAAMoK,MAAO9J,EAAMqI,OAAOxI,QAEvCQ,MAAOX,EAAMwE,KAAK2B,YAClBiQ,QAAQ,wBCQrBoK,GAlEc,WACzB,IAAMrb,EAAUC,cAEV4Z,EAAezM,8BAAoB3Q,GACnC6e,EAAelO,8BAAoBvQ,GACnCkd,EAAgB3M,8BAAoBpQ,GACpCwK,EAAYC,iBAAe,MANF,EAOLrH,mBAAiB,GAPZ,mBAOxB6E,EAPwB,KAOjB0C,EAPiB,KASzB4T,EAA4B,GAClCnG,GAAYpQ,SAAQ,SAACpC,EAAkCqC,GACnDsW,EAAM1U,KACF,cAAC,GAAD,CAEI5B,MAAOA,EACP5F,KAAMuD,EACN2B,kBAAmB,SAACsD,GAAD,OAAkBD,EAAO3C,EAAO4C,KAH9C5C,OAQjB,IAAM2C,EAAM,yCAAG,WAAO3C,EAAe4C,GAAtB,UAAAC,EAAA,2DACP7C,EAAQ4C,EAAO,GADR,uBAEPgS,IACAyB,IACAvB,IACA/Z,EAAQkE,QAAQ,aAChByD,EAAS,GANF,0BASXA,EAAS1C,EAAQ4C,GACb5C,EAAQ4C,EAAO,EAGf7H,EAAQkE,QAAQ,aAEhBsD,EAAUvM,SAAWuM,EAAUvM,QAAQ8M,UAAU9C,EAAQ4C,GAflD,2CAAH,wDAmBZ,OACI,eAAC,KAAD,2BAAYG,IAAZ,IAAiCuF,IAAK/F,EAAtC,UACK+T,EACD,cAAC,GAAD,CAEIhX,kBAAmB,SAACsD,GAChBD,EAAO,EAAGC,KAFT,GAKT,cAAC,GAAD,CAEIsP,aAAwB,IAAVlS,EACdV,kBAAmB,SAACsD,GAChBD,EAAO,EAAGC,KAHT,GAMT,cAAC,GAAD,CAEItD,kBAAmB,SAACsD,GAChBD,EAAO,EAAGC,KAFT,QCRN2T,GAnDO,WAClB,IAAMC,EAAYnL,4BAAkBkD,IA8BpC,OA7BAjT,qBAAU,WACN0T,OAAOyH,iBACH,WACA,SAACC,GACGhb,QAAQC,IAAI+a,GACZ,IAAMnV,EAAMmV,EAAEtc,KAAKuc,MAAM,OACzB,GAAe,WAAXpV,EAAI,GAAiB,CACrB,IAAMqV,EAAkBrV,EAAI,GAC5B7F,QAAQC,IAAR,mBAAwBib,IACxB,IAAMC,EAAgBD,EAAQD,MAAM,KAC9BlH,EAA8B,GACpCoH,EAAc9W,SAAQ,SAAC+W,GACnB,IAAMC,EAA4BD,EAAQH,MAAM,KAChDlH,EAAW7N,KAAK,CACZ3J,KAAM8e,EAAgB,GACtBnH,YAAamH,EAAgB,GAC7BlH,UAAWkH,EAAgB,QAGnCrb,QAAQC,IAAIkb,GACZL,EAAU/G,OACQ,UAAXlO,EAAI,IACX7F,QAAQC,IAAI,mBAGpB,KAEL,IAGC,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqb,OAAK,EAACC,KAAK,YAAYte,UAAWwY,KACzC,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,UAAUte,UAAWyd,KACvC,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,YAAYte,UAAW2J,KACzC,cAAC,EAAD,CAAgB0U,OAAK,EAACC,KAAK,IAAIte,UAAWoX,KAC1C,cAAC,EAAD,CAAgBiH,OAAK,EAACC,KAAK,UAAUte,UAAWsP,KAChD,cAAC,EAAD,CACI+O,OAAK,EACLC,KAAK,yBACLte,UAAWkC,KAGf,cAAC,IAAD,CAAUqc,KAAK,IAAIre,GAAG,oBChDvBse,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/V,MAAK,YAAkD,IAA/CgW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCR3O,GAAQkP,cAEdC,IAASpf,OACL,cAAC,IAAMqf,WAAP,UACI,cAAC,aAAD,UACI,cAACC,EAAA,EAAD,CAAerP,MAAOA,GAAtB,SACI,cAACsP,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,GAAD,YAKhBC,SAASC,eAAe,SAM5Bf,O","file":"static/js/main.e0ed433d.chunk.js","sourcesContent":["import {\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport enum DISPLAY_TYPE {\r\n    HOME,\r\n    BENEFIT,\r\n    TOGETHER,\r\n    SETTING,\r\n}\r\n\r\ninterface BottomBarNavProps {\r\n    current: DISPLAY_TYPE;\r\n    onChange: (clickType: DISPLAY_TYPE) => void;\r\n}\r\n\r\nconst BottomBarNav: React.FC<BottomBarNavProps> = (\r\n    props: BottomBarNavProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (\r\n        event: React.ChangeEvent<any>,\r\n        newValue: DISPLAY_TYPE\r\n    ) => {\r\n        props.onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={props.current}\r\n            onChange={handleChange}\r\n            showLabels={true}\r\n        >\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"홈\"\r\n                value={DISPLAY_TYPE.HOME}\r\n                icon={<HomeIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"혜택찾기\"\r\n                value={DISPLAY_TYPE.BENEFIT}\r\n                icon={<StorefrontIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"투게더\"\r\n                value={DISPLAY_TYPE.TOGETHER}\r\n                icon={<PeopleIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"My\"\r\n                value={DISPLAY_TYPE.SETTING}\r\n                icon={<SettingsIcon />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default BottomBarNav;\r\n","import { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'recoil-persist', // configuration stay the same too\r\n    storage: localStorage\r\n})\r\n\r\nexport {\r\n    persistAtom\r\n}","import { atom } from 'recoil';\r\nimport { CategoryDataSet } from '../component/Category/DataModel';\r\nimport { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport { TransactionSet } from '../component/Home/DataModel';\r\nimport { SignupProfileInfo } from '../component/Signup/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport interface UserInfo {\r\n    name: string;\r\n    nickname: string;\r\n    phoneNumber: string;\r\n    accountNumber: string;\r\n    accountMoney: number;\r\n    point: number;\r\n}\r\n\r\nexport const IsSplashSkip = atom<boolean>({\r\n    key: 'IsSplashSkip',\r\n    default: false,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const BottomNavState = atom<DISPLAY_TYPE>({\r\n    key: 'BottomNavState',\r\n    default: DISPLAY_TYPE.HOME,\r\n});\r\n\r\nexport const BenefitSearch = atom<string>({\r\n    key: 'BenefitSearch',\r\n    default: '',\r\n});\r\n\r\nexport const SignUpProfileState = atom<SignupProfileInfo>({\r\n    key: 'SignUpProfileState',\r\n    default: {\r\n        cellNumber: '',\r\n        nickName: '',\r\n        realName: '',\r\n    },\r\n});\r\n\r\nexport const SignUpAccInfoState = atom<{\r\n    accountNumber: string;\r\n    accountMoney: number;\r\n}>({\r\n    key: 'SignUpAccInfoState',\r\n    default: {\r\n        accountMoney: 0,\r\n        accountNumber: '',\r\n    },\r\n});\r\n\r\nexport const SignUpCategoryState = atom<CategoryDataSet[]>({\r\n    key: 'SignUpCategoryState',\r\n    default: [],\r\n});\r\n\r\nexport const CurrentUserState = atom<UserInfo>({\r\n    key: 'CurrentUserState',\r\n    default: {\r\n        name: '',\r\n        nickname: '',\r\n        phoneNumber: '',\r\n        accountNumber: '',\r\n        accountMoney: 0,\r\n        point: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserCategoryState = atom<number[]>({\r\n    key: 'CurrentUserCategoryState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserTransactionState = atom<TransactionSet[]>({\r\n    key: 'CurrentUserTransactionState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport interface AuthRouteProps extends RouteProps {\r\n    isLogin: boolean;\r\n}\r\n\r\nclass AuthRoute extends Route<AuthRouteProps> {\r\n    render = () => {\r\n        const { isLogin, children, component, ...others } = this.props;\r\n        if (isLogin) {\r\n            return (\r\n                <Route {...others} component={component}>\r\n                    {children}\r\n                </Route>\r\n            );\r\n        } else {\r\n            return (\r\n                <Route\r\n                    {...others}\r\n                    render={() => <Redirect to={{ pathname: '/signin' }} />}\r\n                />\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { RouteProps } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../recoil/Session';\r\nimport AuthRoute from './AuthRoute';\r\n\r\nconst AuthRouteGuard: React.FC<RouteProps> = (props: RouteProps) => {\r\n    const currentUser = useRecoilValue(CurrentUserState);\r\n    return <AuthRoute isLogin={currentUser.nickname !== ''} {...props} />;\r\n};\r\n\r\nexport default AuthRouteGuard;\r\n","import {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport interface HeaderActionProps {\r\n    isLast: boolean;\r\n    headerTitle: string;\r\n    onMoveClick: () => void;\r\n}\r\n\r\nconst HeaderAction: React.FC<HeaderActionProps> = (\r\n    props: HeaderActionProps\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar style={{ alignItems: 'center' }}>\r\n                {!props.isLast && (\r\n                    <IconButton\r\n                        onClick={props.onMoveClick}\r\n                        className=\"back_div\"\r\n                    >\r\n                        <KeyboardArrowLeft\r\n                            style={{\r\n                                display: 'block',\r\n                            }}\r\n                        />\r\n                    </IconButton>\r\n                )}\r\n\r\n                <Typography className=\"txt_24 txt_b\">\r\n                    {props.headerTitle}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderAction;\r\n","import { atom } from 'recoil';\r\nimport {\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from '../component/Benefit/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const BenefitStateCompany = atom<BenefitCompanyRes>({\r\n    key: 'BenefitStateCompany',\r\n    default: {\r\n        isLoaded: false,\r\n        data: [],\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const BenefitFavoriteState = atom<BenefitFavoriteCompany>({\r\n    key: 'BenefitFavoriteState',\r\n    default: {},\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { BenefitCompany } from '../component/Benefit/DataModel';\r\nimport HeaderAction from '../component/Common/HeaderAction';\r\nimport { BenefitFavoriteState, BenefitStateCompany } from '../recoil/Benefit';\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        width: '80%',\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst BenefitCompanyPage: React.FC = () => {\r\n    const { name } = useParams<any>();\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const company = useRecoilValue(BenefitStateCompany);\r\n    const favoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [currentCompany, setCompany] = useState<BenefitCompany>();\r\n\r\n    useEffect(() => {\r\n        const data = company.data.find((data) => {\r\n            return data.companyName === name;\r\n        });\r\n        favoriteCompany[name];\r\n        if (data) {\r\n            setCompany({\r\n                ...data,\r\n                userLike: !!favoriteCompany[name],\r\n            });\r\n        }\r\n    }, [company, favoriteCompany]);\r\n    console.log(currentCompany);\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <HeaderAction\r\n                headerTitle={name}\r\n                isLast={false}\r\n                onMoveClick={() => {\r\n                    history.goBack();\r\n                }}\r\n            >\r\n                {name}\r\n            </HeaderAction>\r\n            {currentCompany?.thumbNailPath && (\r\n                <img src={currentCompany?.thumbNailPath} />\r\n            )}\r\n\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt mg_t20\">\r\n                    <p className=\"txt_20 txt_b\">{name}에서는</p>\r\n\r\n                    <p className=\"txt_20\">\r\n                        {`${currentCompany?.description}합니다.`}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"box_div bg_wh pd_20 mg_t30\">\r\n                    <p className=\"txt_20 txt_b\">{name} 상품</p>\r\n                    <div className=\"mg_t30\" style={{ width: '100%' }}>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                display: 'inline-block',\r\n                                width: '48%',\r\n                            }}\r\n                        >\r\n                            <img src=\"/images/product/product_1.png\" />\r\n                            <p className=\"txt_16\">햄프코튼 다용도 타월</p>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                display: 'inline-block',\r\n                                width: '48%',\r\n                                marginLeft: '2%',\r\n                            }}\r\n                        >\r\n                            <img src=\"/images/product/product_2.png\" />\r\n                            <p className=\"txt_16\">천연라텍스 고무장갑</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mg_t30\" style={{ width: '100%' }}>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                display: 'inline-block',\r\n                                width: '48%',\r\n                            }}\r\n                        >\r\n                            <img src=\"/images/product/product_3.png\" />\r\n                            <p className=\"txt_16\">사이잘 빨대 세척솔</p>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                display: 'inline-block',\r\n                                width: '48%',\r\n                                marginLeft: '2%',\r\n                            }}\r\n                        >\r\n                            <img src=\"/images/product/product_4.png\" />\r\n                            <p className=\"txt_16\">다회용 밀랍 주방랩</p>\r\n                        </div>\r\n                    </div>\r\n                    <Box my=\"30px\" textAlign=\"center\">\r\n                        <Button\r\n                            className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                        >\r\n                            상품 더 보러가기\r\n                        </Button>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"box_div bg_wh pd_20 mg_t30\">\r\n                    <p className=\"txt_20 txt_b\">{name} 후기</p>\r\n                    <img\r\n                        className=\"mg_t20\"\r\n                        style={{ width: '100%' }}\r\n                        src=\"/images/product/company_score.png\"\r\n                    />\r\n                    <div className=\"line bg_gray3 mg_t20\"></div>\r\n\r\n                    <p className=\"txt_12 txt_b mg_t20\">\r\n                        hayeon0908 / 닥터노아 마루 대나무 칫솔\r\n                    </p>\r\n                    <img\r\n                        className=\"mg_t6\"\r\n                        style={{\r\n                            height: '16px',\r\n                            width: 'auto',\r\n                            position: 'relative',\r\n                            display: 'inline-block',\r\n                        }}\r\n                        src=\"/images/product/star_5.png\"\r\n                    />\r\n                    <p\r\n                        className=\"txt_12 txt_gray2 mg_l10\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            display: 'inline-block',\r\n                        }}\r\n                    >\r\n                        2021.02.25\r\n                    </p>\r\n\r\n                    <p className=\"mg_t20 txt_14\">\r\n                        플라스틱 줄여야겠다고 생각해서 구매하게 되었어요! 여러\r\n                        제품 써봤는데 이 대나무 칫솔이 제일 쓰기도 편하고 재질이\r\n                        좋아요 ㅠㅠ 대나무 칫솔 쓰면 항상 입 안이 헐어서\r\n                        고민이였는데 이 저품 쓰고 싹 사라졌어요~{' '}\r\n                    </p>\r\n                    <div className=\"scroll_wrap\">\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_1_1.png\"\r\n                        />\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_1_2.png\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"line bg_gray3 mg_t20\"></div>\r\n\r\n                    <p className=\"txt_12 txt_b mg_t20\">\r\n                        러빗88 / 유기농 면마스크\r\n                    </p>\r\n                    <img\r\n                        className=\"mg_t6\"\r\n                        style={{\r\n                            height: '16px',\r\n                            width: 'auto',\r\n                            position: 'relative',\r\n                            display: 'inline-block',\r\n                        }}\r\n                        src=\"/images/product/star_5.png\"\r\n                    />\r\n                    <p\r\n                        className=\"txt_12 txt_gray2 mg_l10\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            display: 'inline-block',\r\n                        }}\r\n                    >\r\n                        2020.08.15\r\n                    </p>\r\n\r\n                    <p className=\"mg_t20 txt_14\">\r\n                        마스크가 마감도 깔끔하고 끈도 튼튼해요~ 아무래도 아이가\r\n                        많이 어리다보니 물고 빨고 할게 뻔한데, 항균,\r\n                        무형광소재로 마들었다니 안심이 되더라구요. 무엇보다 좋은\r\n                        자재들을 사용한 마스크라 더욱 믿음이 갑니다 추천합니다^^\r\n                    </p>\r\n                    <div className=\"scroll_wrap\">\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_2_1.png\"\r\n                        />\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_2_2.png\"\r\n                        />\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_2_3.png\"\r\n                        />\r\n                        <img\r\n                            className=\"mg_t10 mg_r10 review_img\"\r\n                            src=\"/images/product/product_review_2_4.png\"\r\n                        />\r\n                    </div>\r\n                    <Box my=\"30px\" textAlign=\"center\">\r\n                        <Button\r\n                            className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                        >\r\n                            후기 767개 전체보기\r\n                        </Button>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BenefitCompanyPage;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconsole.log(`Backend End point ${process.env.REACT_APP_BACKEND_ENDPOINT}`);\r\nconst http = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_ENDPOINT,\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    (config: AxiosRequestConfig) => {\r\n        console.log(`Reqeust Interceptor Called`);\r\n        return config;\r\n    },\r\n    (error: any) => {\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n    (config: AxiosResponse) => {\r\n        console.log(`Response Interceptor Called`);\r\n        return config;\r\n    },\r\n    (error: any) => {\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default http;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface CategoryDataSet extends CategoryDataInfo {}\r\n\r\nexport const CategoryStandInfo: CategoryDataSet[] = [\r\n    {\r\n        id: 101,\r\n        name: '저플라스틱',\r\n    },\r\n    {\r\n        id: 102,\r\n        name: '저탄소',\r\n    },\r\n    {\r\n        id: 103,\r\n        name: '동물실험반대',\r\n    },\r\n    {\r\n        id: 104,\r\n        name: '결식아동',\r\n    },\r\n    {\r\n        id: 105,\r\n        name: '노인보호',\r\n    },\r\n    {\r\n        id: 106,\r\n        name: '장애인 복지',\r\n    },\r\n    {\r\n        id: 107,\r\n        name: '장애인이 만든 제품',\r\n    },\r\n    {\r\n        id: 108,\r\n        name: '구호물품',\r\n    },\r\n    {\r\n        id: 109,\r\n        name: '비건',\r\n    },\r\n];\r\n","import { Checkbox, FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent } from 'react';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    margin: {\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nexport interface CategoryDataInfo {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface SelectListProps {\r\n    standardData: CategoryDataInfo[];\r\n    selectData: CategoryDataInfo[];\r\n    onChange: (\r\n        data: CategoryDataInfo,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => void;\r\n}\r\n\r\nconst SelectList: React.FC<SelectListProps> = (props: SelectListProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {props.standardData.map((eachData) => {\r\n                return (\r\n                    <div\r\n                        key={eachData.id}\r\n                        className=\"box_div mg_t20 bg_wh height_80\"\r\n                    >\r\n                        <FormControlLabel\r\n                            style={{ display: 'flex' }}\r\n                            className=\"checkbox__label pd_t26 pd_l20\"\r\n                            control={\r\n                                <Checkbox\r\n                                    checkedIcon={\r\n                                        <CheckCircleOutlineIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    icon={\r\n                                        <RadioButtonUncheckedIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    color=\"primary\"\r\n                                    checked={\r\n                                        props.selectData.findIndex(\r\n                                            (select) =>\r\n                                                select.id === eachData.id\r\n                                        ) >= 0\r\n                                    }\r\n                                    onChange={(event) => {\r\n                                        props.onChange(eachData, event);\r\n                                    }}\r\n                                />\r\n                            }\r\n                            classes={{ label: classes.margin }}\r\n                            label={eachData.name}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectList;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface DonationCategory {\r\n    donationId: number;\r\n    totalDonationCount: number;\r\n}\r\n\r\nexport interface DonationMember {\r\n    nickname: string;\r\n    point: number;\r\n}\r\n\r\nexport interface GivingResultInfo {\r\n    isLoaded: boolean;\r\n    totalDonationMoney: number;\r\n    donationRatioStatus: DonationCategory[];\r\n    memberDTOs: DonationMember[];\r\n}\r\n\r\nexport interface GivingDataSet extends CategoryDataInfo {}\r\n\r\nexport const COLOR_SET = [\r\n    '#3BAAD8',\r\n    '#62BBE0',\r\n    '#9DD4EC',\r\n    '#C4E5F#',\r\n    '#D8EEF7',\r\n];\r\n\r\nexport const GivingStandInfo: GivingDataSet[] = [\r\n    {\r\n        id: 201,\r\n        name: '친환경',\r\n    },\r\n    {\r\n        id: 202,\r\n        name: '동물보호',\r\n    },\r\n    {\r\n        id: 203,\r\n        name: '아동 / 노인',\r\n    },\r\n    {\r\n        id: 204,\r\n        name: '장애인',\r\n    },\r\n    {\r\n        id: 205,\r\n        name: '구호물품',\r\n    },\r\n];\r\n\r\nexport interface CommonInterface {\r\n    onMoveClick: (nextMove: number) => void;\r\n    index: number;\r\n}\r\n","import { CategoryStandInfo } from '../Category/DataModel';\r\nimport { GivingStandInfo } from '../Giving/DataModel';\r\n\r\nexport const getCategoryNameFromId = (id: number): string => {\r\n    const target = CategoryStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getGivingNameFromId = (id: number): string => {\r\n    const target = GivingStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getMoneyStr2Number = (str: string): number => {\r\n    return Math.floor(Number(str));\r\n};\r\n\r\nexport const getNumberString = (number: number): string => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport const makeNumberId = (length: number): string => {\r\n    const result = [];\r\n    const characters = '0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result.push(\r\n            characters.charAt(Math.floor(Math.random() * charactersLength))\r\n        );\r\n    }\r\n    return result.join('');\r\n};\r\n\r\nexport const getCategoryImgPath = (id: number): string => {\r\n    const prefix = '/images/';\r\n    switch (id) {\r\n        case 101:\r\n            return prefix + 'icn_lowPlastic.png';\r\n        case 102:\r\n            return prefix + 'icn_lowCarbon.png';\r\n        case 103:\r\n            return prefix + 'icn_noAnimalTesting.png';\r\n        case 104:\r\n            return prefix + 'icn_children.png';\r\n        case 105:\r\n            return prefix + 'icn_oldman.png';\r\n        case 106:\r\n            return prefix + 'icn_disabled.png';\r\n        case 107:\r\n            return prefix + 'icn_disabled_Product.png';\r\n        case 108:\r\n            return prefix + 'icn_relief.png';\r\n        case 109:\r\n            return prefix + 'icn_vegan.png';\r\n    }\r\n    return '';\r\n};\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface SignUpCommon {\r\n    buttonDisable: boolean;\r\n    isLast?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n    onCustomizeNextClick?: () => void;\r\n}\r\n\r\nconst SignupCommonComponent: React.FC<PropsWithChildren<SignUpCommon>> = (\r\n    props: PropsWithChildren<SignUpCommon>\r\n) => {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar style={{ alignItems: 'center' }}>\r\n                    {!props.isLast && (\r\n                        <IconButton\r\n                            className=\"back_div\"\r\n                            disabled={props.isLast}\r\n                            onClick={() => props.onMoveButtonClick(-1)}\r\n                        >\r\n                            <KeyboardArrowLeft\r\n                                style={{\r\n                                    display: `${\r\n                                        props.isLast ? 'none' : 'block'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    )}\r\n                    <Typography className=\"txt_24 txt_b\">\r\n                        혜택통 만들기\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => {\r\n                    props.onCustomizeNextClick\r\n                        ? props.onCustomizeNextClick()\r\n                        : props.onMoveButtonClick(1);\r\n                }}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">\r\n                    {props.isLast ? '완료! 혜택 받으러 가기' : '다음'}\r\n                </p>\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupCommonComponent;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentUserState, SignUpCategoryState } from '../../recoil/Session';\r\nimport { CategoryDataSet, CategoryStandInfo } from '../Category/DataModel';\r\nimport SelectList from '../Common/SelectList';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst LIMIT = 2;\r\n\r\nconst ACCategoryDialog: React.FC<ACDialogProps & { recommand: number[] }> = (\r\n    props: ACDialogProps & { recommand: number[] }\r\n) => {\r\n    const { onClose, open, recommand } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    let str = '';\r\n\r\n    recommand.forEach((eachData: number, index) => {\r\n        str += getCategoryNameFromId(eachData);\r\n        str += recommand.length - 1 !== index ? ', ' : ' ';\r\n    });\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            카테고리 추천\r\n                        </Typography>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline' }}\r\n                    >\r\n                        진영님의 소비 패턴을 분석해보니\r\n                    </Typography>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline', color: '#62C3EB' }}\r\n                    >\r\n                        {str}\r\n                    </Typography>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline' }}\r\n                    >\r\n                        관련 소비가 많았어요! 해당 카테고리를 구독해보시는 것은\r\n                        어떨까요?\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions\r\n                    style={{ justifyContent: 'flex-end', paddingTop: 0 }}\r\n                >\r\n                    <Button\r\n                        onClick={handleOk}\r\n                        disableRipple\r\n                        style={{ color: '#62C3EB' }}\r\n                    >\r\n                        확인 완료\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst ACOverDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <CardContent>\r\n                <Typography>2가지의 카테고리만 선택 할 수 있어요.</Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end', paddingTop: 0 }}>\r\n                <Button\r\n                    onClick={handleOk}\r\n                    disableRipple\r\n                    style={{ color: '#62C3EB' }}\r\n                >\r\n                    확인 완료\r\n                </Button>\r\n            </CardActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCategoryComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [category, setCategory] = useRecoilState<CategoryDataSet[]>(\r\n        SignUpCategoryState\r\n    );\r\n\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [suggestDialog, setSuggestDialog] = useState<boolean>(false);\r\n    const [overDialog, setOverDialog] = useState<boolean>(false);\r\n\r\n    const [recommand, setRecommand] = useState<number[]>([]);\r\n    const buttonDisable = category.length !== 2;\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${userInfo.nickname}/category/recommend`).then(\r\n            (res) => {\r\n                const recommand = res.data.data.map((eachData: any) => {\r\n                    return eachData.categoryId;\r\n                });\r\n                setRecommand(recommand);\r\n                setSuggestDialog(true);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(userInfo);\r\n    const selectData = (\r\n        data: CategoryDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            if (category.length < LIMIT) {\r\n                setCategory([...category, data]);\r\n            } else {\r\n                setOverDialog(true);\r\n            }\r\n        } else {\r\n            setCategory(category.filter((item) => data !== item));\r\n        }\r\n    };\r\n\r\n    const onNextClick = (next: number) => {\r\n        const data: SignupCategory = {\r\n            benefitCategoryList: [],\r\n        };\r\n\r\n        category.forEach((eachData) => {\r\n            data.benefitCategoryList.push({\r\n                categoryId: eachData.id,\r\n                userNickname: userInfo.nickname,\r\n            });\r\n        });\r\n        http.post(`/api/members/category`, category).then((res) => {\r\n            console.log(res);\r\n            props.onMoveButtonClick(next);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACCategoryDialog\r\n                recommand={recommand}\r\n                open={suggestDialog}\r\n                onClose={() => {\r\n                    setSuggestDialog(false);\r\n                }}\r\n            />\r\n            <ACOverDialog\r\n                open={overDialog}\r\n                onClose={() => {\r\n                    setOverDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={buttonDisable}\r\n                onMoveButtonClick={onNextClick}\r\n            >\r\n                <p className=\"txt_20\">관심있는 카테고리 2가지를 골라</p>\r\n                <p className=\"txt_20 txt_b\">집중 혜택 받으세요.</p>\r\n\r\n                <SelectList\r\n                    selectData={category}\r\n                    standardData={CategoryStandInfo}\r\n                    onChange={selectData}\r\n                />\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCategoryComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst SignupFinishComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={false}\r\n                onMoveButtonClick={() => props.onMoveButtonClick(1)}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box mt=\"25px\" />\r\n                    <p className=\"txt_20 txt_b\">축하합니다!</p>\r\n                    <p className=\"txt_20\">혜택통이 만들어졌어요!</p>\r\n                    <p className=\"txt_20\">이제 착한 소비하고</p>\r\n                    <p className=\"txt_20\">혜택도 받으세요.</p>\r\n                    <Box flexGrow=\"1\" />\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            className=\"img_rending\"\r\n                            src=\"/images/rending_1.png\"\r\n                        />\r\n                    </p>\r\n                    <Box mb=\"45px\" />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupFinishComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport SignupCategoryComponent from '../component/Signup/SignupCategoryComponent';\r\nimport SignupFinishComponent from '../component/Signup/SignupFinishComponent';\r\n\r\nconst CategoryPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const [currentIndex, setIndex] = useState(0);\r\n\r\n    const onMove = async (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            return;\r\n        }\r\n        setIndex(index + move);\r\n        if (index + move >= 2) {\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentIndex === 0 ? (\r\n                <SignupCategoryComponent\r\n                    key={0}\r\n                    onMoveButtonClick={(move: number) => {\r\n                        onMove(0, move);\r\n                    }}\r\n                />\r\n            ) : (\r\n                <SignupFinishComponent\r\n                    key={1}\r\n                    onMoveButtonClick={(move: number) => {\r\n                        onMove(1, move);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import { Settings } from 'react-slick';\r\n\r\nexport const commonSlickSettings: Settings = {\r\n    touchMove: false,\r\n    dots: false,\r\n    arrows: false,\r\n};\r\n","import { atom } from 'recoil';\r\nimport { GivingDataSet, GivingResultInfo } from '../component/Giving/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const GivingSelectState = atom<GivingDataSet[]>({\r\n    key: 'GivingSelectState',\r\n    default: [],\r\n});\r\n\r\nexport const GivingAmountState = atom<number>({\r\n    key: 'GivingAmountState',\r\n    default: 0,\r\n});\r\n\r\nexport const GivingResultState = atom<GivingResultInfo>({\r\n    key: 'GivingResultState',\r\n    default: {\r\n        isLoaded: false,\r\n        donationRatioStatus: [],\r\n        memberDTOs: [],\r\n        totalDonationMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    fingerClick: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst FingerDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open, fingerClick } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            지문등록\r\n                        </Typography>\r\n                    }\r\n                    subheader={\r\n                        <Typography className=\"txt_14\">\r\n                            더욱 쉽고 빠른 로그인을 위해 지문을 등록해 주세요.\r\n                        </Typography>\r\n                    }\r\n                />\r\n            </Card>\r\n            <CardContent style={{ textAlign: 'center' }}>\r\n                <IconButton onClick={fingerClick}>\r\n                    <img src=\"/images/Fingerprint_Color.png\" />\r\n                </IconButton>\r\n                <Typography className=\"txt_14\">센서에 지문인식</Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end', paddingTop: 0 }}>\r\n                <Button\r\n                    onClick={onClose}\r\n                    disableRipple\r\n                    style={{ color: '#62C3EB' }}\r\n                >\r\n                    취소\r\n                </Button>\r\n            </CardActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default FingerDialog;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport HeaderAction from '../Common/HeaderAction';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport interface GivingCommonProps {\r\n    headerTitle: string;\r\n    isLast: boolean;\r\n    buttonTitle: string;\r\n    buttonDisable?: boolean;\r\n    onMoveClick: (offset: number) => void;\r\n}\r\n\r\ntype GivingCommonType = React.PropsWithChildren<GivingCommonProps>;\r\n\r\nconst GivingCommon: React.FC<GivingCommonType> = (props: GivingCommonType) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            <HeaderAction\r\n                isLast={props.isLast}\r\n                headerTitle={props.headerTitle}\r\n                onMoveClick={() => props.onMoveClick(-1)}\r\n            />\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => props.onMoveClick(1)}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">{props.buttonTitle}</p>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GivingCommon;\r\n","import { Box, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingAmountState, GivingSelectState } from '../../recoil/Giving';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { getNumberString } from '../Common/util';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    inputText: {\r\n        '&>div>input': {\r\n            textAlign: 'center',\r\n        },\r\n        '&>p': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst isValid = (origin: number, max: number) => {\r\n    return 0 < origin && origin <= max;\r\n};\r\n\r\nconst GivingAmountComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const classes = useStyles();\r\n\r\n    const [givingAmount, setGivingAmount] = useRecoilState(GivingAmountState);\r\n    const givingSelect = useRecoilValue(GivingSelectState);\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setGivingAmount(Number(event.target.value));\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await http.post(`/api/trading/donation`, {\r\n            userNickname: userInfo.nickname,\r\n            donationId: givingSelect[0].id,\r\n            donationPoint: givingAmount,\r\n        });\r\n        setOpen(false);\r\n        onMoveClick(index + 1);\r\n    };\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={!isValid(givingAmount, userInfo.point)}\r\n            onMoveClick={(nextMove: number) => {\r\n                if (nextMove < 0) {\r\n                    onMoveClick(index + nextMove);\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n\r\n                // onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <FingerDialog fingerClick={onClose} open={open} onClose={onClose} />\r\n            <p className=\"txt_20\">기부하고 싶은</p>\r\n            <p className=\"txt_20 txt_b\">금액을 입력하세요.</p>\r\n            <Box mt=\"25px\">\r\n                <TextField\r\n                    classes={{\r\n                        root: classes.inputText,\r\n                    }}\r\n                    style={{\r\n                        width: '80%',\r\n                        marginLeft: '10%',\r\n                    }}\r\n                    helperText={`최대 ${getNumberString(\r\n                        userInfo.point\r\n                    )} 원 입금 가능`}\r\n                    onChange={onChange}\r\n                />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingAmountComponent;\r\n","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: '100%' }}\r\n        >\r\n            <CircularProgress\r\n                style={{\r\n                    height: '4rem',\r\n                    width: '4rem',\r\n                    color: '#62C3EB',\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { COLOR_SET, DonationMember } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        display: 'inline-block',\r\n        maxWidth: '55px',\r\n        minWidth: '50px',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'right',\r\n        overflow: 'hidden !important',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    money: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif\",\r\n        fontSize: '17px',\r\n    },\r\n}));\r\n\r\nconst MAX_SHOW_MEMBER = 8;\r\n\r\ninterface GivingComponentDonationMemberProps {\r\n    donationMember: DonationMember[];\r\n}\r\n\r\nconst getOrderMember = (donationMember: DonationMember[]) => {\r\n    return donationMember\r\n        .slice()\r\n        .sort((d1, d2) => {\r\n            return d2.point - d1.point;\r\n        })\r\n        .slice(0, MAX_SHOW_MEMBER);\r\n};\r\n\r\nconst getRage = (sortMemger: DonationMember[]): [number, number] => {\r\n    const maxValueLen = sortMemger[0].point;\r\n    const minValueLen = sortMemger[sortMemger.length - 1].point;\r\n\r\n    if (sortMemger.length >= 1) {\r\n        const max = maxValueLen * 1.1;\r\n        const min = minValueLen * 0.9;\r\n        return [min, max];\r\n    } else {\r\n        return [0, 0];\r\n    }\r\n};\r\n\r\nconst GivingComponentDonationMember: React.FC<GivingComponentDonationMemberProps> = ({\r\n    donationMember,\r\n}: GivingComponentDonationMemberProps) => {\r\n    const classes = useStyles();\r\n    const orderMember = getOrderMember(donationMember);\r\n    const [start, end] = getRage(orderMember);\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    지난 달 기부왕👍\r\n                </Typography>\r\n                <Box>\r\n                    <Grid>\r\n                        {orderMember.map((eachMember, index) => {\r\n                            return (\r\n                                <Box\r\n                                    display=\"flex\"\r\n                                    key={eachMember.nickname}\r\n                                    my=\"1.5rem\"\r\n                                >\r\n                                    <Box\r\n                                        width=\"1.5rem\"\r\n                                        height=\"2rem\"\r\n                                        position=\"relative\"\r\n                                    >\r\n                                        {index <= 2 && (\r\n                                            <img\r\n                                                src={`/images/ICON_ranking${\r\n                                                    index + 1\r\n                                                }.png`}\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Box flexGrow=\"1\" ml=\"0.5rem\">\r\n                                        <Box\r\n                                            mt=\"0.3rem\"\r\n                                            height=\"40%\"\r\n                                            width={`${\r\n                                                (eachMember.point /\r\n                                                    (end - start)) *\r\n                                                100\r\n                                            }%`}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    COLOR_SET[\r\n                                                        index >= 5 ? 4 : index\r\n                                                    ],\r\n                                            }}\r\n                                        />\r\n                                        <Typography className={classes.money}>\r\n                                            {eachMember.point}원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Typography className={classes.text}>\r\n                                        {eachMember.nickname}\r\n                                    </Typography>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationMember;\r\n","import { Box, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getGivingNameFromId } from '../Common/util';\r\nimport { COLOR_SET, DonationCategory } from './DataModel';\r\n\r\ninterface GivingComponentDonationPieProps {\r\n    donationStatus: DonationCategory[];\r\n}\r\n\r\nconst GivingComponentDonationPie: React.FC<GivingComponentDonationPieProps> = ({\r\n    donationStatus,\r\n}: GivingComponentDonationPieProps) => {\r\n    const sortData = donationStatus\r\n        .filter((data) => data.totalDonationCount !== 0)\r\n        .sort((d1, d2) => {\r\n            return d2.totalDonationCount - d1.totalDonationCount;\r\n        });\r\n\r\n    const data = {\r\n        labels: new Array<string>(),\r\n        datasets: [\r\n            {\r\n                data: new Array<number>(),\r\n                backgroundColor: new Array<string>(),\r\n                borderColor: new Array<string>(),\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'right',\r\n                labels: {\r\n                    fontSize: 12,\r\n                    boxWidth: 12,\r\n                    usePointStyle: true,\r\n                },\r\n                onClick: null,\r\n            },\r\n        },\r\n        animation: {\r\n            duration: 0,\r\n        },\r\n    };\r\n\r\n    sortData.forEach((eachData, index) => {\r\n        data.labels.push(getGivingNameFromId(eachData.donationId));\r\n        data.datasets[0].data.push(eachData.totalDonationCount);\r\n        data.datasets[0].backgroundColor.push(COLOR_SET[index]);\r\n        data.datasets[0].borderColor.push('#00000000');\r\n    });\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">기부 현황</Typography>\r\n                <Box mt=\"1rem\">\r\n                    <Pie\r\n                        width={250}\r\n                        height={160}\r\n                        options={options}\r\n                        type=\"pie\"\r\n                        data={data}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationPie;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '36px',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\ninterface GivingComponentStatusProps {\r\n    money: number;\r\n}\r\n\r\nconst GivingComponentStatus: React.FC<GivingComponentStatusProps> = ({\r\n    money,\r\n}: GivingComponentStatusProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_20\">이번달에 모인</Typography>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    총 기부액이에요!\r\n                </Typography>\r\n                <Box mt=\"20px\">\r\n                    <Typography\r\n                        className={`txt_primaryBlue2 ${classes.moneyFont}`}\r\n                    >\r\n                        {getNumberString(money)}원\r\n                    </Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingResultState } from '../../recoil/Giving';\r\nimport Loading from '../Common/Loading';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\nimport GivingComponentDonationMember from './GivingComponentDonationMember';\r\nimport GivingComponentDonationPie from './GivingComponentDonationPie';\r\nimport GivingComponentStatus from './GivingComponentStatus';\r\n\r\nconst GivingComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingResultState);\r\n\r\n    useEffect(() => {\r\n        http.get('/api/trading/donation/statistics').then((res) => {\r\n            setGivingData({\r\n                isLoaded: true,\r\n                ...res.data.data,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"기부 동참하기\"\r\n        >\r\n            {givingData.isLoaded ? (\r\n                <>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentStatus\r\n                            money={givingData.totalDonationMoney}\r\n                        />\r\n                    </Box>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentDonationPie\r\n                            donationStatus={givingData.donationRatioStatus}\r\n                        />\r\n                    </Box>\r\n                    <Box my=\"1rem\">\r\n                        <GivingComponentDonationMember\r\n                            donationMember={givingData.memberDTOs}\r\n                        />\r\n                    </Box>\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingComponent;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingFinishComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={true}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"홈으로 이동\"\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                <Box mt=\"25px\" />\r\n                <Typography className=\"txt_20 txt_b\">\r\n                    기부 모금이 완료되었어요.\r\n                </Typography>\r\n                <Typography className=\"txt_20\">진영님의 나눔으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    세상이 한 층 더 밝아졌어요!\r\n                </Typography>\r\n                <br />\r\n                <Typography className=\"txt_20\">기부는 블록체인으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    투명하게 공개진행됩니다.\r\n                </Typography>\r\n                <Box flexGrow=\"1\" />\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src=\"/images/rending_4.png\" />\r\n                </p>\r\n                <Box mb=\"45px\" />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingFinishComponent;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { GivingSelectState } from '../../recoil/Giving';\r\nimport SelectList from '../Common/SelectList';\r\nimport { CommonInterface, GivingDataSet, GivingStandInfo } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingSelectComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingSelectState);\r\n\r\n    const onChange = (\r\n        data: GivingDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        console.log('Clicked');\r\n        if (event.currentTarget.checked) {\r\n            setGivingData([data]);\r\n        } else {\r\n            setGivingData([]);\r\n        }\r\n    };\r\n    console.log(givingData);\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={givingData.length === 0}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <p className=\"txt_20\">관심있는 카테고리 하나를 골라</p>\r\n            <p className=\"txt_20 txt_b\">기부하세요.</p>\r\n            <SelectList\r\n                selectData={givingData}\r\n                standardData={GivingStandInfo}\r\n                onChange={onChange}\r\n            />\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingSelectComponent;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport GivingAmountComponent from '../component/Giving/GivingAmountComponent';\r\nimport GivingComponent from '../component/Giving/GivingComponent';\r\nimport GivingFinishComponent from '../component/Giving/GivingFinishComponent';\r\nimport GivingSelectComponent from '../component/Giving/GivingSelectComponent';\r\nimport { GivingAmountState, GivingSelectState } from '../recoil/Giving';\r\n\r\nconst GivingPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const resetSelect = useResetRecoilState(GivingSelectState);\r\n    const resetAmount = useResetRecoilState(GivingAmountState);\r\n\r\n    const onNextMove = (nextMove: number) => {\r\n        if (nextMove < 0) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.goBack();\r\n            return;\r\n        }\r\n\r\n        if (nextMove > 3) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(nextMove);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                <GivingComponent index={0} onMoveClick={onNextMove} />\r\n                <GivingSelectComponent index={1} onMoveClick={onNextMove} />\r\n                <GivingAmountComponent index={2} onMoveClick={onNextMove} />\r\n                <GivingFinishComponent index={3} onMoveClick={onNextMove} />\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GivingPage;\r\n","import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface HeaderDeafaultProps {\r\n    icon: JSX.Element;\r\n    title: string;\r\n}\r\n\r\ntype HeaderDefaultType = PropsWithChildren<HeaderDeafaultProps>;\r\n\r\nconst HeaderDeafault: React.FC<HeaderDefaultType> = (\r\n    props: HeaderDefaultType\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\" style={{ backgroundColor: '#fafbfc' }}>\r\n            <Toolbar>\r\n                {props.icon}\r\n                <Box ml=\"0.5rem\">\r\n                    <Typography\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1.3rem',\r\n                        }}\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                </Box>\r\n            </Toolbar>\r\n            {props.children}\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderDeafault;\r\n","import { IconButton, makeStyles, Paper } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginRight: '5%',\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    img: {\r\n        width: '1rem',\r\n        height: '1rem',\r\n        margin: '0.5rem',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitInputTextProps {\r\n    inputText: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nconst HomeBenefitInputText: React.FC<HomeBenefitInputTextProps> = (\r\n    props: HomeBenefitInputTextProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <img className={classes.img} src=\"/images/ICON_Search.png\" />\r\n            <InputBase\r\n                className={classes.input}\r\n                value={props.inputText}\r\n                onChange={(event) => {\r\n                    props.onChange(event.target.value);\r\n                }}\r\n                placeholder=\"기업이나 제품들을 검색하세요.\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n            />\r\n            {props.inputText.length > 0 && (\r\n                <IconButton\r\n                    onClick={() => {\r\n                        props.onChange('');\r\n                    }}\r\n                >\r\n                    <img\r\n                        className={classes.img}\r\n                        src=\"/images/ICON_Close_Button.png\"\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitInputText;\r\n","import {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { BenefitCompany } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    commonHeart: {\r\n        fontSize: '0.8rem !important',\r\n        color: 'gray',\r\n    },\r\n    selectedHeart: {\r\n        color: 'red !important',\r\n    },\r\n}));\r\n\r\nconst HomBenefitCompany: React.FC<BenefitCompany> = (props: BenefitCompany) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    return (\r\n        <Card>\r\n            <CardActionArea\r\n                onClick={() => {\r\n                    history.push(\r\n                        `/benefit-company/${encodeURI(props.companyName)}`\r\n                    );\r\n                }}\r\n            >\r\n                <CardContent>\r\n                    <Grid container wrap=\"nowrap\">\r\n                        <Grid container>\r\n                            <Typography className=\"txt_b txt_20\">\r\n                                {props.companyName}\r\n                            </Typography>\r\n                            <Typography className=\"txt_14\">\r\n                                {props.description}\r\n                            </Typography>\r\n                            <Grid>\r\n                                {props.userLike ? (\r\n                                    <FavoriteIcon\r\n                                        className={`${classes.commonHeart} ${classes.selectedHeart}`}\r\n                                    />\r\n                                ) : (\r\n                                    <FavoriteBorderIcon\r\n                                        className={classes.commonHeart}\r\n                                    />\r\n                                )}\r\n                                <Typography\r\n                                    style={{\r\n                                        marginLeft: '0.4rem',\r\n                                        display: 'inline-block',\r\n                                    }}\r\n                                    className=\"txt_14 txt_gray1\"\r\n                                >\r\n                                    {props.totalLike}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <img\r\n                                src={props.thumbNailPath.replace(\r\n                                    /.jpg/gi,\r\n                                    '.png'\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HomBenefitCompany;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSearchListProps {\r\n    searchText: string;\r\n}\r\n\r\nconst HomeBenefitSearchList: React.FC<HomeBenefitSearchListProps> = ({\r\n    searchText,\r\n}: HomeBenefitSearchListProps) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            const categoryName = getCategoryNameFromId(eachData.categoryId);\r\n            console.log(\r\n                `Current Category Name ${categoryName} ${eachData.companyName} ${searchText}`\r\n            );\r\n            return (\r\n                categoryName.includes(searchText) ||\r\n                eachData.companyName.includes(searchText)\r\n            );\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [searchText]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSearchList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitListProps {\r\n    categoryId: number;\r\n}\r\n\r\nconst HomeBenefitList: React.FC<HomeBenefitListProps> = (\r\n    props: HomeBenefitListProps\r\n) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            return eachData.categoryId === props.categoryId;\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [benefitCompany.data]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport { commonSlickSettings } from '../Common';\r\nimport HomeBenefitList from './HomeBenefitList';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: 'rgb(250, 251, 252)',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSliderProps {\r\n    pageIndex: number;\r\n}\r\n\r\nconst HomeBenefitSlider: React.FC<HomeBenefitSliderProps> = (\r\n    props: HomeBenefitSliderProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        sliderRef.current && sliderRef.current.slickGoTo(props.pageIndex);\r\n    }, [props.pageIndex]);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n    const override = commonSlickSettings;\r\n    override.speed = 100;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider {...override} ref={sliderRef}>\r\n                {CategoryStandInfo.map((eachData, index) => {\r\n                    return (\r\n                        <TabPanel\r\n                            key={props.pageIndex}\r\n                            value={props.pageIndex}\r\n                            index={index}\r\n                        >\r\n                            <HomeBenefitList categoryId={eachData.id} />\r\n                        </TabPanel>\r\n                    );\r\n                })}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSlider;\r\n","export enum SIGNUP_TYPE {\r\n    PROFILE,\r\n    ACCOUNT,\r\n    ADD_CATEGORY,\r\n    BILL_INFO,\r\n    PASSWORD,\r\n}\r\n\r\nexport interface SignupAccountInterface {\r\n    ACCT_KND: string;\r\n    ACNO: string;\r\n    ACT_STCD: string;\r\n    ADNT_RGS_YN: string;\r\n    CUCD: string;\r\n    FAXC_BAL: string;\r\n    NEW_DT: string;\r\n    PBOK_BAL: string;\r\n    PRD_NM: string;\r\n    PSKL_ACT_YN: string;\r\n    XPR_DT: string;\r\n}\r\n\r\nexport interface SignupProfileInterface {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SignupComponentProps {\r\n    checkCurrent?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\nexport interface SignupProfileInfo {\r\n    realName: string;\r\n    nickName: string;\r\n    cellNumber: string;\r\n}\r\n\r\nexport const rendingData: Array<SignupProfileInterface> = [\r\n    {\r\n        title: '이름을 알려주세요.',\r\n        description: '이름',\r\n    },\r\n    {\r\n        title: '닉네임을 정해주세요.',\r\n        description: '닉네임',\r\n    },\r\n];\r\n","import { Box, Tab, Tabs } from '@material-ui/core';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { BenefitSearch, CurrentUserState } from '../../recoil/Session';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport {\r\n    BenefitCompany,\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from './DataModel';\r\nimport HomeBenefitInputText from './HomeBenefitInputText';\r\nimport HomeBenefitSearchList from './HomeBenefitSearchList';\r\nimport HomeBenefitSlider from './HomeBenefitSlider';\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst HomeBenefitComponent: React.FC = () => {\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [searchText, setSearchText] = useRecoilState(BenefitSearch);\r\n    const [benefitCompany, setBenefitCompany] = useRecoilState(\r\n        BenefitStateCompany\r\n    );\r\n    const setFavoriteState = useSetRecoilState(BenefitFavoriteState);\r\n\r\n    useEffect(() => {\r\n        if (benefitCompany.isLoaded) {\r\n            return;\r\n        }\r\n\r\n        http.get(`/api/${encodeURI(userInfo.nickname)}/company`).then((res) => {\r\n            const isertArr: BenefitCompanyRes = {\r\n                isLoaded: true,\r\n                data: [],\r\n            };\r\n            const benefitData: BenefitFavoriteCompany = {};\r\n            res.data.data.forEach((eachData: BenefitCompany) => {\r\n                isertArr.data.push({\r\n                    categoryId: eachData.categoryId,\r\n                    companyName: eachData.companyName,\r\n                    description: eachData.description,\r\n                    thumbNailPath: eachData.thumbNailPath\r\n                        .replace(/\\/\\//gi, '/')\r\n                        .replace(/\\.[^/.]+$/, '.png'),\r\n                    totalLike: eachData.totalLike,\r\n                });\r\n                benefitData[eachData.companyName] = eachData.userLike;\r\n            });\r\n\r\n            setBenefitCompany(isertArr);\r\n            setTimeout(() => {\r\n                setFavoriteState(benefitData);\r\n            }, 100);\r\n        });\r\n    }, []);\r\n\r\n    const onChange = (value: string) => {\r\n        setSearchText(value);\r\n    };\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n\r\n    const tabChange = (event: ChangeEvent<any>, nextValue: number) => {\r\n        setPage(nextValue);\r\n    };\r\n\r\n    const isSearchMode = searchText.length !== 0;\r\n\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<StorefrontIcon />} title=\"혜택 찾기\">\r\n                <HomeBenefitInputText\r\n                    inputText={searchText}\r\n                    onChange={onChange}\r\n                />\r\n                {!isSearchMode && (\r\n                    <Tabs\r\n                        value={page}\r\n                        onChange={tabChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {CategoryStandInfo.map((eachData, index) => {\r\n                            return (\r\n                                <Tab\r\n                                    key={index}\r\n                                    label={eachData.name}\r\n                                    {...a11yProps(index)}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Tabs>\r\n                )}\r\n            </HeaderDeafault>\r\n            {isSearchMode ? (\r\n                <Box p={3}>\r\n                    <HomeBenefitSearchList searchText={searchText} />\r\n                </Box>\r\n            ) : (\r\n                <HomeBenefitSlider pageIndex={page} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitComponent;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getCategoryImgPath, getCategoryNameFromId } from './util';\r\n\r\nexport interface CategoryIconProps {\r\n    id: number;\r\n}\r\n\r\nconst CategoryIcon: React.FC<CategoryIconProps> = (\r\n    props: CategoryIconProps\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <img\r\n                src={getCategoryImgPath(props.id)}\r\n                style={{ width: '3.5rem', height: '3.5rem', margin: 'auto' }}\r\n            />\r\n            <Typography style={{ textAlign: 'center' }}>\r\n                {getCategoryNameFromId(props.id)}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CategoryIcon;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n} from '../../recoil/Session';\r\nimport CategoryIcon from '../Common/CategoryIcon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [category, setCategory] = useRecoilState(CurrentUserCategoryState);\r\n\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    };\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${encodeURI(userInfo.nickname)}/category`).then(\r\n            (res) => {\r\n                const resCategory = res.data.data.map(\r\n                    (eachData: any) => eachData.categoryId\r\n                );\r\n                setCategory(resCategory);\r\n            }\r\n        );\r\n    }, [userInfo]);\r\n\r\n    if (category.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader\r\n                title={\r\n                    <Typography className=\"txt_20 txt_b\">\r\n                        내가 선택한 혜택\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Box display=\"flex\">\r\n                    {category.map((eachCategory: number) => {\r\n                        return (\r\n                            <Box key={eachCategory} margin=\"auto\">\r\n                                <CategoryIcon id={eachCategory} />\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Typography onClick={onClick} variant=\"caption\">\r\n                    혜택을 바꾸고 싶나요?\r\n                </Typography>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import { Box, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getCategoryNameFromId, getNumberString } from '../Common/util';\r\nimport { TransactionSet } from './DataModel';\r\n\r\nexport interface BenefitListProps {\r\n    data: TransactionSet[];\r\n}\r\n\r\nconst extractDate = (date: string): string => {\r\n    const c = new Date(date);\r\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n    return `${c.getMonth()}월 ${c.getDate()} (${week[c.getDay()]})`;\r\n};\r\n\r\nconst BenefitList: React.FC<BenefitListProps> = ({\r\n    data,\r\n}: BenefitListProps) => {\r\n    return (\r\n        <>\r\n            {data.map((eachData, index, arr) => {\r\n                return (\r\n                    <Box key={index} mt={index === 0 ? '0px' : '5px'}>\r\n                        <Typography className={`txt_14`}>\r\n                            {extractDate(eachData.date)}\r\n                        </Typography>\r\n                        <Grid container style={{ marginTop: '5px' }}>\r\n                            <Grid>\r\n                                <Typography className={`txt_16`}>\r\n                                    {eachData.companyName}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Box flexGrow=\"1\" />\r\n\r\n                            <Grid style={{ textAlign: 'right' }}>\r\n                                <Typography className={`txt_16`}>\r\n                                    {getNumberString(eachData.totalBuyPrice)}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_14 txt_primaryBlue2`}\r\n                                >{`${getCategoryNameFromId(\r\n                                    eachData.categoryId\r\n                                )} 적립 ${getNumberString(\r\n                                    eachData.point\r\n                                )}`}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {arr.length - 1 !== index && (\r\n                            <div className=\"line bg_gray3 mg_t20\" />\r\n                        )}\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BenefitList;\r\n","export interface TransactionSet {\r\n    companyName: string;\r\n    categoryId: number;\r\n    totalBuyPrice: number;\r\n    point: number;\r\n    date: string;\r\n}\r\n\r\nexport const DummyTransactionData: TransactionSet[] = [\r\n    {\r\n        date: '2021-04-08',\r\n        companyName: '연화바루',\r\n        totalBuyPrice: -32000,\r\n        categoryId: 101,\r\n        point: 1600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -12000,\r\n        categoryId: 102,\r\n        point: 600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '테스트1',\r\n        totalBuyPrice: -37000,\r\n        categoryId: 104,\r\n        point: 3600,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '테스트2',\r\n        totalBuyPrice: -1200,\r\n        categoryId: 101,\r\n        point: 60,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -1000,\r\n        categoryId: 101,\r\n        point: 10,\r\n    },\r\n];\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n    CurrentUserTransactionState,\r\n} from '../../recoil/Session';\r\nimport BenefitList from './BenefitList';\r\nimport { DummyTransactionData, TransactionSet } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst DISPLAY_COUNT = 3;\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const userCategory = useRecoilValue(CurrentUserCategoryState);\r\n    const [transaction, setTransaction] = useRecoilState(\r\n        CurrentUserTransactionState\r\n    );\r\n    const [displaySet, setDisplaySet] = useState<TransactionSet[]>([]);\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/trading/benefits/${encodeURI(userInfo.nickname)}`).then(\r\n            (res) => {\r\n                let data: TransactionSet[] = [];\r\n                if (res.data.data.length === 0) {\r\n                    data = DummyTransactionData;\r\n                } else {\r\n                    data = res.data.data;\r\n                }\r\n                data = data.filter((eachData) => {\r\n                    return userCategory.includes(eachData.categoryId);\r\n                });\r\n                setDisplaySet(data.slice(0, DISPLAY_COUNT));\r\n                setTransaction(data);\r\n            }\r\n        );\r\n    }, [userCategory]);\r\n\r\n    if (displaySet.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>혜택 적립 내역</Typography>} />\r\n            <CardContent>\r\n                <BenefitList data={displaySet} />\r\n            </CardContent>\r\n            {transaction.length > DISPLAY_COUNT && (\r\n                <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                    <Button\r\n                        className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    >\r\n                        이용 내역 더 보기\r\n                    </Button>\r\n                </CardActions>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    moneyFont: {\r\n        fontSize: '26px',\r\n        fontFamily: '\"Recursive\", sans-serif !important',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst HCStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useRecoilState(CurrentUserState);\r\n    //const [account, setAccount] = useRecoilState(CurrentAccountState);\r\n\r\n    useEffect(() => {\r\n        if (userInfo.nickname) {\r\n            http.get(`/api/members/${encodeURI(userInfo.nickname)}`).then(\r\n                (res) => {\r\n                    setUserInfo({\r\n                        ...userInfo,\r\n                        accountMoney: res.data.data.accountMoney,\r\n                        point: res.data.data.point,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const onGivingClick = () => {\r\n        history.push('/giving');\r\n    };\r\n\r\n    return (\r\n        <Card style={{ backgroundColor: '#62C3EB', borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className={classes.dfColor}>\r\n                    {`${userInfo.name}님의`}\r\n                    <br />\r\n                    혜택통 현황입니다.\r\n                </Typography>\r\n                <Typography\r\n                    className={`${classes.inline} ${classes.moneyFont} ${classes.dfColor}`}\r\n                >\r\n                    {getNumberString(userInfo.point)}\r\n                </Typography>\r\n                <Typography className={`${classes.inline} ${classes.dfColor}`}>\r\n                    원\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    disabled\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    내 계좌로 인출\r\n                </Button>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    onClick={onGivingClick}\r\n                >\r\n                    기부하기\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport React from 'react';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport HCBenefit from './HCBenefit';\r\nimport HCPoint from './HCPoint';\r\nimport HCStatus from './HCStatus';\r\n\r\nconst HomeComponent: React.FC = () => {\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<HomeIcon />} title=\"홈\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                <Box mt=\"1rem\">\r\n                    <HCStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <HCBenefit />\r\n                </Box>\r\n                <Box my=\"1rem\">\r\n                    <HCPoint />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserCategoryState } from '../../recoil/Session';\r\nimport CategoryIcon from '../Common/CategoryIcon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\nconst SettingBenefit: React.FC = () => {\r\n    const classes = useStyles();\r\n    const category = useRecoilValue(CurrentUserCategoryState);\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader\r\n                title={\r\n                    <Typography className=\"txt_20 txt_b\">\r\n                        내가 선택한 혜택\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Box display=\"flex\">\r\n                    {category.map((eachCategory: number) => {\r\n                        return (\r\n                            <Box key={eachCategory} margin=\"auto\">\r\n                                <CategoryIcon id={eachCategory} />\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    혜택 바꾸기\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SettingBenefit;\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    moneyFont: {\r\n        fontFamily: '\"Recursive\", sans-serif !important',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst SettingStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    //const [account, setAccount] = useRecoilState(CurrentAccountState);\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className=\"txt_20 txt_b\">계좌정보</Typography>\r\n                <Typography className=\"txt_gray1 pd_t10\">\r\n                    {userInfo.accountNumber}\r\n                </Typography>\r\n                <Box textAlign=\"end\">\r\n                    <Typography className={`txt_16 ${classes.inline}`}>\r\n                        잔액\r\n                    </Typography>\r\n                    <Typography\r\n                        className={`txt_32 ${classes.inline} ${classes.moneyFont}`}\r\n                    >\r\n                        {getNumberString(userInfo.accountMoney)}\r\n                    </Typography>\r\n                    <Typography className={`${classes.inline} `}>원</Typography>\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    계좌 변경\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SettingStatus;\r\n","import { Box, Divider, makeStyles, Typography } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React from 'react';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport SettingBenefit from './SettingBenefit';\r\nimport SettingStatus from './SettingStatus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    containerOuter: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        paddingTop: '13px',\r\n        paddingBottom: '13px',\r\n    },\r\n    iconSize: {\r\n        fontSize: '1.5rem !important',\r\n    },\r\n}));\r\n\r\nconst SettingComponent: React.FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <HeaderDeafault icon={<SettingsIcon />} title=\"마이 페이지\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                <Box mt=\"1rem\">\r\n                    <SettingStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <SettingBenefit />\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Box className={classes.containerOuter}>\r\n                        <Box className={classes.container}>\r\n                            <PersonIcon className={classes.iconSize} />\r\n                        </Box>\r\n                        <Box className={classes.container}>\r\n                            <Typography className=\"mg_l10 txt_16\">\r\n                                홈\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box flexGrow=\"1\" />\r\n                        <ChevronRightIcon />\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box className={classes.containerOuter}>\r\n                        <Box className={classes.container}>\r\n                            <CheckCircleIcon className={classes.iconSize} />\r\n                        </Box>\r\n                        <Box className={classes.container}>\r\n                            <Typography className=\"mg_l10 txt_16\">\r\n                                구독 관리\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box flexGrow=\"1\" />\r\n                        <ChevronRightIcon />\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box className={classes.containerOuter}>\r\n                        <Box className={classes.container}>\r\n                            <FeedbackIcon className={classes.iconSize} />\r\n                        </Box>\r\n                        <Box className={classes.container}>\r\n                            <Typography className=\"mg_l10 txt_16\">\r\n                                공지사항\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box flexGrow=\"1\" />\r\n                        <ChevronRightIcon />\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box className={classes.containerOuter}>\r\n                        <Box className={classes.container}>\r\n                            <EmailIcon className={classes.iconSize} />\r\n                        </Box>\r\n                        <Box className={classes.container}>\r\n                            <Typography className=\"mg_l10 txt_16\">\r\n                                문의하기\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box flexGrow=\"1\" />\r\n                        <ChevronRightIcon />\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingComponent;\r\n","import { atom } from 'recoil';\r\nimport { FriendDataSet, TogetherAVGSet } from '../component/Together/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const FriendDataSetState = atom<FriendDataSet[]>({\r\n    key: 'FriendDataSetState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const TogetherAVGState = atom<TogetherAVGSet>({\r\n    key: 'TogetherAVGState',\r\n    default: {\r\n        aveRank: -1,\r\n        ago3MonthBenefitPoint: -1,\r\n        myRank: -1,\r\n        thisMonthBenefitPoint: -1,\r\n    },\r\n});\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '24px',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst TCNoFriend: React.FC = () => {\r\n    const onAddFriend = (event: any) => {\r\n        event.preventDefault();\r\n        if (window && window.parent) {\r\n            window.parent.postMessage('child;;;requestPhoneNumber', '*');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className=\"txt_14\">\r\n                    투게더를 통해 친구들과 함께 혜택통을 즐길 수 있어요. 지금\r\n                    시작해볼까요?\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end' }}>\r\n                <Box mr=\"13px\">\r\n                    <Button\r\n                        onClick={onAddFriend}\r\n                        className=\"btn_blue txt_wh txt_14\"\r\n                    >\r\n                        시작\r\n                    </Button>\r\n                </Box>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TCNoFriend;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    CircularProgress,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { TogetherAVGState } from '../../recoil/Together';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '24px',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst TCRanking: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const avgInfo = useRecoilValue(TogetherAVGState);\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            {avgInfo.aveRank >= 0 ? (\r\n                <>\r\n                    <CardHeader\r\n                        title={\r\n                            <Box>\r\n                                <Typography\r\n                                    className={`txt_b txt_20 ${classes.inline}`}\r\n                                >\r\n                                    {`${userInfo.nickname}님 `}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_16 ${classes.inline}`}\r\n                                >\r\n                                    의 혜택통 순위입니다.\r\n                                </Typography>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Box mt=\"30px\">\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography className=\"txt_14 txt_b txt_center\">\r\n                                        나\r\n                                    </Typography>\r\n                                    <Box pt=\"11px\" textAlign=\"center\">\r\n                                        <Typography className=\"txt_16 txt_line\">\r\n                                            상위\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={`${classes.moneyFont} txt_primaryBlue`}\r\n                                        >\r\n                                            {avgInfo.myRank}\r\n                                        </Typography>\r\n                                        <Typography className=\"txt_16 txt_line\">\r\n                                            %\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography className=\"txt_14 txt_b txt_center\">\r\n                                        모든 사용자 평균\r\n                                    </Typography>\r\n                                    <Box pt=\"11px\" textAlign=\"center\">\r\n                                        <Typography className=\"txt_16 txt_line\">\r\n                                            {'상위 '}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={`${classes.moneyFont}`}\r\n                                        >\r\n                                            {avgInfo.aveRank}\r\n                                        </Typography>\r\n                                        <Typography className=\"txt_16 txt_line\">\r\n                                            %\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </CardContent>\r\n                </>\r\n            ) : (\r\n                <Box\r\n                    height=\"124px\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <CircularProgress style={{ color: 'black' }} />\r\n                </Box>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TCRanking;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    CircularProgress,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { TogetherAVGState } from '../../recoil/Together';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '24px',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst TCStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const avgInfo = useRecoilValue(TogetherAVGState);\r\n\r\n    return (\r\n        <Card style={{ backgroundColor: '#62C3EB', borderRadius: '0.5rem' }}>\r\n            {avgInfo.aveRank >= 0 ? (\r\n                <>\r\n                    <CardHeader\r\n                        title={\r\n                            <Box>\r\n                                <Typography\r\n                                    className={`txt_b txt_20 txt_wh ${classes.inline}`}\r\n                                >\r\n                                    {`${userInfo.nickname}님 `}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_16 txt_wh ${classes.inline}`}\r\n                                >\r\n                                    이 받은 혜택\r\n                                </Typography>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Box mt=\"30px\">\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography className=\"txt_14 txt_b txt_wh txt_center\">\r\n                                        이번 달\r\n                                    </Typography>\r\n                                    <Box pt=\"11px\" textAlign=\"center\">\r\n                                        <Typography\r\n                                            className={`txt_wh ${classes.moneyFont}`}\r\n                                        >\r\n                                            {avgInfo.thisMonthBenefitPoint}\r\n                                        </Typography>\r\n                                        <Typography className=\"txt_wh txt_16 txt_line\">\r\n                                            원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography className=\"txt_14 txt_b txt_wh txt_center\">\r\n                                        지난 3개월\r\n                                    </Typography>\r\n                                    <Box pt=\"11px\" textAlign=\"center\">\r\n                                        <Typography\r\n                                            className={`txt_wh ${classes.moneyFont}`}\r\n                                        >\r\n                                            {avgInfo.ago3MonthBenefitPoint}\r\n                                        </Typography>\r\n                                        <Typography className=\"txt_wh txt_16 txt_line\">\r\n                                            원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </CardContent>\r\n                </>\r\n            ) : (\r\n                <Box\r\n                    height=\"124px\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <CircularProgress style={{ color: 'white' }} />\r\n                </Box>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TCStatus;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { FriendDataSetState, TogetherAVGState } from '../../recoil/Together';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport TCNoFriend from './TCNoFriend';\r\nimport TCRanking from './TCRanking';\r\nimport TCStatus from './TCStatus';\r\n\r\nconst TogetherComponent: React.FC = () => {\r\n    const friendList = useRecoilValue(FriendDataSetState);\r\n    const friendMode = friendList.length > 0;\r\n\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const setAVGInfo = useSetRecoilState(TogetherAVGState);\r\n\r\n    useEffect(() => {\r\n        if (userInfo.nickname) {\r\n            http.get(`/api/members/${userInfo.nickname}/together`).then(\r\n                (res) => {\r\n                    setAVGInfo(res.data.data);\r\n                    console.log(res);\r\n                }\r\n            );\r\n        }\r\n    }, [userInfo]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<PeopleIcon />} title=\"투게더\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                {friendMode && <>isRanking</>}\r\n                <Box mt=\"1rem\">\r\n                    <TCStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <TCRanking />\r\n                </Box>\r\n                {!friendMode && (\r\n                    <Box mt=\"1rem\">\r\n                        <TCNoFriend />\r\n                    </Box>\r\n                )}\r\n                {friendList.map((eachData) => {\r\n                    return (\r\n                        <>\r\n                            <Box>\r\n                                <Typography>{`${eachData.name} ${eachData.displayname} ${eachData.cellphone}`}</Typography>\r\n                            </Box>\r\n                        </>\r\n                    );\r\n                })}\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TogetherComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport HomeBenefitComponent from '../component/Benefit/HomeBenefitComponent';\r\nimport BottomBarNav, { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport HomeComponent from '../component/Home/HomeComponent';\r\nimport SettingComponent from '../component/Setting/SettingComponent';\r\nimport TogetherComponent from '../component/Together/TogetherComponent';\r\nimport { BottomNavState } from '../recoil/Session';\r\nconst homeRendering = (type: DISPLAY_TYPE) => {\r\n    switch (type) {\r\n        case DISPLAY_TYPE.HOME:\r\n            return <HomeComponent />;\r\n        case DISPLAY_TYPE.BENEFIT:\r\n            return <HomeBenefitComponent />;\r\n        case DISPLAY_TYPE.TOGETHER:\r\n            return <TogetherComponent />;\r\n        case DISPLAY_TYPE.SETTING:\r\n            return <SettingComponent />;\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n    const [renderType, setCurrentRenderType] = useRecoilState(BottomNavState);\r\n\r\n    const onChange = (type: DISPLAY_TYPE) => {\r\n        setCurrentRenderType(type);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Box className=\"glow_body\" overflow=\"hidden\">\r\n                {homeRendering(renderType)}\r\n            </Box>\r\n            <BottomBarNav current={renderType} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface RenderComponentInterface {\r\n    title: { first: string; second: string };\r\n    description: string[];\r\n    highLight: string;\r\n    imgPath: string;\r\n}\r\n\r\nexport const rendingData: Array<RenderComponentInterface> = [\r\n    {\r\n        title: { first: '내맘대로', second: '혜택고르기!' },\r\n        description: ['정해진 틀에 맞춰서', '혜택받기는 싫어!'],\r\n        highLight: '내가 관심있는 카테고리 대로 혜택을!',\r\n        imgPath: '/images/rending_1.png',\r\n    },\r\n    {\r\n        title: { first: '나는 소비하면서', second: '사회까지 생각한다!' },\r\n        description: ['환경, 유기견, 소상공인', '저소득층, 동물보호...'],\r\n        highLight: '작은 소비 하나하나 모여 사회를 개선!',\r\n        imgPath: '/images/rending_2.png',\r\n    },\r\n    {\r\n        title: { first: '내가 이 골목 혜택왕!', second: '친구들과 혜택대결' },\r\n        description: ['누가 누가', '더 많이 혜택을 모았나?'],\r\n        highLight: '여기 모여라! 친구들끼리 혜택 대결!',\r\n        imgPath: '/images/rending_3.png',\r\n    },\r\n    {\r\n        title: { first: '혜택을 모아모아', second: '기부까지?!' },\r\n        description: [\r\n            '혜택받은 금액을 인출하거나',\r\n            '원하는 곳에 기부할 수 있지!',\r\n        ],\r\n        highLight: \"우리은행에서 '모인 기부액의 2배를' 기부!\",\r\n        imgPath: '/images/rending_4.png',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { RenderComponentInterface } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    buttonOverride: {\r\n        position: 'absolute !important' as 'absolute',\r\n    },\r\n}));\r\n\r\ninterface RenderingPageProps {\r\n    data: RenderComponentInterface;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\ntype PropsType = RenderingPageProps & { isFirst: boolean };\r\n\r\nconst RendingComponent: React.FC<PropsType> = ({\r\n    data,\r\n    ...props\r\n}: PropsType) => {\r\n    const classes = useStyles();\r\n\r\n    const onNextClick = () => {\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        props.onMoveButtonClick(-1);\r\n    };\r\n\r\n    return (\r\n        <Box style={{ position: 'relative' }} width=\"100%\" height=\"100%\">\r\n            <div className=\"container mg_t10\" style={{ overflowX: 'visible' }}>\r\n                <IconButton\r\n                    className={`back_div ${props.isFirst && 'hide'}`}\r\n                    onClick={onBackClick}\r\n                >\r\n                    <KeyboardArrowLeft />\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                <p className=\"rd_posi_1 txt_30\">{data.title.first}</p>\r\n                <p className=\"rd_posi_2 txt_30 txt_b\">{data.title.second}</p>\r\n\r\n                <p className=\"rd_posi_3 txt_18\">\r\n                    {data.description[0]}\r\n                    <br />\r\n                    {data.description[1]}\r\n                </p>\r\n                <div\r\n                    className=\"txt_back_highlight\"\r\n                    style={{ width: '276px' }}\r\n                />\r\n                <p className=\"rd_posi_4 txt_18 txt_b\">{data.highLight}</p>\r\n            </div>\r\n            <div className=\"pd_b30 rd_posi_img\" style={{ left: '5%' }}>\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src={data.imgPath} />\r\n                </p>\r\n            </div>\r\n            <Button\r\n                className={`btn_bottom bg_primaryblue ${classes.buttonOverride}`}\r\n                onClick={onNextClick}\r\n            >\r\n                <Typography className={`p_btn_bottom txt_wh txt_b`}>\r\n                    다음\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RendingComponent;\r\n","import { Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    imgContainer: {\r\n        width: '100px',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        width: '100%',\r\n    },\r\n    bodyReplace: {\r\n        zIndex: -1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst SigninPage: React.FC = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const onClickSignup = () => {\r\n        history.push('/signup');\r\n    };\r\n\r\n    const postMessage = (event: any) => {\r\n        event.preventDefault();\r\n        console.log(`Post Message Called`);\r\n        if (window && window.parent) {\r\n            console.log(`Post Send`);\r\n            window.parent.postMessage('child;;;requestPhoneNumber', '*');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`bg_primaryblue ${classes.bodyReplace}`} />\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt pd_t60\">\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            style={{ width: '100px' }}\r\n                            className={`pd_t130 ${classes.imgContainer}`}\r\n                            src=\"images/Logo.png\"\r\n                        />\r\n                    </p>\r\n                    <p className=\"txt_24 txt_wh txt_center\">환영합니다!</p>\r\n                </div>\r\n\r\n                <div className=\"login_btn\">\r\n                    <Button\r\n                        onClick={onClickSignup}\r\n                        className={classes.button}\r\n                        style={{ backgroundColor: 'white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_primaryBlue txt_center txt_b\">\r\n                            혜택통 첫달 무료 체험하기\r\n                        </p>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={`mg_t10 ${classes.button}`}\r\n                        style={{ border: '1px solid white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_wh txt_center\">기존 사용자 로그인</p>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SigninPage;\r\n","import React, { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData as MainRendingData,\r\n    rendingData,\r\n} from '../component/Rending/DataModel';\r\nimport RendingPage from '../component/Rending/RendingComponent';\r\nimport { IsSplashSkip } from '../recoil/Session';\r\nimport SigninPage from './SigninPage';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [isSplashSkip, setIsSplashSkip] = useRecoilState(IsSplashSkip);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n\r\n    const onMoveButtonClick = (index: number, move: number) => {\r\n        if (index + move >= MainRendingData.length) {\r\n            setIsSplashSkip(true);\r\n        } else if (index + move === -1) {\r\n            return;\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSplashSkip ? (\r\n                <SigninPage />\r\n            ) : (\r\n                <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                    {rendingData.map((eachData, index) => {\r\n                        return (\r\n                            <RendingPage\r\n                                key={eachData.title.first}\r\n                                data={eachData}\r\n                                isFirst={index === 0}\r\n                                onMoveButtonClick={(move) =>\r\n                                    onMoveButtonClick(index, move)\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n                </Slider>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import {\r\n    Box,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpAccInfoState, SignUpProfileState } from '../../recoil/Session';\r\nimport { getMoneyStr2Number, getNumberString } from '../Common/util';\r\nimport { SignupAccountInterface, SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst useStyles = makeStyles({\r\n    labelLayout: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        paddingTop: 0,\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nconst AccountComponent: React.FC<SignupAccountInterface> = (\r\n    props: SignupAccountInterface\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <Grid>\r\n                <Typography>계좌번호: {props.ACNO}</Typography>\r\n            </Grid>\r\n            <Grid>\r\n                <Typography>\r\n                    잔액: {getNumberString(getMoneyStr2Number(props.PBOK_BAL))}\r\n                </Typography>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SignupAccountComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const setAccount = useSetRecoilState(SignUpAccInfoState);\r\n    const signupInfo = useRecoilValue(SignUpProfileState);\r\n\r\n    const [wooriAccountList, setWooriAccountList] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    const [selectAccount, setSelectAccount] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    console.log('Account Called');\r\n    console.log(props.checkCurrent);\r\n    useEffect(() => {\r\n        if (props.checkCurrent) {\r\n            let regex = /(\\d{3})(\\d{3})(\\d{4})/;\r\n            if (signupInfo.cellNumber.length === 11) {\r\n                regex = /(\\d{3})(\\d{4})(\\d{4})/;\r\n            }\r\n            const cellFormat = signupInfo.cellNumber.replace(regex, '$1-$2-$3');\r\n            http.get(\r\n                `/api/wooribank/userPhoneNumber/${encodeURI(\r\n                    cellFormat\r\n                )}/accounts`\r\n            ).then((res) => {\r\n                const data: SignupAccountInterface[] = (res.data.dataBody\r\n                    .GRID as SignupAccountInterface[]).filter((eachData) => {\r\n                    return eachData.ACCT_KND.toUpperCase() === 'P';\r\n                });\r\n                setWooriAccountList(data);\r\n            });\r\n        }\r\n    }, [props.checkCurrent]);\r\n\r\n    const onChange = (\r\n        data: SignupAccountInterface,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            setSelectAccount([data]);\r\n            setAccount({\r\n                accountNumber: data.ACNO,\r\n                accountMoney: getMoneyStr2Number(data.PBOK_BAL),\r\n            });\r\n        } else {\r\n            setSelectAccount([]);\r\n        }\r\n    };\r\n\r\n    console.log(selectAccount);\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={selectAccount.length === 0}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20\">보유 중인 우리은행 계좌 1개를</p>\r\n                <p className=\"txt_20 txt_b\">선택해주세요.</p>\r\n\r\n                <p className=\"txt_14\" style={{ color: '#3BAAD8' }}>\r\n                    구독료가 매월 20일에 2,900원씩 해당 계좌에서 빠질\r\n                    예정입니다.\r\n                </p>\r\n                <br />\r\n\r\n                <p className=\"txt_14\" style={{ color: '#3BAAD8' }}>\r\n                    첫달 무료 이용 후 언제든 해지하실 수 있어요!\r\n                </p>\r\n\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    {wooriAccountList.map((eachData) => {\r\n                        return (\r\n                            <div\r\n                                key={eachData.ACNO}\r\n                                className=\"box_div mg_t20 bg_wh height_80\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    style={{ display: 'flex' }}\r\n                                    className=\"checkbox__label pd_l20\"\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checkedIcon={\r\n                                                <CheckCircleOutlineIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            icon={\r\n                                                <RadioButtonUncheckedIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            color=\"primary\"\r\n                                            checked={\r\n                                                selectAccount.findIndex(\r\n                                                    (select) =>\r\n                                                        select.ACNO ===\r\n                                                        eachData.ACNO\r\n                                                ) >= 0\r\n                                            }\r\n                                            onChange={(event) =>\r\n                                                onChange(eachData, event)\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                    classes={{ root: classes.labelLayout }}\r\n                                    label={<AccountComponent {...eachData} />}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAccountComponent;\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport { makeNumberId } from '../Common/util';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    validNumber: string;\r\n    onClose: () => void;\r\n}\r\n\r\nconst ACDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open, validNumber } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            인증번호 확인\r\n                        </Typography>\r\n                    }\r\n                    subheader={\r\n                        <Typography className=\"txt_14\">\r\n                            인증번호 확인칸에 아래 번호를 입력하세요.\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        className=\"txt_20 txt_b\"\r\n                        style={{ textAlign: 'center' }}\r\n                    >\r\n                        {validNumber}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions\r\n                    style={{ justifyContent: 'flex-end', paddingTop: 0 }}\r\n                >\r\n                    <Button\r\n                        onClick={handleOk}\r\n                        disableRipple\r\n                        style={{ color: '#62C3EB' }}\r\n                    >\r\n                        확인\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCellphoneComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n\r\n    const [dialog, setDialog] = useState<boolean>(false);\r\n    const [complete, setComplete] = useState<boolean>(false);\r\n\r\n    const [inputValidStr, setInputValidStr] = useState<string>('');\r\n    const [validStr, setValidStr] = useState<string>('');\r\n\r\n    const completeClick = () => {\r\n        setComplete(true);\r\n        setDialog(true);\r\n    };\r\n\r\n    const onChangePhoneNumber = (data: string) => {\r\n        let onlyNums = data.replace(/[^0-9]/g, '');\r\n        if (onlyNums.length > 11) {\r\n            onlyNums = onlyNums.slice(0, 11);\r\n        }\r\n        setProfile({ ...profile, cellNumber: onlyNums });\r\n    };\r\n\r\n    const onCertButtonClick = () => {\r\n        setDialog(true);\r\n        setValidStr(makeNumberId(6));\r\n    };\r\n\r\n    const onVerifyButtonClick = () => {\r\n        if (inputValidStr === validStr) {\r\n            setComplete(true);\r\n            // props.onMoveButtonClick(1);\r\n        }\r\n    };\r\n\r\n    const certMode = validStr.length > 0;\r\n    const inValid =\r\n        profile.cellNumber.length < 10 || profile.cellNumber.length > 11;\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACDialog\r\n                validNumber={validStr}\r\n                open={dialog}\r\n                onClose={() => {\r\n                    setDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={!complete}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">휴대폰번호를 입력하세요</p>\r\n                <Box\r\n                    className=\"bg_wh box_div mg_t20\"\r\n                    px=\"16px\"\r\n                    pt=\"20px\"\r\n                    pb=\"16px\"\r\n                >\r\n                    <Grid container alignItems=\"center\">\r\n                        <TextField\r\n                            disabled={certMode || complete}\r\n                            error={inValid}\r\n                            helperText={\r\n                                inValid && '휴대전화 번호는 10~11 자리입니다'\r\n                            }\r\n                            value={profile.cellNumber}\r\n                            onChange={(event) => {\r\n                                onChangePhoneNumber(event.target.value);\r\n                            }}\r\n                            label={'휴대폰 번호'}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Box flexGrow={1} />\r\n                        <Button\r\n                            disabled={inValid || complete}\r\n                            className=\"btn_blueBorder\"\r\n                            style={{\r\n                                padding: 0,\r\n                            }}\r\n                            onClick={onCertButtonClick}\r\n                        >\r\n                            {certMode ? '재인증' : '입력'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                {certMode && (\r\n                    <>\r\n                        <p className=\"mg_t30 txt_14 txt_center\">\r\n                            팝업창에 떴던 인증번호를 아래에 입력해주세요\r\n                        </p>\r\n                        <Box\r\n                            className=\"box_div mg_t30 bg_wh\"\r\n                            px=\"16px\"\r\n                            pt=\"20px\"\r\n                            pb=\"16px\"\r\n                        >\r\n                            <Grid container alignItems=\"center\">\r\n                                <TextField\r\n                                    disabled={complete}\r\n                                    error={inputValidStr !== validStr}\r\n                                    value={inputValidStr}\r\n                                    onChange={(event) => {\r\n                                        setInputValidStr(event.target.value);\r\n                                    }}\r\n                                    label={'인증번호 확인'}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Box flexGrow={1} />\r\n                                <Button\r\n                                    disabled={complete}\r\n                                    className=\"btn_blueBorder\"\r\n                                    style={{\r\n                                        padding: 0,\r\n                                    }}\r\n                                    onClick={onVerifyButtonClick}\r\n                                >\r\n                                    완료\r\n                                </Button>\r\n                            </Grid>\r\n                        </Box>\r\n                    </>\r\n                )}\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCellphoneComponent;\r\n\r\n//import { TextField } from '@material-ui/core';\r\n//import React, { useState } from 'react';\r\n//import { useRecoilState } from 'recoil';\r\n//import http from '../../http';\r\n//import { SignUpProfileState } from '../../recoil/Session';\r\n//import {\r\n//    SignupComponentProps,\r\n//    SignupProfileInfo,\r\n//    SignupProfileInterface,\r\n//} from './DataModel';\r\n//import SignupCommonComponent from './SignupCommon';\r\n//\r\n//type SignupProfileProps = SignupComponentProps & {\r\n//    data: SignupProfileInterface;\r\n//    index: number;\r\n//};\r\n//\r\n//const parseData = (data: SignupProfileInfo, index: number): string => {\r\n//    switch (index) {\r\n//        case 0:\r\n//            return data.realName;\r\n//        case 1:\r\n//            return data.nickName;\r\n//        case 2:\r\n//            return data.cellNumber;\r\n//    }\r\n//    return '';\r\n//};\r\n//\r\n//const SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n//    props: SignupProfileProps\r\n//) => {\r\n//    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n//    const value = parseData(profile, props.index);\r\n//    const buttonDisable = value === '';\r\n//    const [inValid, setInValid] = useState<boolean>(false);\r\n//    const [helperText, setHelperText] = useState<string>('');\r\n//\r\n//    const onChange = (index: number, data: string) => {\r\n//        switch (index) {\r\n//            case 0:\r\n//                setProfile({ ...profile, realName: data });\r\n//                break;\r\n//            case 1:\r\n//                if (data !== '') {\r\n//                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n//                        (res) => {\r\n//                            const alreadyExist: boolean = res.data.data;\r\n//                            if (alreadyExist !== inValid) {\r\n//                                setInValid(alreadyExist);\r\n//                                setHelperText('이미 존재하는 닉네임입니다.');\r\n//                            }\r\n//                        }\r\n//                    );\r\n//                }\r\n//                setProfile({ ...profile, nickName: data });\r\n//\r\n//                break;\r\n//            case 2:\r\n//                let onlyNums = data.replace(/[^0-9]/g, '');\r\n//                if (onlyNums.length > 11) {\r\n//                    onlyNums = onlyNums.slice(0, 11);\r\n//                }\r\n//                setProfile({ ...profile, cellNumber: onlyNums });\r\n//                if (onlyNums.length < 10 || onlyNums.length > 11) {\r\n//                    setInValid(true);\r\n//                    setHelperText('휴대전화 번호는 10~11 자리입니다');\r\n//                } else {\r\n//                    setInValid(false);\r\n//                }\r\n//                break;\r\n//        }\r\n//    };\r\n//\r\n//    return (\r\n//        <div className=\"bg_gray5\">\r\n//            <SignupCommonComponent\r\n//                buttonDisable={buttonDisable || inValid}\r\n//                onMoveButtonClick={props.onMoveButtonClick}\r\n//            >\r\n//                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n//                <div className=\"box_div mg_t20 bg_wh\">\r\n//                    <div className=\"pd_t16 mg_l16\"></div>\r\n//                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n//                        <TextField\r\n//                            error={inValid}\r\n//                            helperText={inValid && helperText}\r\n//                            value={value}\r\n//                            onChange={(event) => {\r\n//                                onChange(props.index, event.target.value);\r\n//                            }}\r\n//                            label={props.data.description}\r\n//                            variant=\"outlined\"\r\n//                        />\r\n//                    </div>\r\n//                </div>\r\n//            </SignupCommonComponent>\r\n//        </div>\r\n//    );\r\n//};\r\n//\r\n//export default SignupProfileComponent;\r\n//\r\n","import { Box, IconButton, InputAdornment, TextField } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserState,\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n    UserInfo,\r\n} from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupUserModel {\r\n    name: string;\r\n    nickname: string;\r\n    accountNumber: string;\r\n    accountMoney: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n}\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\nconst SignupPasswordComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const setUserState = useSetRecoilState<UserInfo>(CurrentUserState);\r\n\r\n    const signupProfile = useRecoilValue(SignUpProfileState);\r\n    const accountInfo = useRecoilValue(SignUpAccInfoState);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccNum = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n\r\n    const [fingerDialog, setFingerDialog] = useState<boolean>(false);\r\n\r\n    const signupFunction = async () => {\r\n        const signupData: SignupUserModel = {\r\n            name: signupProfile.realName,\r\n            nickname: signupProfile.nickName,\r\n            phoneNumber: signupProfile.cellNumber,\r\n            accountNumber: accountInfo.accountNumber,\r\n            password: password,\r\n            accountMoney: accountInfo.accountMoney + '',\r\n        };\r\n        const signupCategory: SignupCategory = {\r\n            benefitCategoryList: [\r\n                {\r\n                    categoryId: 101,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n                {\r\n                    categoryId: 102,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const createRes = await http.post('/api/members', signupData); // user 먼저 만들어져야함\r\n        console.log(createRes);\r\n        const registRes = await http.post(\r\n            '/api/members/category',\r\n            signupCategory\r\n        ); // user 먼저 만들어져야함\r\n        console.log(registRes);\r\n        const userRes = await http.get(\r\n            `/api/members/${encodeURI(signupProfile.nickName)}`\r\n        ); // user 먼저 만들어져야함\r\n        console.log(userRes.data.data);\r\n        const currentUser: UserInfo = userRes.data.data;\r\n        setUserState({\r\n            accountMoney: currentUser.accountMoney,\r\n            point: currentUser.point,\r\n            accountNumber: currentUser.accountNumber,\r\n            name: currentUser.name,\r\n            nickname: currentUser.nickname,\r\n            phoneNumber: currentUser.phoneNumber,\r\n        });\r\n        resetProfile();\r\n        resetAccNum();\r\n        resetCategory();\r\n\r\n        setFingerDialog(false);\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const fingerClick = async () => {\r\n        await signupFunction();\r\n    };\r\n\r\n    const fingerClose = () => {\r\n        setFingerDialog(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <FingerDialog\r\n                fingerClick={fingerClick}\r\n                open={fingerDialog}\r\n                onClose={fingerClose}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={password === ''}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n                onCustomizeNextClick={() => {\r\n                    setFingerDialog(true);\r\n                }}\r\n            >\r\n                <p className=\"txt_20 txt_b\">앱 사용을 위한</p>\r\n                <p className=\"txt_20\">비밀번호를 설정해 주세요.</p>\r\n\r\n                <Box mt=\"25px\">\r\n                    <TextField\r\n                        style={{ width: '80%', marginLeft: '10%' }}\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        InputProps={{\r\n                            // <-- This is where the toggle button is added.\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <Visibility\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        ) : (\r\n                                            <VisibilityOff\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPasswordComponent;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport {\r\n    SignupComponentProps,\r\n    SignupProfileInfo,\r\n    SignupProfileInterface,\r\n} from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ntype SignupProfileProps = SignupComponentProps & {\r\n    data: SignupProfileInterface;\r\n    index: number;\r\n};\r\n\r\nconst parseData = (data: SignupProfileInfo, index: number): string => {\r\n    switch (index) {\r\n        case 0:\r\n            return data.realName;\r\n        case 1:\r\n            return data.nickName;\r\n    }\r\n    return '';\r\n};\r\n\r\nconst SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n    props: SignupProfileProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n    const value = parseData(profile, props.index);\r\n    const buttonDisable = value === '';\r\n    const [inValid, setInValid] = useState<boolean>(false);\r\n    const [helperText, setHelperText] = useState<string>('');\r\n\r\n    const onChange = (index: number, data: string) => {\r\n        switch (index) {\r\n            case 0:\r\n                setProfile({ ...profile, realName: data });\r\n                break;\r\n            case 1:\r\n                if (data !== '') {\r\n                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n                        (res) => {\r\n                            const alreadyExist: boolean = res.data.data;\r\n                            if (alreadyExist !== inValid) {\r\n                                setInValid(alreadyExist);\r\n                                setHelperText('이미 존재하는 닉네임입니다.');\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                setProfile({ ...profile, nickName: data });\r\n\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={buttonDisable || inValid}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    <div className=\"pd_t16 mg_l16\"></div>\r\n                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                        <TextField\r\n                            error={inValid}\r\n                            helperText={inValid && helperText}\r\n                            value={value}\r\n                            onChange={(event) => {\r\n                                onChange(props.index, event.target.value);\r\n                            }}\r\n                            label={props.data.description}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupProfileComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData,\r\n    SignupProfileInterface,\r\n} from '../component/Signup/DataModel';\r\nimport SignupAccountComponent from '../component/Signup/SignupAccountComponent';\r\nimport SignupCellphoneComponent from '../component/Signup/SignupCellphoneComponent';\r\nimport SignupPasswordComponent from '../component/Signup/SignupPasswordComponent';\r\nimport SignupProfileComponent from '../component/Signup/SignupProfileComponent';\r\nimport {\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n} from '../recoil/Session';\r\n\r\nconst SignupPage: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccInfo = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n    const sliderRef = useRef<Slider>(null);\r\n    const [index, setIndex] = useState<number>(0);\r\n\r\n    const items: Array<JSX.Element> = [];\r\n    rendingData.forEach((eachData: SignupProfileInterface, index: number) => {\r\n        items.push(\r\n            <SignupProfileComponent\r\n                key={index}\r\n                index={index}\r\n                data={eachData}\r\n                onMoveButtonClick={(move: number) => onMove(index, move)}\r\n            />\r\n        );\r\n    });\r\n\r\n    const onMove = async (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            resetProfile();\r\n            resetAccInfo();\r\n            resetCategory();\r\n            history.replace('/mainpage');\r\n            setIndex(0);\r\n            return;\r\n        }\r\n        setIndex(index + move);\r\n        if (index + move > 4) {\r\n            // 맨마지막 페이지\r\n            // setIsAccSeq(true); real Signup\r\n            history.replace('/category');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Slider {...commonSlickSettings} ref={sliderRef}>\r\n            {items}\r\n            <SignupCellphoneComponent\r\n                key={2}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(2, move);\r\n                }}\r\n            />\r\n            <SignupAccountComponent\r\n                key={3}\r\n                checkCurrent={index === 3}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(3, move);\r\n                }}\r\n            />\r\n            <SignupPasswordComponent\r\n                key={4}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(4, move);\r\n                }}\r\n            />\r\n        </Slider>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport './basic.css';\r\nimport AuthRouteGuard from './component/AuthRouteGuard';\r\nimport { FriendDataSet } from './component/Together/DataModel';\r\nimport './overide.css';\r\nimport BenefitCompanyPage from './page/BenefitCompanyPage';\r\nimport CategoryPage from './page/CategoryPage';\r\nimport GivingPage from './page/GivingPage';\r\nimport HomePage from './page/HomePage';\r\nimport MainPage from './page/MainPage';\r\nimport SignupPage from './page/SignupPage';\r\nimport { FriendDataSetState } from './recoil/Together';\r\n\r\nconst App: React.FC = () => {\r\n    const setFrined = useSetRecoilState(FriendDataSetState);\r\n    useEffect(() => {\r\n        window.addEventListener(\r\n            'message',\r\n            (e) => {\r\n                console.log(e);\r\n                const res = e.data.split(';;;');\r\n                if (res[0] === 'parent') {\r\n                    const dataStr: string = res[1] as string;\r\n                    console.log(`Data Str ${dataStr}`);\r\n                    const eachPersonStr = dataStr.split(';');\r\n                    const friendList: FriendDataSet[] = [];\r\n                    eachPersonStr.forEach((eachStr: string) => {\r\n                        const privateDataList: string[] = eachStr.split(':');\r\n                        friendList.push({\r\n                            name: privateDataList[0],\r\n                            displayname: privateDataList[1],\r\n                            cellphone: privateDataList[2],\r\n                        });\r\n                    });\r\n                    console.log(eachPersonStr);\r\n                    setFrined(friendList);\r\n                } else if (res[0] === 'child') {\r\n                    console.log('called by me');\r\n                }\r\n            },\r\n            false\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/mainpage\" component={MainPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n                <Route exact path=\"/category\" component={CategoryPage} />\r\n                <AuthRouteGuard exact path=\"/\" component={HomePage} />\r\n                <AuthRouteGuard exact path=\"/giving\" component={GivingPage} />\r\n                <AuthRouteGuard\r\n                    exact\r\n                    path=\"/benefit-company/:name\"\r\n                    component={BenefitCompanyPage}\r\n                />\r\n\r\n                <Redirect from=\"*\" to=\"/mainpage\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    StylesProvider,\r\n    ThemeProvider,\r\n    unstable_createMuiStrictModeTheme,\r\n} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <RecoilRoot>\r\n            <ThemeProvider theme={theme}>\r\n                <StylesProvider injectFirst>\r\n                    <App />\r\n                </StylesProvider>\r\n            </ThemeProvider>\r\n        </RecoilRoot>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}