{"version":3,"sources":["recoil/index.ts","recoil/Session.ts","component/AuthRoute.tsx","component/AuthRouteGuard.tsx","http/index.ts","component/Category/DataModel.ts","component/Common/SelectList.tsx","component/Giving/DataModel.ts","component/Common/util.ts","component/Signup/SignupCommon.tsx","component/Signup/SignupCategoryComponent.tsx","component/Signup/SignupFinishComponent.tsx","page/CategoryPage.tsx","component/Common.ts","recoil/Giving.ts","component/Common/FingerDialog.tsx","component/Common/HeaderAction.tsx","component/Giving/GivingCommon.tsx","component/Giving/GivingAmountComponent.tsx","component/Common/Loading.tsx","component/Giving/GivingComponentDonationMember.tsx","component/Giving/GivingComponentDonationPie.tsx","component/Giving/GivingComponentStatus.tsx","component/Giving/GivingComponent.tsx","component/Giving/GivingFinishComponent.tsx","component/Giving/GivingSelectComponent.tsx","page/GivingPage.tsx","recoil/Benefit.ts","component/Common/HeaderDefault.tsx","component/Benefit/HomeBenefitInputText.tsx","component/Benefit/HomBenefitCompany.tsx","component/Benefit/HomeBenefitSearchList.tsx","component/Benefit/HomeBenefitList.tsx","component/Benefit/HomeBenefitSlider.tsx","component/Common/BottomBar.tsx","component/Benefit/HomeBenefitComponent.tsx","component/Signup/DataModel.ts","component/Home/HCBenefit.tsx","component/Home/BenefitList.tsx","component/Home/DataModel.ts","component/Home/HCPoint.tsx","component/Home/HCStatus.tsx","component/Home/HomeComponent.tsx","component/Setting/SettingComponent.tsx","component/Together/TogetherComponent.tsx","page/HomePage.tsx","component/Rending/DataModel.ts","component/Rending/RendingComponent.tsx","page/SigninPage.tsx","page/MainPage.tsx","component/Signup/SignupAccountComponent.tsx","component/Signup/SignupCellphoneComponent.tsx","component/Signup/SignupPasswordComponent.tsx","component/Signup/SignupProfileComponent.tsx","page/SignupPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistAtom","recoilPersist","key","storage","localStorage","IsSplashSkip","atom","default","effects_UNSTABLE","SignUpProfileState","cellNumber","nickName","realName","SignUpAccInfoState","accountMoney","accountNumber","SignUpCategoryState","CurrentUserState","name","nickname","phoneNumber","point","CurrentUserCategoryState","CurrentUserTransactionState","AuthRoute","render","props","isLogin","children","component","others","to","pathname","Route","AuthRouteGuard","currentUser","useRecoilValue","console","log","process","http","axios","create","baseURL","interceptors","request","use","config","error","Promise","reject","response","CategoryStandInfo","id","useStyles","makeStyles","root","backgroundColor","margin","marginLeft","icon","color","fontSize","SelectList","classes","standardData","map","eachData","className","FormControlLabel","style","display","control","Checkbox","checkedIcon","checked","selectData","findIndex","select","onChange","event","label","COLOR_SET","GivingStandInfo","getCategoryNameFromId","target","find","eachId","getMoneyStr2Number","str","Math","floor","Number","getNumberString","number","toString","replace","getCategoryImgPath","prefix","SignupCommonComponent","AppBar","position","Toolbar","alignItems","isLast","IconButton","disabled","onClick","onMoveButtonClick","KeyboardArrowLeft","Typography","height","Button","disableRipple","buttonDisable","onCustomizeNextClick","ACCategoryDialog","onClose","open","recommand","handleOk","forEach","index","length","Dialog","Card","CardHeader","title","CardContent","CardActions","justifyContent","paddingTop","ACOverDialog","SignupCategoryComponent","useRecoilState","category","setCategory","userInfo","useState","suggestDialog","setSuggestDialog","overDialog","setOverDialog","setRecommand","useEffect","get","then","res","data","categoryId","SignupCommon","next","benefitCategoryList","push","userNickname","post","currentTarget","filter","item","SignupFinishComponent","Box","flexDirection","mt","flexGrow","src","mb","CategoryPage","sliderRef","useRef","history","useHistory","currentIndex","setIndex","onMove","move","a","current","slickGoTo","commonSlickSettings","touchMove","dots","arrows","GivingSelectState","GivingAmountState","GivingResultState","isLoaded","donationRatioStatus","memberDTOs","totalDonationMoney","FingerDialog","fingerClick","subheader","textAlign","HeaderAction","defaultType","fontFamily","selectedType","onMoveClick","headerTitle","GivingCommon","dfColor","buttonLayout","flexBasis","width","buttonTitle","inputText","GivingAmountComponent","origin","max","givingAmount","setGivingAmount","givingSelect","setOpen","donationId","donationPoint","nextMove","TextField","helperText","value","Loading","Grid","container","justify","CircularProgress","text","maxWidth","minWidth","whiteSpace","overflow","textOverflow","money","GivingComponentDonationMember","donationMember","orderMember","slice","sort","d1","d2","getOrderMember","sortMemger","maxValueLen","minValueLen","getRage","start","end","borderRadius","eachMember","my","ml","GivingComponentDonationPie","sortData","donationStatus","totalDonationCount","labels","Array","datasets","borderColor","getGivingNameFromId","options","maintainAspectRatio","responsive","plugins","legend","boxWidth","usePointStyle","animation","duration","type","moneyFont","GivingComponentStatus","GivingComponent","givingData","setGivingData","GivingFinishComponent","GivingSelectComponent","GivingPage","resetSelect","useResetRecoilState","resetAmount","onNextMove","goBack","ref","BenefitStateCompany","BenefitFavoriteState","HeaderDeafault","fontWeight","theme","marginRight","input","spacing","flex","img","HomeBenefitInputText","Paper","InputBase","placeholder","inputProps","commonHeart","selectedHeart","HomBenefitCompany","wrap","companyName","description","userLike","totalLike","thumbNailPath","marginTop","HomeBenefitSearchList","searchText","benefitCompany","benefitFavoriteCompany","renderValue","setRenderValue","filterData","categoryName","includes","HomeBenefitList","TabPanel","other","role","hidden","aria-labelledby","p","DISPLAY_TYPE","HomeBenefitSlider","pageIndex","override","speed","HomeBenefitComponent","setSearchText","setBenefitCompany","setFavoriteState","useSetRecoilState","encodeURI","isertArr","benefitData","page","setPage","isSearchMode","Tabs","nextValue","indicatorColor","textColor","variant","scrollButtons","Tab","a11yProps","SIGNUP_TYPE","BottomBarNav","BottomNavigation","newValue","showLabels","BottomNavigationAction","selected","HOME","BENEFIT","TOGETHER","SETTING","cardActionLayout","padding","CategoryIcon","HCPoint","resCategory","eachCategory","extractDate","date","c","Date","getMonth","getDate","getDay","BenefitList","arr","totalBuyPrice","DummyTransactionData","userCategory","transaction","setTransaction","displaySet","setDisplaySet","inline","HCStatus","setUserInfo","HomeComponent","mx","HCBenefit","SettingComponent","TogetherComponent","homeRendering","HomePage","renderType","setCurrentRenderType","BottomBar","rendingData","first","second","highLight","imgPath","buttonOverride","RendingComponent","overflowX","isFirst","left","imgContainer","button","bodyReplace","zIndex","SigninPage","preventDefault","window","parent","postMessage","border","MainPage","isSplashSkip","setIsSplashSkip","MainRendingData","labelLayout","AccountComponent","ACNO","PBOK_BAL","SignupAccountComponent","setAccount","signupInfo","wooriAccountList","setWooriAccountList","selectAccount","setSelectAccount","checkCurrent","regex","cellFormat","dataBody","GRID","ACCT_KND","toUpperCase","ACDialog","validNumber","SignupCellphoneComponent","profile","setProfile","dialog","setDialog","complete","setComplete","inputValidStr","setInputValidStr","validStr","setValidStr","certMode","inValid","px","pt","pb","onlyNums","onChangePhoneNumber","result","characters","charactersLength","i","charAt","random","join","makeNumberId","SignupPasswordComponent","password","setPassword","showPassword","setShowPassword","setUserState","signupProfile","accountInfo","resetProfile","resetAccNum","resetCategory","fingerDialog","setFingerDialog","signupFunction","signupData","signupCategory","createRes","registRes","userRes","autoComplete","InputProps","endAdornment","InputAdornment","aria-label","onMouseDown","Visibility","VisibilityOff","SignupProfileComponent","parseData","setInValid","setHelperText","alreadyExist","SignupPage","resetAccInfo","items","App","addEventListener","e","split","alert","exact","path","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","unstable_createMuiStrictModeTheme","ReactDOM","StrictMode","ThemeProvider","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.a832ec69.chunk.js","sourcesContent":["import { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'recoil-persist', // configuration stay the same too\r\n    storage: localStorage\r\n})\r\n\r\nexport {\r\n    persistAtom\r\n}","import { atom } from 'recoil';\r\nimport { CategoryDataSet } from '../component/Category/DataModel';\r\nimport { TransactionSet } from '../component/Home/DataModel';\r\nimport { SignupProfileInfo } from '../component/Signup/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport interface UserInfo {\r\n    name: string;\r\n    nickname: string;\r\n    phoneNumber: string;\r\n    accountNumber: string;\r\n    accountMoney: number;\r\n    point: number;\r\n}\r\n\r\nexport const IsSplashSkip = atom<boolean>({\r\n    key: 'IsSplashSkip',\r\n    default: false,\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const SignUpProfileState = atom<SignupProfileInfo>({\r\n    key: 'SignUpProfileState',\r\n    default: {\r\n        cellNumber: '',\r\n        nickName: '',\r\n        realName: '',\r\n    },\r\n});\r\n\r\nexport const SignUpAccInfoState = atom<{\r\n    accountNumber: string;\r\n    accountMoney: number;\r\n}>({\r\n    key: 'SignUpAccInfoState',\r\n    default: {\r\n        accountMoney: 0,\r\n        accountNumber: '',\r\n    },\r\n});\r\n\r\nexport const SignUpCategoryState = atom<CategoryDataSet[]>({\r\n    key: 'SignUpCategoryState',\r\n    default: [],\r\n});\r\n\r\nexport const CurrentUserState = atom<UserInfo>({\r\n    key: 'CurrentUserState',\r\n    default: {\r\n        name: '',\r\n        nickname: '',\r\n        phoneNumber: '',\r\n        accountNumber: '',\r\n        accountMoney: 0,\r\n        point: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserCategoryState = atom<number[]>({\r\n    key: 'CurrentUserCategoryState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const CurrentUserTransactionState = atom<TransactionSet[]>({\r\n    key: 'CurrentUserTransactionState',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport interface AuthRouteProps extends RouteProps {\r\n    isLogin: boolean;\r\n}\r\n\r\nclass AuthRoute extends Route<AuthRouteProps> {\r\n    render = () => {\r\n        const { isLogin, children, component, ...others } = this.props;\r\n        if (isLogin) {\r\n            return (\r\n                <Route {...others} component={component}>\r\n                    {children}\r\n                </Route>\r\n            );\r\n        } else {\r\n            return (\r\n                <Route\r\n                    {...others}\r\n                    render={() => <Redirect to={{ pathname: '/signin' }} />}\r\n                />\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { RouteProps } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { CurrentUserState } from '../recoil/Session';\r\nimport AuthRoute from './AuthRoute';\r\n\r\nconst AuthRouteGuard: React.FC<RouteProps> = (props: RouteProps) => {\r\n    const currentUser = useRecoilValue(CurrentUserState);\r\n    return <AuthRoute isLogin={currentUser.nickname !== ''} {...props} />;\r\n};\r\n\r\nexport default AuthRouteGuard;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconsole.log(`Backend End point ${process.env.REACT_APP_BACKEND_ENDPOINT}`);\r\nconst http = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_ENDPOINT,\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    (config: AxiosRequestConfig) => {\r\n        console.log(`Reqeust Interceptor Called`);\r\n        return config;\r\n    },\r\n    (error: any) => {\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n    (config: AxiosResponse) => {\r\n        console.log(`Response Interceptor Called`);\r\n        return config;\r\n    },\r\n    (error: any) => {\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default http;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface CategoryDataSet extends CategoryDataInfo {}\r\n\r\nexport const CategoryStandInfo: CategoryDataSet[] = [\r\n    {\r\n        id: 101,\r\n        name: '저플라스틱',\r\n    },\r\n    {\r\n        id: 102,\r\n        name: '저탄소',\r\n    },\r\n    {\r\n        id: 103,\r\n        name: '동물실험반대',\r\n    },\r\n    {\r\n        id: 104,\r\n        name: '결식아동',\r\n    },\r\n    {\r\n        id: 105,\r\n        name: '노인보호',\r\n    },\r\n    {\r\n        id: 106,\r\n        name: '장애인 복지',\r\n    },\r\n    {\r\n        id: 107,\r\n        name: '장애인이 만든 제품',\r\n    },\r\n    {\r\n        id: 108,\r\n        name: '구호물품',\r\n    },\r\n    {\r\n        id: 109,\r\n        name: '비건',\r\n    },\r\n];\r\n","import { Checkbox, FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent } from 'react';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    margin: {\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nexport interface CategoryDataInfo {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface SelectListProps {\r\n    standardData: CategoryDataInfo[];\r\n    selectData: CategoryDataInfo[];\r\n    onChange: (\r\n        data: CategoryDataInfo,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => void;\r\n}\r\n\r\nconst SelectList: React.FC<SelectListProps> = (props: SelectListProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {props.standardData.map((eachData) => {\r\n                return (\r\n                    <div\r\n                        key={eachData.id}\r\n                        className=\"box_div mg_t20 bg_wh height_80\"\r\n                    >\r\n                        <FormControlLabel\r\n                            style={{ display: 'flex' }}\r\n                            className=\"checkbox__label pd_t26 pd_l20\"\r\n                            control={\r\n                                <Checkbox\r\n                                    checkedIcon={\r\n                                        <CheckCircleOutlineIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    icon={\r\n                                        <RadioButtonUncheckedIcon\r\n                                            className={classes.icon}\r\n                                        />\r\n                                    }\r\n                                    color=\"primary\"\r\n                                    checked={\r\n                                        props.selectData.findIndex(\r\n                                            (select) =>\r\n                                                select.id === eachData.id\r\n                                        ) >= 0\r\n                                    }\r\n                                    onChange={(event) => {\r\n                                        props.onChange(eachData, event);\r\n                                    }}\r\n                                />\r\n                            }\r\n                            classes={{ label: classes.margin }}\r\n                            label={eachData.name}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectList;\r\n","import { CategoryDataInfo } from '../Common/SelectList';\r\n\r\nexport interface DonationCategory {\r\n    donationId: number;\r\n    totalDonationCount: number;\r\n}\r\n\r\nexport interface DonationMember {\r\n    nickname: string;\r\n    point: number;\r\n}\r\n\r\nexport interface GivingResultInfo {\r\n    isLoaded: boolean;\r\n    totalDonationMoney: number;\r\n    donationRatioStatus: DonationCategory[];\r\n    memberDTOs: DonationMember[];\r\n}\r\n\r\nexport interface GivingDataSet extends CategoryDataInfo {}\r\n\r\nexport const COLOR_SET = [\r\n    '#3BAAD8',\r\n    '#62BBE0',\r\n    '#9DD4EC',\r\n    '#C4E5F#',\r\n    '#D8EEF7',\r\n];\r\n\r\nexport const GivingStandInfo: GivingDataSet[] = [\r\n    {\r\n        id: 201,\r\n        name: '친환경',\r\n    },\r\n    {\r\n        id: 202,\r\n        name: '동물보호',\r\n    },\r\n    {\r\n        id: 203,\r\n        name: '아동 / 노인',\r\n    },\r\n    {\r\n        id: 204,\r\n        name: '장애인',\r\n    },\r\n    {\r\n        id: 205,\r\n        name: '구호물품',\r\n    },\r\n];\r\n\r\nexport interface CommonInterface {\r\n    onMoveClick: (nextMove: number) => void;\r\n    index: number;\r\n}\r\n","import { CategoryStandInfo } from '../Category/DataModel';\r\nimport { GivingStandInfo } from '../Giving/DataModel';\r\n\r\nexport const getCategoryNameFromId = (id: number): string => {\r\n    const target = CategoryStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getGivingNameFromId = (id: number): string => {\r\n    const target = GivingStandInfo.find((eachId) => eachId.id == id);\r\n    return target ? target.name : '';\r\n};\r\n\r\nexport const getMoneyStr2Number = (str: string): number => {\r\n    return Math.floor(Number(str));\r\n};\r\n\r\nexport const getNumberString = (number: number): string => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport const makeNumberId = (length: number): string => {\r\n    const result = [];\r\n    const characters = '0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result.push(\r\n            characters.charAt(Math.floor(Math.random() * charactersLength))\r\n        );\r\n    }\r\n    return result.join('');\r\n};\r\n\r\nexport const getCategoryImgPath = (id: number): string => {\r\n    const prefix = '/images/';\r\n    switch (id) {\r\n        case 101:\r\n            return prefix + 'icn_lowPlastic.png';\r\n        case 102:\r\n            return prefix + 'icn_lowCarbon.png';\r\n        case 103:\r\n            return prefix + 'icn_noAnimalTesting.png';\r\n        case 104:\r\n            return prefix + 'icn_children.png';\r\n        case 105:\r\n            return prefix + 'icn_oldman.png';\r\n        case 106:\r\n            return prefix + 'icn_disabled.png';\r\n        case 107:\r\n            return prefix + 'icn_disabled_Product.png';\r\n        case 108:\r\n            return prefix + 'icn_relief.png';\r\n        case 109:\r\n            return prefix + 'icn_vegan.png';\r\n    }\r\n    return '';\r\n};\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface SignUpCommon {\r\n    buttonDisable: boolean;\r\n    isLast?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n    onCustomizeNextClick?: () => void;\r\n}\r\n\r\nconst SignupCommonComponent: React.FC<PropsWithChildren<SignUpCommon>> = (\r\n    props: PropsWithChildren<SignUpCommon>\r\n) => {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar style={{ alignItems: 'center' }}>\r\n                    {!props.isLast && (\r\n                        <IconButton\r\n                            className=\"back_div\"\r\n                            disabled={props.isLast}\r\n                            onClick={() => props.onMoveButtonClick(-1)}\r\n                        >\r\n                            <KeyboardArrowLeft\r\n                                style={{\r\n                                    display: `${\r\n                                        props.isLast ? 'none' : 'block'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    )}\r\n                    <Typography className=\"txt_24 txt_b\">\r\n                        혜택통 만들기\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => {\r\n                    props.onCustomizeNextClick\r\n                        ? props.onCustomizeNextClick()\r\n                        : props.onMoveButtonClick(1);\r\n                }}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">\r\n                    {props.isLast ? '완료! 혜택 받으러 가기' : '다음'}\r\n                </p>\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupCommonComponent;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentUserState, SignUpCategoryState } from '../../recoil/Session';\r\nimport { CategoryDataSet, CategoryStandInfo } from '../Category/DataModel';\r\nimport SelectList from '../Common/SelectList';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst LIMIT = 2;\r\n\r\nconst ACCategoryDialog: React.FC<ACDialogProps & { recommand: number[] }> = (\r\n    props: ACDialogProps & { recommand: number[] }\r\n) => {\r\n    const { onClose, open, recommand } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    let str = '';\r\n\r\n    recommand.forEach((eachData: number, index) => {\r\n        str += getCategoryNameFromId(eachData);\r\n        str += recommand.length - 1 !== index ? ', ' : ' ';\r\n    });\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            카테고리 추천\r\n                        </Typography>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline' }}\r\n                    >\r\n                        진영님의 소비 패턴을 분석해보니\r\n                    </Typography>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline', color: '#62C3EB' }}\r\n                    >\r\n                        {str}\r\n                    </Typography>\r\n                    <Typography\r\n                        className=\"txt_14\"\r\n                        style={{ display: 'inline' }}\r\n                    >\r\n                        관련 소비가 많았어요! 해당 카테고리를 구독해보시는 것은\r\n                        어떨까요?\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions\r\n                    style={{ justifyContent: 'flex-end', paddingTop: 0 }}\r\n                >\r\n                    <Button\r\n                        onClick={handleOk}\r\n                        disableRipple\r\n                        style={{ color: '#62C3EB' }}\r\n                    >\r\n                        확인 완료\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst ACOverDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <CardContent>\r\n                <Typography>2가지의 카테고리만 선택 할 수 있어요.</Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end', paddingTop: 0 }}>\r\n                <Button\r\n                    onClick={handleOk}\r\n                    disableRipple\r\n                    style={{ color: '#62C3EB' }}\r\n                >\r\n                    확인 완료\r\n                </Button>\r\n            </CardActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCategoryComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [category, setCategory] = useRecoilState<CategoryDataSet[]>(\r\n        SignUpCategoryState\r\n    );\r\n\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [suggestDialog, setSuggestDialog] = useState<boolean>(false);\r\n    const [overDialog, setOverDialog] = useState<boolean>(false);\r\n\r\n    const [recommand, setRecommand] = useState<number[]>([]);\r\n    const buttonDisable = category.length !== 2;\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${userInfo.nickname}/category/recommend`).then(\r\n            (res) => {\r\n                const recommand = res.data.data.map((eachData: any) => {\r\n                    return eachData.categoryId;\r\n                });\r\n                setRecommand(recommand);\r\n                setSuggestDialog(true);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(userInfo);\r\n    const selectData = (\r\n        data: CategoryDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            if (category.length < LIMIT) {\r\n                setCategory([...category, data]);\r\n            } else {\r\n                setOverDialog(true);\r\n            }\r\n        } else {\r\n            setCategory(category.filter((item) => data !== item));\r\n        }\r\n    };\r\n\r\n    const onNextClick = (next: number) => {\r\n        const data: SignupCategory = {\r\n            benefitCategoryList: [],\r\n        };\r\n\r\n        category.forEach((eachData) => {\r\n            data.benefitCategoryList.push({\r\n                categoryId: eachData.id,\r\n                userNickname: userInfo.nickname,\r\n            });\r\n        });\r\n        http.post(`/api/members/category`, category).then((res) => {\r\n            console.log(res);\r\n            props.onMoveButtonClick(next);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACCategoryDialog\r\n                recommand={recommand}\r\n                open={suggestDialog}\r\n                onClose={() => {\r\n                    setSuggestDialog(false);\r\n                }}\r\n            />\r\n            <ACOverDialog\r\n                open={overDialog}\r\n                onClose={() => {\r\n                    setOverDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={buttonDisable}\r\n                onMoveButtonClick={onNextClick}\r\n            >\r\n                <p className=\"txt_20\">관심있는 카테고리 2가지를 골라</p>\r\n                <p className=\"txt_20 txt_b\">집중 혜택 받으세요.</p>\r\n\r\n                <SelectList\r\n                    selectData={category}\r\n                    standardData={CategoryStandInfo}\r\n                    onChange={selectData}\r\n                />\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCategoryComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst SignupFinishComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                isLast={true}\r\n                buttonDisable={false}\r\n                onMoveButtonClick={() => props.onMoveButtonClick(1)}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box mt=\"25px\" />\r\n                    <p className=\"txt_20 txt_b\">축하합니다!</p>\r\n                    <p className=\"txt_20\">혜택통이 만들어졌어요!</p>\r\n                    <p className=\"txt_20\">이제 착한 소비하고</p>\r\n                    <p className=\"txt_20\">혜택도 받으세요.</p>\r\n                    <Box flexGrow=\"1\" />\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            className=\"img_rending\"\r\n                            src=\"/images/rending_1.png\"\r\n                        />\r\n                    </p>\r\n                    <Box mb=\"45px\" />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupFinishComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport SignupCategoryComponent from '../component/Signup/SignupCategoryComponent';\r\nimport SignupFinishComponent from '../component/Signup/SignupFinishComponent';\r\n\r\nconst CategoryPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const [currentIndex, setIndex] = useState(0);\r\n\r\n    const onMove = async (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            return;\r\n        }\r\n        setIndex(index + move);\r\n        if (index + move >= 2) {\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentIndex === 0 ? (\r\n                <SignupCategoryComponent\r\n                    key={0}\r\n                    onMoveButtonClick={(move: number) => {\r\n                        onMove(0, move);\r\n                    }}\r\n                />\r\n            ) : (\r\n                <SignupFinishComponent\r\n                    key={1}\r\n                    onMoveButtonClick={(move: number) => {\r\n                        onMove(1, move);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import { Settings } from 'react-slick';\r\n\r\nexport const commonSlickSettings: Settings = {\r\n    touchMove: false,\r\n    dots: false,\r\n    arrows: false,\r\n};\r\n","import { atom } from 'recoil';\r\nimport { GivingDataSet, GivingResultInfo } from '../component/Giving/DataModel';\r\nimport { persistAtom } from './index';\r\n\r\nexport const GivingSelectState = atom<GivingDataSet[]>({\r\n    key: 'GivingSelectState',\r\n    default: [],\r\n});\r\n\r\nexport const GivingAmountState = atom<number>({\r\n    key: 'GivingAmountState',\r\n    default: 0,\r\n});\r\n\r\nexport const GivingResultState = atom<GivingResultInfo>({\r\n    key: 'GivingResultState',\r\n    default: {\r\n        isLoaded: false,\r\n        donationRatioStatus: [],\r\n        memberDTOs: [],\r\n        totalDonationMoney: 0,\r\n    },\r\n    effects_UNSTABLE: [persistAtom],\r\n});\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    fingerClick: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst FingerDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open, fingerClick } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            지문등록\r\n                        </Typography>\r\n                    }\r\n                    subheader={\r\n                        <Typography className=\"txt_14\">\r\n                            더욱 쉽고 빠른 로그인을 위해 지문을 등록해 주세요.\r\n                        </Typography>\r\n                    }\r\n                />\r\n            </Card>\r\n            <CardContent style={{ textAlign: 'center' }}>\r\n                <IconButton onClick={fingerClick}>\r\n                    <img src=\"/images/Fingerprint_Color.png\" />\r\n                </IconButton>\r\n                <Typography className=\"txt_14\">센서에 지문인식</Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end', paddingTop: 0 }}>\r\n                <Button\r\n                    onClick={onClose}\r\n                    disableRipple\r\n                    style={{ color: '#62C3EB' }}\r\n                >\r\n                    취소\r\n                </Button>\r\n            </CardActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default FingerDialog;\r\n","import {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport interface HeaderActionProps {\r\n    isLast: boolean;\r\n    headerTitle: string;\r\n    onMoveClick: () => void;\r\n}\r\n\r\nconst HeaderAction: React.FC<HeaderActionProps> = (\r\n    props: HeaderActionProps\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar style={{ alignItems: 'center' }}>\r\n                {!props.isLast && (\r\n                    <IconButton\r\n                        onClick={props.onMoveClick}\r\n                        className=\"back_div\"\r\n                    >\r\n                        <KeyboardArrowLeft\r\n                            style={{\r\n                                display: 'block',\r\n                            }}\r\n                        />\r\n                    </IconButton>\r\n                )}\r\n\r\n                <Typography className=\"txt_24 txt_b\">\r\n                    {props.headerTitle}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderAction;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport HeaderAction from '../Common/HeaderAction';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport interface GivingCommonProps {\r\n    headerTitle: string;\r\n    isLast: boolean;\r\n    buttonTitle: string;\r\n    buttonDisable?: boolean;\r\n    onMoveClick: (offset: number) => void;\r\n}\r\n\r\ntype GivingCommonType = React.PropsWithChildren<GivingCommonProps>;\r\n\r\nconst GivingCommon: React.FC<GivingCommonType> = (props: GivingCommonType) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            <HeaderAction\r\n                isLast={props.isLast}\r\n                headerTitle={props.headerTitle}\r\n                onMoveClick={() => props.onMoveClick(-1)}\r\n            />\r\n            <div className=\"glow_body\">\r\n                <div className=\"container mg_t30\" style={{ height: '100%' }}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                disableRipple={props.buttonDisable}\r\n                disabled={props.buttonDisable}\r\n                className={`btn_bottom ${\r\n                    props.buttonDisable ? 'bg_gray3' : 'bg_primaryblue'\r\n                }`}\r\n                onClick={() => props.onMoveClick(1)}\r\n            >\r\n                <p className=\"p_btn_bottom txt_wh txt_b\">{props.buttonTitle}</p>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GivingCommon;\r\n","import { Box, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingAmountState, GivingSelectState } from '../../recoil/Giving';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { getNumberString } from '../Common/util';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    inputText: {\r\n        '&>div>input': {\r\n            textAlign: 'center',\r\n        },\r\n        '&>p': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst isValid = (origin: number, max: number) => {\r\n    return 0 < origin && origin <= max;\r\n};\r\n\r\nconst GivingAmountComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const classes = useStyles();\r\n\r\n    const [givingAmount, setGivingAmount] = useRecoilState(GivingAmountState);\r\n    const givingSelect = useRecoilValue(GivingSelectState);\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setGivingAmount(Number(event.target.value));\r\n    };\r\n\r\n    const onClose = async () => {\r\n        await http.post(`/api/trading/donation`, {\r\n            userNickname: userInfo.nickname,\r\n            donationId: givingSelect[0].id,\r\n            donationPoint: givingAmount,\r\n        });\r\n        setOpen(false);\r\n        onMoveClick(index + 1);\r\n    };\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={!isValid(givingAmount, userInfo.point)}\r\n            onMoveClick={(nextMove: number) => {\r\n                if (nextMove < 0) {\r\n                    onMoveClick(index + nextMove);\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n\r\n                // onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <FingerDialog fingerClick={onClose} open={open} onClose={onClose} />\r\n            <p className=\"txt_20\">기부하고 싶은</p>\r\n            <p className=\"txt_20 txt_b\">금액을 입력하세요.</p>\r\n            <Box mt=\"25px\">\r\n                <TextField\r\n                    classes={{\r\n                        root: classes.inputText,\r\n                    }}\r\n                    style={{\r\n                        width: '80%',\r\n                        marginLeft: '10%',\r\n                    }}\r\n                    helperText={`최대 ${getNumberString(\r\n                        userInfo.point\r\n                    )} 원 입금 가능`}\r\n                    onChange={onChange}\r\n                />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingAmountComponent;\r\n","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: '100%' }}\r\n        >\r\n            <CircularProgress\r\n                style={{\r\n                    height: '4rem',\r\n                    width: '4rem',\r\n                    color: '#62C3EB',\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { COLOR_SET, DonationMember } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        display: 'inline-block',\r\n        maxWidth: '55px',\r\n        minWidth: '50px',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'right',\r\n        overflow: 'hidden !important',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    money: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        fontFamily: \"'Recursive', sans-serif\",\r\n        fontSize: '17px',\r\n    },\r\n}));\r\n\r\nconst MAX_SHOW_MEMBER = 8;\r\n\r\ninterface GivingComponentDonationMemberProps {\r\n    donationMember: DonationMember[];\r\n}\r\n\r\nconst getOrderMember = (donationMember: DonationMember[]) => {\r\n    return donationMember\r\n        .slice()\r\n        .sort((d1, d2) => {\r\n            return d2.point - d1.point;\r\n        })\r\n        .slice(0, MAX_SHOW_MEMBER);\r\n};\r\n\r\nconst getRage = (sortMemger: DonationMember[]): [number, number] => {\r\n    const maxValueLen = sortMemger[0].point;\r\n    const minValueLen = sortMemger[sortMemger.length - 1].point;\r\n\r\n    if (sortMemger.length >= 1) {\r\n        const max = maxValueLen * 1.1;\r\n        const min = minValueLen * 0.9;\r\n        return [min, max];\r\n    } else {\r\n        return [0, 0];\r\n    }\r\n};\r\n\r\nconst GivingComponentDonationMember: React.FC<GivingComponentDonationMemberProps> = ({\r\n    donationMember,\r\n}: GivingComponentDonationMemberProps) => {\r\n    const classes = useStyles();\r\n    const orderMember = getOrderMember(donationMember);\r\n    const [start, end] = getRage(orderMember);\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    지난 달 기부왕👍\r\n                </Typography>\r\n                <Box>\r\n                    <Grid>\r\n                        {orderMember.map((eachMember, index) => {\r\n                            return (\r\n                                <Box\r\n                                    display=\"flex\"\r\n                                    key={eachMember.nickname}\r\n                                    my=\"1.5rem\"\r\n                                >\r\n                                    <Box\r\n                                        width=\"1.5rem\"\r\n                                        height=\"2rem\"\r\n                                        position=\"relative\"\r\n                                    >\r\n                                        {index <= 2 && (\r\n                                            <img\r\n                                                src={`/images/ICON_ranking${\r\n                                                    index + 1\r\n                                                }.png`}\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Box flexGrow=\"1\" ml=\"0.5rem\">\r\n                                        <Box\r\n                                            mt=\"0.3rem\"\r\n                                            height=\"40%\"\r\n                                            width={`${\r\n                                                (eachMember.point /\r\n                                                    (end - start)) *\r\n                                                100\r\n                                            }%`}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    COLOR_SET[\r\n                                                        index >= 5 ? 4 : index\r\n                                                    ],\r\n                                            }}\r\n                                        />\r\n                                        <Typography className={classes.money}>\r\n                                            {eachMember.point}원\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Typography className={classes.text}>\r\n                                        {eachMember.nickname}\r\n                                    </Typography>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationMember;\r\n","import { Box, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getGivingNameFromId } from '../Common/util';\r\nimport { COLOR_SET, DonationCategory } from './DataModel';\r\n\r\ninterface GivingComponentDonationPieProps {\r\n    donationStatus: DonationCategory[];\r\n}\r\n\r\nconst GivingComponentDonationPie: React.FC<GivingComponentDonationPieProps> = ({\r\n    donationStatus,\r\n}: GivingComponentDonationPieProps) => {\r\n    const sortData = donationStatus\r\n        .filter((data) => data.totalDonationCount !== 0)\r\n        .sort((d1, d2) => {\r\n            return d2.totalDonationCount - d1.totalDonationCount;\r\n        });\r\n\r\n    const data = {\r\n        labels: new Array<string>(),\r\n        datasets: [\r\n            {\r\n                data: new Array<number>(),\r\n                backgroundColor: new Array<string>(),\r\n                borderColor: new Array<string>(),\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'right',\r\n                labels: {\r\n                    fontSize: 12,\r\n                    boxWidth: 12,\r\n                    usePointStyle: true,\r\n                },\r\n                onClick: null,\r\n            },\r\n        },\r\n        animation: {\r\n            duration: 0,\r\n        },\r\n    };\r\n\r\n    sortData.forEach((eachData, index) => {\r\n        data.labels.push(getGivingNameFromId(eachData.donationId));\r\n        data.datasets[0].data.push(eachData.totalDonationCount);\r\n        data.datasets[0].backgroundColor.push(COLOR_SET[index]);\r\n        data.datasets[0].borderColor.push('#00000000');\r\n    });\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_b txt_20\">기부 현황</Typography>\r\n                <Box mt=\"1rem\">\r\n                    <Pie\r\n                        width={250}\r\n                        height={160}\r\n                        options={options}\r\n                        type=\"pie\"\r\n                        data={data}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentDonationPie;\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    moneyFont: {\r\n        fontFamily: \"'Recursive', sans-serif !important\",\r\n        fontSize: '36px',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\ninterface GivingComponentStatusProps {\r\n    money: number;\r\n}\r\n\r\nconst GivingComponentStatus: React.FC<GivingComponentStatusProps> = ({\r\n    money,\r\n}: GivingComponentStatusProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                borderRadius: '0.5rem',\r\n            }}\r\n        >\r\n            <CardContent>\r\n                <Typography className=\"txt_20\">이번달에 모인</Typography>\r\n                <Typography className=\"txt_b txt_20\">\r\n                    총 기부액이에요!\r\n                </Typography>\r\n                <Box mt=\"20px\">\r\n                    <Typography\r\n                        className={`txt_primaryBlue2 ${classes.moneyFont}`}\r\n                    >\r\n                        {getNumberString(money)}원\r\n                    </Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default GivingComponentStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { GivingResultState } from '../../recoil/Giving';\r\nimport Loading from '../Common/Loading';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\nimport GivingComponentDonationMember from './GivingComponentDonationMember';\r\nimport GivingComponentDonationPie from './GivingComponentDonationPie';\r\nimport GivingComponentStatus from './GivingComponentStatus';\r\n\r\nconst GivingComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingResultState);\r\n\r\n    useEffect(() => {\r\n        http.get('/api/trading/donation/statistics').then((res) => {\r\n            setGivingData({\r\n                isLoaded: true,\r\n                ...res.data.data,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"기부 동참하기\"\r\n        >\r\n            {givingData.isLoaded ? (\r\n                <>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentStatus\r\n                            money={givingData.totalDonationMoney}\r\n                        />\r\n                    </Box>\r\n                    <Box mt=\"1rem\">\r\n                        <GivingComponentDonationPie\r\n                            donationStatus={givingData.donationRatioStatus}\r\n                        />\r\n                    </Box>\r\n                    <Box my=\"1rem\">\r\n                        <GivingComponentDonationMember\r\n                            donationMember={givingData.memberDTOs}\r\n                        />\r\n                    </Box>\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingComponent;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CommonInterface } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingFinishComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={true}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"홈으로 이동\"\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                <Box mt=\"25px\" />\r\n                <Typography className=\"txt_20 txt_b\">\r\n                    기부 모금이 완료되었어요.\r\n                </Typography>\r\n                <Typography className=\"txt_20\">진영님의 나눔으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    세상이 한 층 더 밝아졌어요!\r\n                </Typography>\r\n                <br />\r\n                <Typography className=\"txt_20\">기부는 블록체인으로</Typography>\r\n                <Typography className=\"txt_20\">\r\n                    투명하게 공개진행됩니다.\r\n                </Typography>\r\n                <Box flexGrow=\"1\" />\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src=\"/images/rending_4.png\" />\r\n                </p>\r\n                <Box mb=\"45px\" />\r\n            </Box>\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingFinishComponent;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { GivingSelectState } from '../../recoil/Giving';\r\nimport SelectList from '../Common/SelectList';\r\nimport { CommonInterface, GivingDataSet, GivingStandInfo } from './DataModel';\r\nimport GivingCommon from './GivingCommon';\r\n\r\nconst GivingSelectComponent: React.FC<CommonInterface> = ({\r\n    index,\r\n    onMoveClick,\r\n}: CommonInterface) => {\r\n    const [givingData, setGivingData] = useRecoilState(GivingSelectState);\r\n\r\n    const onChange = (\r\n        data: GivingDataSet,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        console.log('Clicked');\r\n        if (event.currentTarget.checked) {\r\n            setGivingData([data]);\r\n        } else {\r\n            setGivingData([]);\r\n        }\r\n    };\r\n    console.log(givingData);\r\n    return (\r\n        <GivingCommon\r\n            headerTitle=\"기부하기\"\r\n            isLast={false}\r\n            buttonDisable={givingData.length === 0}\r\n            onMoveClick={(nextMove: number) => {\r\n                onMoveClick(index + nextMove);\r\n            }}\r\n            buttonTitle=\"다음\"\r\n        >\r\n            <p className=\"txt_20\">관심있는 카테고리 하나를 골라</p>\r\n            <p className=\"txt_20 txt_b\">기부하세요.</p>\r\n            <SelectList\r\n                selectData={givingData}\r\n                standardData={GivingStandInfo}\r\n                onChange={onChange}\r\n            />\r\n        </GivingCommon>\r\n    );\r\n};\r\n\r\nexport default GivingSelectComponent;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport GivingAmountComponent from '../component/Giving/GivingAmountComponent';\r\nimport GivingComponent from '../component/Giving/GivingComponent';\r\nimport GivingFinishComponent from '../component/Giving/GivingFinishComponent';\r\nimport GivingSelectComponent from '../component/Giving/GivingSelectComponent';\r\nimport { GivingAmountState, GivingSelectState } from '../recoil/Giving';\r\n\r\nconst GivingPage: React.FC = () => {\r\n    const sliderRef = useRef<Slider>(null);\r\n    const history = useHistory();\r\n    const resetSelect = useResetRecoilState(GivingSelectState);\r\n    const resetAmount = useResetRecoilState(GivingAmountState);\r\n\r\n    const onNextMove = (nextMove: number) => {\r\n        if (nextMove < 0) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.goBack();\r\n            return;\r\n        }\r\n\r\n        if (nextMove > 3) {\r\n            resetSelect();\r\n            resetAmount();\r\n            history.replace('/');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(nextMove);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                <GivingComponent index={0} onMoveClick={onNextMove} />\r\n                <GivingSelectComponent index={1} onMoveClick={onNextMove} />\r\n                <GivingAmountComponent index={2} onMoveClick={onNextMove} />\r\n                <GivingFinishComponent index={3} onMoveClick={onNextMove} />\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GivingPage;\r\n","import { atom } from 'recoil';\r\nimport {\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from '../component/Benefit/DataModel';\r\n\r\nexport const BenefitStateCompany = atom<BenefitCompanyRes>({\r\n    key: 'BenefitStateCompany',\r\n    default: {\r\n        isLoaded: false,\r\n        data: [],\r\n    },\r\n});\r\n\r\nexport const BenefitFavoriteState = atom<BenefitFavoriteCompany>({\r\n    key: 'BenefitFavoriteState',\r\n    default: {},\r\n});\r\n","import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nexport interface HeaderDeafaultProps {\r\n    icon: JSX.Element;\r\n    title: string;\r\n}\r\n\r\ntype HeaderDefaultType = PropsWithChildren<HeaderDeafaultProps>;\r\n\r\nconst HeaderDeafault: React.FC<HeaderDefaultType> = (\r\n    props: HeaderDefaultType\r\n) => {\r\n    return (\r\n        <AppBar position=\"sticky\" style={{ backgroundColor: '#fafbfc' }}>\r\n            <Toolbar>\r\n                {props.icon}\r\n                <Box ml=\"0.5rem\">\r\n                    <Typography\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1.3rem',\r\n                        }}\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                </Box>\r\n            </Toolbar>\r\n            {props.children}\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderDeafault;\r\n","import { IconButton, makeStyles, Paper } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginRight: '5%',\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    img: {\r\n        width: '1rem',\r\n        height: '1rem',\r\n        margin: '0.5rem',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitInputTextProps {\r\n    inputText: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nconst HomeBenefitInputText: React.FC<HomeBenefitInputTextProps> = (\r\n    props: HomeBenefitInputTextProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <img className={classes.img} src=\"/images/ICON_Search.png\" />\r\n            <InputBase\r\n                className={classes.input}\r\n                value={props.inputText}\r\n                onChange={(event) => {\r\n                    props.onChange(event.target.value);\r\n                }}\r\n                placeholder=\"기업이나 제품들을 검색하세요.\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n            />\r\n            {props.inputText.length > 0 && (\r\n                <IconButton\r\n                    onClick={() => {\r\n                        props.onChange('');\r\n                    }}\r\n                >\r\n                    <img\r\n                        className={classes.img}\r\n                        src=\"/images/ICON_Close_Button.png\"\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitInputText;\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport React from 'react';\r\nimport { BenefitCompany } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    commonHeart: {\r\n        fontSize: '0.8rem !important',\r\n        color: 'gray',\r\n    },\r\n    selectedHeart: {\r\n        color: 'red !important',\r\n    },\r\n}));\r\n\r\nconst HomBenefitCompany: React.FC<BenefitCompany> = (props: BenefitCompany) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container wrap=\"nowrap\">\r\n                    <Grid container>\r\n                        <Typography className=\"txt_b txt_20\">\r\n                            {props.companyName}\r\n                        </Typography>\r\n                        <Typography className=\"txt_14\">\r\n                            {props.description}\r\n                        </Typography>\r\n                        <Grid>\r\n                            {props.userLike ? (\r\n                                <FavoriteIcon\r\n                                    className={`${classes.commonHeart} ${classes.selectedHeart}`}\r\n                                />\r\n                            ) : (\r\n                                <FavoriteBorderIcon\r\n                                    className={classes.commonHeart}\r\n                                />\r\n                            )}\r\n                            <Typography\r\n                                style={{\r\n                                    marginLeft: '0.4rem',\r\n                                    display: 'inline-block',\r\n                                }}\r\n                                className=\"txt_14 txt_gray1\"\r\n                            >\r\n                                {props.totalLike}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <img\r\n                            src={props.thumbNailPath.replace(/.jpg/gi, '.png')}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HomBenefitCompany;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { getCategoryNameFromId } from '../Common/util';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSearchListProps {\r\n    searchText: string;\r\n}\r\n\r\nconst HomeBenefitSearchList: React.FC<HomeBenefitSearchListProps> = ({\r\n    searchText,\r\n}: HomeBenefitSearchListProps) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            const categoryName = getCategoryNameFromId(eachData.categoryId);\r\n            console.log(\r\n                `Current Category Name ${categoryName} ${eachData.companyName} ${searchText}`\r\n            );\r\n            return (\r\n                categoryName.includes(searchText) ||\r\n                eachData.companyName.includes(searchText)\r\n            );\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [searchText]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSearchList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { BenefitCompany } from './DataModel';\r\nimport HomBenefitCompany from './HomBenefitCompany';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        '&:first-child': {\r\n            marginTop: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitListProps {\r\n    categoryId: number;\r\n}\r\n\r\nconst HomeBenefitList: React.FC<HomeBenefitListProps> = (\r\n    props: HomeBenefitListProps\r\n) => {\r\n    const classes = useStyles();\r\n    const benefitCompany = useRecoilValue(BenefitStateCompany);\r\n    const benefitFavoriteCompany = useRecoilValue(BenefitFavoriteState);\r\n    const [renderValue, setRenderValue] = useState<\r\n        Omit<BenefitCompany, 'userLike'>[]\r\n    >();\r\n\r\n    useEffect(() => {\r\n        const filterData = benefitCompany.data.filter((eachData) => {\r\n            return eachData.categoryId === props.categoryId;\r\n        });\r\n        setRenderValue(filterData);\r\n    }, [benefitCompany.data]);\r\n\r\n    return (\r\n        <>\r\n            {renderValue?.map((eachData) => {\r\n                return (\r\n                    <Box key={eachData.companyName} className={classes.root}>\r\n                        <HomBenefitCompany\r\n                            companyName={eachData.companyName}\r\n                            categoryId={eachData.categoryId}\r\n                            description={eachData.description}\r\n                            thumbNailPath={eachData.thumbNailPath}\r\n                            totalLike={eachData.totalLike}\r\n                            userLike={\r\n                                !!benefitFavoriteCompany[eachData.companyName]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitList;\r\n","import Box from '@material-ui/core/Box';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport { commonSlickSettings } from '../Common';\r\nimport HomeBenefitList from './HomeBenefitList';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: 'rgb(250, 251, 252)',\r\n    },\r\n}));\r\n\r\nexport interface HomeBenefitSliderProps {\r\n    pageIndex: number;\r\n}\r\n\r\nconst HomeBenefitSlider: React.FC<HomeBenefitSliderProps> = (\r\n    props: HomeBenefitSliderProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        sliderRef.current && sliderRef.current.slickGoTo(props.pageIndex);\r\n    }, [props.pageIndex]);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n    const override = commonSlickSettings;\r\n    override.speed = 100;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider {...override} ref={sliderRef}>\r\n                {CategoryStandInfo.map((eachData, index) => {\r\n                    return (\r\n                        <TabPanel\r\n                            key={props.pageIndex}\r\n                            value={props.pageIndex}\r\n                            index={index}\r\n                        >\r\n                            <HomeBenefitList categoryId={eachData.id} />\r\n                        </TabPanel>\r\n                    );\r\n                })}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitSlider;\r\n","import {\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    defaultType: {\r\n        fontFamily: '\"Noto Sans KR\", sans-serif',\r\n    },\r\n    selectedType: {\r\n        color: '#62c3eb',\r\n    },\r\n}));\r\n\r\nexport enum DISPLAY_TYPE {\r\n    HOME,\r\n    BENEFIT,\r\n    TOGETHER,\r\n    SETTING,\r\n}\r\n\r\ninterface BottomBarNavProps {\r\n    current: DISPLAY_TYPE;\r\n    onChange: (clickType: DISPLAY_TYPE) => void;\r\n}\r\n\r\nconst BottomBarNav: React.FC<BottomBarNavProps> = (\r\n    props: BottomBarNavProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (\r\n        event: React.ChangeEvent<any>,\r\n        newValue: DISPLAY_TYPE\r\n    ) => {\r\n        props.onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={props.current}\r\n            onChange={handleChange}\r\n            showLabels={true}\r\n        >\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"홈\"\r\n                value={DISPLAY_TYPE.HOME}\r\n                icon={<HomeIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"혜택찾기\"\r\n                value={DISPLAY_TYPE.BENEFIT}\r\n                icon={<StorefrontIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"투게더\"\r\n                value={DISPLAY_TYPE.TOGETHER}\r\n                icon={<PeopleIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                classes={{\r\n                    selected: classes.selectedType,\r\n                    label: classes.defaultType,\r\n                }}\r\n                label=\"My\"\r\n                value={DISPLAY_TYPE.SETTING}\r\n                icon={<SettingsIcon />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default BottomBarNav;\r\n","import { Box, Tab, Tabs } from '@material-ui/core';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    BenefitFavoriteState,\r\n    BenefitStateCompany,\r\n} from '../../recoil/Benefit';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { CategoryStandInfo } from '../Category/DataModel';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport {\r\n    BenefitCompany,\r\n    BenefitCompanyRes,\r\n    BenefitFavoriteCompany,\r\n} from './DataModel';\r\nimport HomeBenefitInputText from './HomeBenefitInputText';\r\nimport HomeBenefitSearchList from './HomeBenefitSearchList';\r\nimport HomeBenefitSlider from './HomeBenefitSlider';\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst HomeBenefitComponent: React.FC = () => {\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n\r\n    const [searchText, setSearchText] = useState<string>('');\r\n    const [benefitCompany, setBenefitCompany] = useRecoilState(\r\n        BenefitStateCompany\r\n    );\r\n    const setFavoriteState = useSetRecoilState(BenefitFavoriteState);\r\n\r\n    useEffect(() => {\r\n        if (benefitCompany.isLoaded) {\r\n            return;\r\n        }\r\n        http.get(`/api/${encodeURI(userInfo.nickname)}/company`).then((res) => {\r\n            const isertArr: BenefitCompanyRes = {\r\n                isLoaded: true,\r\n                data: [],\r\n            };\r\n            const benefitData: BenefitFavoriteCompany = {};\r\n            res.data.data.forEach((eachData: BenefitCompany) => {\r\n                isertArr.data.push({\r\n                    categoryId: eachData.categoryId,\r\n                    companyName: eachData.companyName,\r\n                    description: eachData.description,\r\n                    thumbNailPath: eachData.thumbNailPath.replace(\r\n                        /\\/\\//gi,\r\n                        '/'\r\n                    ),\r\n                    totalLike: eachData.totalLike,\r\n                });\r\n                benefitData[eachData.companyName] = eachData.userLike;\r\n            });\r\n            setBenefitCompany(isertArr);\r\n            setFavoriteState(benefitData);\r\n        });\r\n    }, []);\r\n\r\n    const onChange = (value: string) => {\r\n        setSearchText(value);\r\n    };\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n\r\n    const tabChange = (event: ChangeEvent<any>, nextValue: number) => {\r\n        setPage(nextValue);\r\n    };\r\n\r\n    const isSearchMode = searchText.length !== 0;\r\n\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<StorefrontIcon />} title=\"혜택 찾기\">\r\n                <HomeBenefitInputText\r\n                    inputText={searchText}\r\n                    onChange={onChange}\r\n                />\r\n                {!isSearchMode && (\r\n                    <Tabs\r\n                        value={page}\r\n                        onChange={tabChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {CategoryStandInfo.map((eachData, index) => {\r\n                            return (\r\n                                <Tab\r\n                                    key={index}\r\n                                    label={eachData.name}\r\n                                    {...a11yProps(index)}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Tabs>\r\n                )}\r\n            </HeaderDeafault>\r\n            {isSearchMode ? (\r\n                <Box p={3}>\r\n                    <HomeBenefitSearchList searchText={searchText} />\r\n                </Box>\r\n            ) : (\r\n                <HomeBenefitSlider pageIndex={page} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeBenefitComponent;\r\n","export enum SIGNUP_TYPE {\r\n    PROFILE,\r\n    ACCOUNT,\r\n    ADD_CATEGORY,\r\n    BILL_INFO,\r\n    PASSWORD,\r\n}\r\n\r\nexport interface SignupAccountInterface {\r\n    ACCT_KND: string;\r\n    ACNO: string;\r\n    ACT_STCD: string;\r\n    ADNT_RGS_YN: string;\r\n    CUCD: string;\r\n    FAXC_BAL: string;\r\n    NEW_DT: string;\r\n    PBOK_BAL: string;\r\n    PRD_NM: string;\r\n    PSKL_ACT_YN: string;\r\n    XPR_DT: string;\r\n}\r\n\r\nexport interface SignupProfileInterface {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface SignupComponentProps {\r\n    checkCurrent?: boolean;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\nexport interface SignupProfileInfo {\r\n    realName: string;\r\n    nickName: string;\r\n    cellNumber: string;\r\n}\r\n\r\nexport const rendingData: Array<SignupProfileInterface> = [\r\n    {\r\n        title: '이름을 알려주세요.',\r\n        description: '이름',\r\n    },\r\n    {\r\n        title: '닉네임을 정해주세요.',\r\n        description: '닉네임',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n} from '../../recoil/Session';\r\nimport { getCategoryImgPath, getCategoryNameFromId } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\ninterface CategoryIconProps {\r\n    id: number;\r\n}\r\n\r\nconst CategoryIcon: React.FC<CategoryIconProps> = (\r\n    props: CategoryIconProps\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <img\r\n                src={getCategoryImgPath(props.id)}\r\n                style={{ width: '3.5rem', height: '3.5rem', margin: 'auto' }}\r\n            />\r\n            <Typography style={{ textAlign: 'center' }}>\r\n                {getCategoryNameFromId(props.id)}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const [category, setCategory] = useRecoilState(CurrentUserCategoryState);\r\n\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    };\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/members/${encodeURI(userInfo.nickname)}/category`).then(\r\n            (res) => {\r\n                const resCategory = res.data.data.map(\r\n                    (eachData: any) => eachData.categoryId\r\n                );\r\n                setCategory(resCategory);\r\n            }\r\n        );\r\n    }, [userInfo]);\r\n\r\n    if (category.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>내가 선택한 혜택</Typography>} />\r\n            <CardContent>\r\n                <Box display=\"flex\">\r\n                    {category.map((eachCategory: number) => {\r\n                        return (\r\n                            <Box key={eachCategory} margin=\"auto\">\r\n                                <CategoryIcon id={eachCategory} />\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Typography onClick={onClick} variant=\"caption\">\r\n                    혜택을 바꾸고 싶나요?\r\n                </Typography>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import { Box, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getCategoryNameFromId, getNumberString } from '../Common/util';\r\nimport { TransactionSet } from './DataModel';\r\n\r\nexport interface BenefitListProps {\r\n    data: TransactionSet[];\r\n}\r\n\r\nconst extractDate = (date: string): string => {\r\n    const c = new Date(date);\r\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n    return `${c.getMonth()}월 ${c.getDate()} (${week[c.getDay()]})`;\r\n};\r\n\r\nconst BenefitList: React.FC<BenefitListProps> = ({\r\n    data,\r\n}: BenefitListProps) => {\r\n    return (\r\n        <>\r\n            {data.map((eachData, index, arr) => {\r\n                return (\r\n                    <Box key={index} mt={index === 0 ? '0px' : '5px'}>\r\n                        <Typography className={`txt_14`}>\r\n                            {extractDate(eachData.date)}\r\n                        </Typography>\r\n                        <Grid container style={{ marginTop: '5px' }}>\r\n                            <Grid>\r\n                                <Typography className={`txt_16`}>\r\n                                    {eachData.companyName}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Box flexGrow=\"1\" />\r\n\r\n                            <Grid style={{ textAlign: 'right' }}>\r\n                                <Typography className={`txt_16`}>\r\n                                    {getNumberString(eachData.totalBuyPrice)}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={`txt_14 txt_primaryBlue2`}\r\n                                >{`${getCategoryNameFromId(\r\n                                    eachData.categoryId\r\n                                )} 적립 ${getNumberString(\r\n                                    eachData.point\r\n                                )}`}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {arr.length - 1 !== index && (\r\n                            <div className=\"line bg_gray3 mg_t20\" />\r\n                        )}\r\n                    </Box>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BenefitList;\r\n","export interface TransactionSet {\r\n    companyName: string;\r\n    categoryId: number;\r\n    totalBuyPrice: number;\r\n    point: number;\r\n    date: string;\r\n}\r\n\r\nexport const DummyTransactionData: TransactionSet[] = [\r\n    {\r\n        date: '2021-04-08',\r\n        companyName: '연화바루',\r\n        totalBuyPrice: -32000,\r\n        categoryId: 101,\r\n        point: 1600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -12000,\r\n        categoryId: 102,\r\n        point: 600,\r\n    },\r\n    {\r\n        date: '2021-04-07',\r\n        companyName: '테스트1',\r\n        totalBuyPrice: -37000,\r\n        categoryId: 104,\r\n        point: 3600,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '테스트2',\r\n        totalBuyPrice: -1200,\r\n        categoryId: 101,\r\n        point: 60,\r\n    },\r\n    {\r\n        date: '2021-04-06',\r\n        companyName: '지구샵',\r\n        totalBuyPrice: -1000,\r\n        categoryId: 101,\r\n        point: 10,\r\n    },\r\n];\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserCategoryState,\r\n    CurrentUserState,\r\n    CurrentUserTransactionState,\r\n} from '../../recoil/Session';\r\nimport BenefitList from './BenefitList';\r\nimport { DummyTransactionData, TransactionSet } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst DISPLAY_COUNT = 3;\r\n\r\nconst HCPoint: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userInfo = useRecoilValue(CurrentUserState);\r\n    const userCategory = useRecoilValue(CurrentUserCategoryState);\r\n    const [transaction, setTransaction] = useRecoilState(\r\n        CurrentUserTransactionState\r\n    );\r\n    const [displaySet, setDisplaySet] = useState<TransactionSet[]>([]);\r\n\r\n    useEffect(() => {\r\n        http.get(`/api/trading/benefits/${encodeURI(userInfo.nickname)}`).then(\r\n            (res) => {\r\n                let data: TransactionSet[] = [];\r\n                if (res.data.data.length === 0) {\r\n                    data = DummyTransactionData;\r\n                } else {\r\n                    data = res.data.data;\r\n                }\r\n                data = data.filter((eachData) => {\r\n                    return userCategory.includes(eachData.categoryId);\r\n                });\r\n                setDisplaySet(data.slice(0, DISPLAY_COUNT));\r\n                setTransaction(data);\r\n            }\r\n        );\r\n    }, [userCategory]);\r\n\r\n    if (displaySet.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Card style={{ borderRadius: '0.5rem' }}>\r\n            <CardHeader title={<Typography>혜택 적립 내역</Typography>} />\r\n            <CardContent>\r\n                <BenefitList data={displaySet} />\r\n            </CardContent>\r\n            {transaction.length > DISPLAY_COUNT && (\r\n                <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                    <Button\r\n                        className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    >\r\n                        이용 내역 더 보기\r\n                    </Button>\r\n                </CardActions>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCPoint;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { CurrentUserState } from '../../recoil/Session';\r\nimport { getNumberString } from '../Common/util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dfColor: {\r\n        color: 'white',\r\n    },\r\n    buttonLayout: {\r\n        backgroundColor: '#3BAAD8',\r\n        borderRadius: '0.5rem',\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n    },\r\n    moneyFont: {\r\n        fontSize: '26px',\r\n        fontFamily: '\"Recursive\", sans-serif',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    cardActionLayout: {\r\n        padding: '16px',\r\n    },\r\n}));\r\n\r\nconst HCStatus: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useRecoilState(CurrentUserState);\r\n    //const [account, setAccount] = useRecoilState(CurrentAccountState);\r\n\r\n    useEffect(() => {\r\n        if (userInfo.nickname) {\r\n            http.get(`/api/members/${encodeURI(userInfo.nickname)}`).then(\r\n                (res) => {\r\n                    setUserInfo({\r\n                        ...userInfo,\r\n                        accountMoney: res.data.data.accountMoney,\r\n                        point: res.data.data.point,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const onGivingClick = () => {\r\n        history.push('/giving');\r\n    };\r\n\r\n    return (\r\n        <Card style={{ backgroundColor: '#62C3EB', borderRadius: '0.5rem' }}>\r\n            <CardContent>\r\n                <Typography className={classes.dfColor}>\r\n                    {`${userInfo.name}님의`}\r\n                    <br />\r\n                    혜택통 현황입니다.\r\n                </Typography>\r\n                <Typography\r\n                    className={`${classes.inline} ${classes.moneyFont} ${classes.dfColor}`}\r\n                >\r\n                    {getNumberString(userInfo.point)}\r\n                </Typography>\r\n                <Typography className={`${classes.inline} ${classes.dfColor}`}>\r\n                    원\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions classes={{ root: classes.cardActionLayout }}>\r\n                <Button\r\n                    disabled\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                >\r\n                    내 계좌로 인출\r\n                </Button>\r\n                <Button\r\n                    className={`${classes.buttonLayout} ${classes.dfColor}`}\r\n                    onClick={onGivingClick}\r\n                >\r\n                    기부하기\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HCStatus;\r\n","import { Box } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport React from 'react';\r\nimport HeaderDeafault from '../Common/HeaderDefault';\r\nimport HCBenefit from './HCBenefit';\r\nimport HCPoint from './HCPoint';\r\nimport HCStatus from './HCStatus';\r\n\r\nconst HomeComponent: React.FC = () => {\r\n    return (\r\n        <>\r\n            <HeaderDeafault icon={<HomeIcon />} title=\"홈\" />\r\n            <Box mx=\"1rem\" overflow=\"hiddne\">\r\n                <Box mt=\"1rem\">\r\n                    <HCStatus />\r\n                </Box>\r\n                <Box mt=\"1rem\">\r\n                    <HCBenefit />\r\n                </Box>\r\n                <Box my=\"1rem\">\r\n                    <HCPoint />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import React from 'react';\r\n\r\nconst SettingComponent: React.FC = () => {\r\n    return <>this is setting</>;\r\n};\r\n\r\nexport default SettingComponent;\r\n","import React from 'react';\r\n\r\nconst TogetherComponent: React.FC = () => {\r\n    return <>this is togheter</>;\r\n};\r\n\r\nexport default TogetherComponent;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport HomeBenefitComponent from '../component/Benefit/HomeBenefitComponent';\r\nimport BottomBarNav, { DISPLAY_TYPE } from '../component/Common/BottomBar';\r\nimport HomeComponent from '../component/Home/HomeComponent';\r\nimport SettingComponent from '../component/Setting/SettingComponent';\r\nimport TogetherComponent from '../component/Together/TogetherComponent';\r\n\r\nconst homeRendering = (type: DISPLAY_TYPE) => {\r\n    switch (type) {\r\n        case DISPLAY_TYPE.HOME:\r\n            return <HomeComponent />;\r\n        case DISPLAY_TYPE.BENEFIT:\r\n            return <HomeBenefitComponent />;\r\n        case DISPLAY_TYPE.TOGETHER:\r\n            return <TogetherComponent />;\r\n        case DISPLAY_TYPE.SETTING:\r\n            return <SettingComponent />;\r\n        default:\r\n            return <></>;\r\n    }\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n    const [renderType, setCurrentRenderType] = useState<DISPLAY_TYPE>(\r\n        DISPLAY_TYPE.HOME\r\n    );\r\n\r\n    const onChange = (type: DISPLAY_TYPE) => {\r\n        setCurrentRenderType(type);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <Box className=\"glow_body\" overflow=\"hidden\">\r\n                {homeRendering(renderType)}\r\n            </Box>\r\n            <BottomBarNav current={renderType} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface RenderComponentInterface {\r\n    title: { first: string; second: string };\r\n    description: string[];\r\n    highLight: string;\r\n    imgPath: string;\r\n}\r\n\r\nexport const rendingData: Array<RenderComponentInterface> = [\r\n    {\r\n        title: { first: '내맘대로', second: '혜택고르기!' },\r\n        description: ['정해진 틀에 맞춰서', '혜택받기는 싫어!'],\r\n        highLight: '내가 관심있는 카테고리 대로 혜택을!',\r\n        imgPath: '/images/rending_1.png',\r\n    },\r\n    {\r\n        title: { first: '나는 소비하면서', second: '사회까지 생각한다!' },\r\n        description: ['환경, 유기견, 소상공인', '저소득층, 동물보호...'],\r\n        highLight: '작은 소비 하나하나 모여 사회를 개선!',\r\n        imgPath: '/images/rending_2.png',\r\n    },\r\n    {\r\n        title: { first: '내가 이 골목 혜택왕!', second: '친구들과 혜택대결' },\r\n        description: ['누가 누가', '더 많이 혜택을 모았나?'],\r\n        highLight: '여기 모여라! 친구들끼리 혜택 대결!',\r\n        imgPath: '/images/rending_3.png',\r\n    },\r\n    {\r\n        title: { first: '혜택을 모아모아', second: '기부까지?!' },\r\n        description: [\r\n            '혜택받은 금액을 인출하거나',\r\n            '원하는 곳에 기부할 수 있지!',\r\n        ],\r\n        highLight: \"우리은행에서 '모인 기부액의 2배를' 기부!\",\r\n        imgPath: '/images/rending_4.png',\r\n    },\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { RenderComponentInterface } from './DataModel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    buttonOverride: {\r\n        position: 'absolute !important' as 'absolute',\r\n    },\r\n}));\r\n\r\ninterface RenderingPageProps {\r\n    data: RenderComponentInterface;\r\n    onMoveButtonClick: (move: number) => void;\r\n}\r\n\r\ntype PropsType = RenderingPageProps & { isFirst: boolean };\r\n\r\nconst RendingComponent: React.FC<PropsType> = ({\r\n    data,\r\n    ...props\r\n}: PropsType) => {\r\n    const classes = useStyles();\r\n\r\n    const onNextClick = () => {\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        props.onMoveButtonClick(-1);\r\n    };\r\n\r\n    return (\r\n        <Box style={{ position: 'relative' }} width=\"100%\" height=\"100%\">\r\n            <div className=\"container mg_t10\" style={{ overflowX: 'visible' }}>\r\n                <IconButton\r\n                    className={`back_div ${props.isFirst && 'hide'}`}\r\n                    onClick={onBackClick}\r\n                >\r\n                    <KeyboardArrowLeft />\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                <p className=\"rd_posi_1 txt_30\">{data.title.first}</p>\r\n                <p className=\"rd_posi_2 txt_30 txt_b\">{data.title.second}</p>\r\n\r\n                <p className=\"rd_posi_3 txt_18\">\r\n                    {data.description[0]}\r\n                    <br />\r\n                    {data.description[1]}\r\n                </p>\r\n                <div\r\n                    className=\"txt_back_highlight\"\r\n                    style={{ width: '276px' }}\r\n                />\r\n                <p className=\"rd_posi_4 txt_18 txt_b\">{data.highLight}</p>\r\n            </div>\r\n            <div className=\"pd_b30 rd_posi_img\" style={{ left: '5%' }}>\r\n                <p className=\"txt_center\">\r\n                    <img className=\"img_rending\" src={data.imgPath} />\r\n                </p>\r\n            </div>\r\n            <Button\r\n                className={`btn_bottom bg_primaryblue ${classes.buttonOverride}`}\r\n                onClick={onNextClick}\r\n            >\r\n                <Typography className={`p_btn_bottom txt_wh txt_b`}>\r\n                    다음\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RendingComponent;\r\n","import { Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    imgContainer: {\r\n        width: '100px',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        width: '100%',\r\n    },\r\n    bodyReplace: {\r\n        zIndex: -1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst SigninPage: React.FC = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const onClickSignup = () => {\r\n        history.push('/signup');\r\n    };\r\n\r\n    const postMessage = (event: any) => {\r\n        event.preventDefault();\r\n        console.log(`Post Message Called`);\r\n        if (window && window.parent) {\r\n            console.log(`Post Send`);\r\n            window.parent.postMessage('child;;;requestPhoneNumber', '*');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={postMessage} style={{ display: 'absolute' }}>\r\n                IFrame Message Test\r\n            </Button>\r\n            <div className={`bg_primaryblue ${classes.bodyReplace}`} />\r\n            <div className=\"container\">\r\n                <div className=\"div_rd_txt pd_t60\">\r\n                    <p className=\"txt_center\">\r\n                        <img\r\n                            style={{ width: '100px' }}\r\n                            className={`pd_t130 ${classes.imgContainer}`}\r\n                            src=\"images/Logo.png\"\r\n                        />\r\n                    </p>\r\n                    <p className=\"txt_24 txt_wh txt_center\">환영합니다!</p>\r\n                </div>\r\n\r\n                <div className=\"login_btn\">\r\n                    <Button\r\n                        onClick={onClickSignup}\r\n                        className={classes.button}\r\n                        style={{ backgroundColor: 'white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_primaryBlue txt_center txt_b\">\r\n                            혜택통 첫달 무료 체험하기\r\n                        </p>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={`mg_t10 ${classes.button}`}\r\n                        style={{ border: '1px solid white', height: '55px' }}\r\n                    >\r\n                        <p className=\"txt_wh txt_center\">기존 사용자 로그인</p>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SigninPage;\r\n","import React, { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData as MainRendingData,\r\n    rendingData,\r\n} from '../component/Rending/DataModel';\r\nimport RendingPage from '../component/Rending/RendingComponent';\r\nimport { IsSplashSkip } from '../recoil/Session';\r\nimport SigninPage from './SigninPage';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [isSplashSkip, setIsSplashSkip] = useRecoilState(IsSplashSkip);\r\n\r\n    const sliderRef = useRef<Slider>(null);\r\n\r\n    const onMoveButtonClick = (index: number, move: number) => {\r\n        if (index + move >= MainRendingData.length) {\r\n            setIsSplashSkip(true);\r\n        } else if (index + move === -1) {\r\n            return;\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSplashSkip ? (\r\n                <SigninPage />\r\n            ) : (\r\n                <Slider {...commonSlickSettings} ref={sliderRef}>\r\n                    {rendingData.map((eachData, index) => {\r\n                        return (\r\n                            <RendingPage\r\n                                key={eachData.title.first}\r\n                                data={eachData}\r\n                                isFirst={index === 0}\r\n                                onMoveButtonClick={(move) =>\r\n                                    onMoveButtonClick(index, move)\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n                </Slider>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import {\r\n    Box,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpAccInfoState, SignUpProfileState } from '../../recoil/Session';\r\nimport { getMoneyStr2Number, getNumberString } from '../Common/util';\r\nimport { SignupAccountInterface, SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\nconst useStyles = makeStyles({\r\n    labelLayout: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        paddingTop: 0,\r\n        marginLeft: '5px',\r\n    },\r\n    icon: {\r\n        color: '#62C3EB',\r\n        fontSize: '1.5rem',\r\n    },\r\n});\r\n\r\nconst AccountComponent: React.FC<SignupAccountInterface> = (\r\n    props: SignupAccountInterface\r\n) => {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <Grid>\r\n                <Typography>계좌번호: {props.ACNO}</Typography>\r\n            </Grid>\r\n            <Grid>\r\n                <Typography>\r\n                    잔액: {getNumberString(getMoneyStr2Number(props.PBOK_BAL))}\r\n                </Typography>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SignupAccountComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const setAccount = useSetRecoilState(SignUpAccInfoState);\r\n    const signupInfo = useRecoilValue(SignUpProfileState);\r\n\r\n    const [wooriAccountList, setWooriAccountList] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    const [selectAccount, setSelectAccount] = useState<\r\n        SignupAccountInterface[]\r\n    >([]);\r\n\r\n    console.log('Account Called');\r\n    console.log(props.checkCurrent);\r\n    useEffect(() => {\r\n        if (props.checkCurrent) {\r\n            let regex = /(\\d{3})(\\d{3})(\\d{4})/;\r\n            if (signupInfo.cellNumber.length === 11) {\r\n                regex = /(\\d{3})(\\d{4})(\\d{4})/;\r\n            }\r\n            const cellFormat = signupInfo.cellNumber.replace(regex, '$1-$2-$3');\r\n            http.get(\r\n                `/api/wooribank/userPhoneNumber/${encodeURI(\r\n                    cellFormat\r\n                )}/accounts`\r\n            ).then((res) => {\r\n                const data: SignupAccountInterface[] = (res.data.dataBody\r\n                    .GRID as SignupAccountInterface[]).filter((eachData) => {\r\n                    return eachData.ACCT_KND.toUpperCase() === 'P';\r\n                });\r\n                setWooriAccountList(data);\r\n            });\r\n        }\r\n    }, [props.checkCurrent]);\r\n\r\n    const onChange = (\r\n        data: SignupAccountInterface,\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        if (event.currentTarget.checked) {\r\n            setSelectAccount([data]);\r\n            setAccount({\r\n                accountNumber: data.ACNO,\r\n                accountMoney: getMoneyStr2Number(data.PBOK_BAL),\r\n            });\r\n        } else {\r\n            setSelectAccount([]);\r\n        }\r\n    };\r\n\r\n    console.log(selectAccount);\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={selectAccount.length === 0}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20\">보유 중인 우리은행 계좌 1개를</p>\r\n                <p className=\"txt_20 txt_b\">선택해주세요.</p>\r\n\r\n                <p className=\"txt_14\" style={{ color: '#3BAAD8' }}>\r\n                    구독료가 매월 20일에 2,900원씩 해당 계좌에서 빠질\r\n                    예정입니다.\r\n                </p>\r\n                <br />\r\n\r\n                <p className=\"txt_14\" style={{ color: '#3BAAD8' }}>\r\n                    첫달 무료 이용 후 언제든 해지하실 수 있어요!\r\n                </p>\r\n\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    {wooriAccountList.map((eachData) => {\r\n                        return (\r\n                            <div\r\n                                key={eachData.ACNO}\r\n                                className=\"box_div mg_t20 bg_wh height_80\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    style={{ display: 'flex' }}\r\n                                    className=\"checkbox__label pd_l20\"\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checkedIcon={\r\n                                                <CheckCircleOutlineIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            icon={\r\n                                                <RadioButtonUncheckedIcon\r\n                                                    className={classes.icon}\r\n                                                />\r\n                                            }\r\n                                            color=\"primary\"\r\n                                            checked={\r\n                                                selectAccount.findIndex(\r\n                                                    (select) =>\r\n                                                        select.ACNO ===\r\n                                                        eachData.ACNO\r\n                                                ) >= 0\r\n                                            }\r\n                                            onChange={(event) =>\r\n                                                onChange(eachData, event)\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                    classes={{ root: classes.labelLayout }}\r\n                                    label={<AccountComponent {...eachData} />}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAccountComponent;\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Dialog,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport { makeNumberId } from '../Common/util';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface ACDialogProps {\r\n    open: boolean;\r\n    validNumber: string;\r\n    onClose: () => void;\r\n}\r\n\r\nconst ACDialog: React.FC<ACDialogProps> = (props: ACDialogProps) => {\r\n    const { onClose, open, validNumber } = props;\r\n\r\n    const handleOk = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleOk} open={open}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography className=\"txt_20 txt_b\">\r\n                            인증번호 확인\r\n                        </Typography>\r\n                    }\r\n                    subheader={\r\n                        <Typography className=\"txt_14\">\r\n                            인증번호 확인칸에 아래 번호를 입력하세요.\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        className=\"txt_20 txt_b\"\r\n                        style={{ textAlign: 'center' }}\r\n                    >\r\n                        {validNumber}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions\r\n                    style={{ justifyContent: 'flex-end', paddingTop: 0 }}\r\n                >\r\n                    <Button\r\n                        onClick={handleOk}\r\n                        disableRipple\r\n                        style={{ color: '#62C3EB' }}\r\n                    >\r\n                        확인\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst SignupCellphoneComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n\r\n    const [dialog, setDialog] = useState<boolean>(false);\r\n    const [complete, setComplete] = useState<boolean>(false);\r\n\r\n    const [inputValidStr, setInputValidStr] = useState<string>('');\r\n    const [validStr, setValidStr] = useState<string>('');\r\n\r\n    const completeClick = () => {\r\n        setComplete(true);\r\n        setDialog(true);\r\n    };\r\n\r\n    const onChangePhoneNumber = (data: string) => {\r\n        let onlyNums = data.replace(/[^0-9]/g, '');\r\n        if (onlyNums.length > 11) {\r\n            onlyNums = onlyNums.slice(0, 11);\r\n        }\r\n        setProfile({ ...profile, cellNumber: onlyNums });\r\n    };\r\n\r\n    const onCertButtonClick = () => {\r\n        setDialog(true);\r\n        setValidStr(makeNumberId(6));\r\n    };\r\n\r\n    const onVerifyButtonClick = () => {\r\n        if (inputValidStr === validStr) {\r\n            setComplete(true);\r\n            // props.onMoveButtonClick(1);\r\n        }\r\n    };\r\n\r\n    const certMode = validStr.length > 0;\r\n    const inValid =\r\n        profile.cellNumber.length < 10 || profile.cellNumber.length > 11;\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <ACDialog\r\n                validNumber={validStr}\r\n                open={dialog}\r\n                onClose={() => {\r\n                    setDialog(false);\r\n                }}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={!complete}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">휴대폰번호를 입력하세요</p>\r\n                <Box\r\n                    className=\"bg_wh box_div mg_t20\"\r\n                    px=\"16px\"\r\n                    pt=\"20px\"\r\n                    pb=\"16px\"\r\n                >\r\n                    <Grid container alignItems=\"center\">\r\n                        <TextField\r\n                            disabled={certMode || complete}\r\n                            error={inValid}\r\n                            helperText={\r\n                                inValid && '휴대전화 번호는 10~11 자리입니다'\r\n                            }\r\n                            value={profile.cellNumber}\r\n                            onChange={(event) => {\r\n                                onChangePhoneNumber(event.target.value);\r\n                            }}\r\n                            label={'휴대폰 번호'}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Box flexGrow={1} />\r\n                        <Button\r\n                            disabled={inValid || complete}\r\n                            className=\"btn_blueBorder\"\r\n                            style={{\r\n                                padding: 0,\r\n                            }}\r\n                            onClick={onCertButtonClick}\r\n                        >\r\n                            {certMode ? '재인증' : '입력'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                {certMode && (\r\n                    <>\r\n                        <p className=\"mg_t30 txt_14 txt_center\">\r\n                            팝업창에 떴던 인증번호를 아래에 입력해주세요\r\n                        </p>\r\n                        <Box\r\n                            className=\"box_div mg_t30 bg_wh\"\r\n                            px=\"16px\"\r\n                            pt=\"20px\"\r\n                            pb=\"16px\"\r\n                        >\r\n                            <Grid container alignItems=\"center\">\r\n                                <TextField\r\n                                    disabled={complete}\r\n                                    error={inputValidStr !== validStr}\r\n                                    value={inputValidStr}\r\n                                    onChange={(event) => {\r\n                                        setInputValidStr(event.target.value);\r\n                                    }}\r\n                                    label={'인증번호 확인'}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Box flexGrow={1} />\r\n                                <Button\r\n                                    disabled={complete}\r\n                                    className=\"btn_blueBorder\"\r\n                                    style={{\r\n                                        padding: 0,\r\n                                    }}\r\n                                    onClick={onVerifyButtonClick}\r\n                                >\r\n                                    완료\r\n                                </Button>\r\n                            </Grid>\r\n                        </Box>\r\n                    </>\r\n                )}\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupCellphoneComponent;\r\n\r\n//import { TextField } from '@material-ui/core';\r\n//import React, { useState } from 'react';\r\n//import { useRecoilState } from 'recoil';\r\n//import http from '../../http';\r\n//import { SignUpProfileState } from '../../recoil/Session';\r\n//import {\r\n//    SignupComponentProps,\r\n//    SignupProfileInfo,\r\n//    SignupProfileInterface,\r\n//} from './DataModel';\r\n//import SignupCommonComponent from './SignupCommon';\r\n//\r\n//type SignupProfileProps = SignupComponentProps & {\r\n//    data: SignupProfileInterface;\r\n//    index: number;\r\n//};\r\n//\r\n//const parseData = (data: SignupProfileInfo, index: number): string => {\r\n//    switch (index) {\r\n//        case 0:\r\n//            return data.realName;\r\n//        case 1:\r\n//            return data.nickName;\r\n//        case 2:\r\n//            return data.cellNumber;\r\n//    }\r\n//    return '';\r\n//};\r\n//\r\n//const SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n//    props: SignupProfileProps\r\n//) => {\r\n//    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n//    const value = parseData(profile, props.index);\r\n//    const buttonDisable = value === '';\r\n//    const [inValid, setInValid] = useState<boolean>(false);\r\n//    const [helperText, setHelperText] = useState<string>('');\r\n//\r\n//    const onChange = (index: number, data: string) => {\r\n//        switch (index) {\r\n//            case 0:\r\n//                setProfile({ ...profile, realName: data });\r\n//                break;\r\n//            case 1:\r\n//                if (data !== '') {\r\n//                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n//                        (res) => {\r\n//                            const alreadyExist: boolean = res.data.data;\r\n//                            if (alreadyExist !== inValid) {\r\n//                                setInValid(alreadyExist);\r\n//                                setHelperText('이미 존재하는 닉네임입니다.');\r\n//                            }\r\n//                        }\r\n//                    );\r\n//                }\r\n//                setProfile({ ...profile, nickName: data });\r\n//\r\n//                break;\r\n//            case 2:\r\n//                let onlyNums = data.replace(/[^0-9]/g, '');\r\n//                if (onlyNums.length > 11) {\r\n//                    onlyNums = onlyNums.slice(0, 11);\r\n//                }\r\n//                setProfile({ ...profile, cellNumber: onlyNums });\r\n//                if (onlyNums.length < 10 || onlyNums.length > 11) {\r\n//                    setInValid(true);\r\n//                    setHelperText('휴대전화 번호는 10~11 자리입니다');\r\n//                } else {\r\n//                    setInValid(false);\r\n//                }\r\n//                break;\r\n//        }\r\n//    };\r\n//\r\n//    return (\r\n//        <div className=\"bg_gray5\">\r\n//            <SignupCommonComponent\r\n//                buttonDisable={buttonDisable || inValid}\r\n//                onMoveButtonClick={props.onMoveButtonClick}\r\n//            >\r\n//                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n//                <div className=\"box_div mg_t20 bg_wh\">\r\n//                    <div className=\"pd_t16 mg_l16\"></div>\r\n//                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n//                        <TextField\r\n//                            error={inValid}\r\n//                            helperText={inValid && helperText}\r\n//                            value={value}\r\n//                            onChange={(event) => {\r\n//                                onChange(props.index, event.target.value);\r\n//                            }}\r\n//                            label={props.data.description}\r\n//                            variant=\"outlined\"\r\n//                        />\r\n//                    </div>\r\n//                </div>\r\n//            </SignupCommonComponent>\r\n//        </div>\r\n//    );\r\n//};\r\n//\r\n//export default SignupProfileComponent;\r\n//\r\n","import { Box, IconButton, InputAdornment, TextField } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport {\r\n    CurrentUserState,\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n    UserInfo,\r\n} from '../../recoil/Session';\r\nimport FingerDialog from '../Common/FingerDialog';\r\nimport { SignupComponentProps } from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ninterface SignupUserModel {\r\n    name: string;\r\n    nickname: string;\r\n    accountNumber: string;\r\n    accountMoney: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n}\r\n\r\ninterface SignupCategory {\r\n    benefitCategoryList: Array<{ userNickname: string; categoryId: number }>;\r\n}\r\n\r\nconst SignupPasswordComponent: React.FC<SignupComponentProps> = (\r\n    props: SignupComponentProps\r\n) => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const setUserState = useSetRecoilState<UserInfo>(CurrentUserState);\r\n\r\n    const signupProfile = useRecoilValue(SignUpProfileState);\r\n    const accountInfo = useRecoilValue(SignUpAccInfoState);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccNum = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n\r\n    const [fingerDialog, setFingerDialog] = useState<boolean>(false);\r\n\r\n    const signupFunction = async () => {\r\n        const signupData: SignupUserModel = {\r\n            name: signupProfile.realName,\r\n            nickname: signupProfile.nickName,\r\n            phoneNumber: signupProfile.cellNumber,\r\n            accountNumber: accountInfo.accountNumber,\r\n            password: password,\r\n            accountMoney: accountInfo.accountMoney + '',\r\n        };\r\n        const signupCategory: SignupCategory = {\r\n            benefitCategoryList: [\r\n                {\r\n                    categoryId: 101,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n                {\r\n                    categoryId: 102,\r\n                    userNickname: signupProfile.nickName,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const createRes = await http.post('/api/members', signupData); // user 먼저 만들어져야함\r\n        console.log(createRes);\r\n        const registRes = await http.post(\r\n            '/api/members/category',\r\n            signupCategory\r\n        ); // user 먼저 만들어져야함\r\n        console.log(registRes);\r\n        const userRes = await http.get(\r\n            `/api/members/${encodeURI(signupProfile.nickName)}`\r\n        ); // user 먼저 만들어져야함\r\n        console.log(userRes.data.data);\r\n        const currentUser: UserInfo = userRes.data.data;\r\n        setUserState({\r\n            accountMoney: currentUser.accountMoney,\r\n            point: currentUser.point,\r\n            accountNumber: currentUser.accountNumber,\r\n            name: currentUser.name,\r\n            nickname: currentUser.nickname,\r\n            phoneNumber: currentUser.phoneNumber,\r\n        });\r\n        resetProfile();\r\n        resetAccNum();\r\n        resetCategory();\r\n\r\n        setFingerDialog(false);\r\n        props.onMoveButtonClick(1);\r\n    };\r\n\r\n    const fingerClick = async () => {\r\n        await signupFunction();\r\n    };\r\n\r\n    const fingerClose = () => {\r\n        setFingerDialog(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <FingerDialog\r\n                fingerClick={fingerClick}\r\n                open={fingerDialog}\r\n                onClose={fingerClose}\r\n            />\r\n            <SignupCommonComponent\r\n                buttonDisable={password === ''}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n                onCustomizeNextClick={() => {\r\n                    setFingerDialog(true);\r\n                }}\r\n            >\r\n                <p className=\"txt_20 txt_b\">앱 사용을 위한</p>\r\n                <p className=\"txt_20\">비밀번호를 설정해 주세요.</p>\r\n\r\n                <Box mt=\"25px\">\r\n                    <TextField\r\n                        style={{ width: '80%', marginLeft: '10%' }}\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        InputProps={{\r\n                            // <-- This is where the toggle button is added.\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <Visibility\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        ) : (\r\n                                            <VisibilityOff\r\n                                                style={{ fontSize: '1.5rem' }}\r\n                                            />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPasswordComponent;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport http from '../../http';\r\nimport { SignUpProfileState } from '../../recoil/Session';\r\nimport {\r\n    SignupComponentProps,\r\n    SignupProfileInfo,\r\n    SignupProfileInterface,\r\n} from './DataModel';\r\nimport SignupCommonComponent from './SignupCommon';\r\n\r\ntype SignupProfileProps = SignupComponentProps & {\r\n    data: SignupProfileInterface;\r\n    index: number;\r\n};\r\n\r\nconst parseData = (data: SignupProfileInfo, index: number): string => {\r\n    switch (index) {\r\n        case 0:\r\n            return data.realName;\r\n        case 1:\r\n            return data.nickName;\r\n    }\r\n    return '';\r\n};\r\n\r\nconst SignupProfileComponent: React.FC<SignupProfileProps> = (\r\n    props: SignupProfileProps\r\n) => {\r\n    const [profile, setProfile] = useRecoilState(SignUpProfileState);\r\n    const value = parseData(profile, props.index);\r\n    const buttonDisable = value === '';\r\n    const [inValid, setInValid] = useState<boolean>(false);\r\n    const [helperText, setHelperText] = useState<string>('');\r\n\r\n    const onChange = (index: number, data: string) => {\r\n        switch (index) {\r\n            case 0:\r\n                setProfile({ ...profile, realName: data });\r\n                break;\r\n            case 1:\r\n                if (data !== '') {\r\n                    http.get(`/api/members/nicknameCheck/${data}`).then(\r\n                        (res) => {\r\n                            const alreadyExist: boolean = res.data.data;\r\n                            if (alreadyExist !== inValid) {\r\n                                setInValid(alreadyExist);\r\n                                setHelperText('이미 존재하는 닉네임입니다.');\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                setProfile({ ...profile, nickName: data });\r\n\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg_gray5\">\r\n            <SignupCommonComponent\r\n                buttonDisable={buttonDisable || inValid}\r\n                onMoveButtonClick={props.onMoveButtonClick}\r\n            >\r\n                <p className=\"txt_20 txt_b\">{props.data.title}</p>\r\n                <div className=\"box_div mg_t20 bg_wh\">\r\n                    <div className=\"pd_t16 mg_l16\"></div>\r\n                    <div className=\"pd_t4 mg_l16 pd_b16\">\r\n                        <TextField\r\n                            error={inValid}\r\n                            helperText={inValid && helperText}\r\n                            value={value}\r\n                            onChange={(event) => {\r\n                                onChange(props.index, event.target.value);\r\n                            }}\r\n                            label={props.data.description}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </SignupCommonComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupProfileComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Slider from 'react-slick';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { commonSlickSettings } from '../component/Common';\r\nimport {\r\n    rendingData,\r\n    SignupProfileInterface,\r\n} from '../component/Signup/DataModel';\r\nimport SignupAccountComponent from '../component/Signup/SignupAccountComponent';\r\nimport SignupCellphoneComponent from '../component/Signup/SignupCellphoneComponent';\r\nimport SignupPasswordComponent from '../component/Signup/SignupPasswordComponent';\r\nimport SignupProfileComponent from '../component/Signup/SignupProfileComponent';\r\nimport {\r\n    SignUpAccInfoState,\r\n    SignUpCategoryState,\r\n    SignUpProfileState,\r\n} from '../recoil/Session';\r\n\r\nconst SignupPage: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n    const resetProfile = useResetRecoilState(SignUpProfileState);\r\n    const resetAccInfo = useResetRecoilState(SignUpAccInfoState);\r\n    const resetCategory = useResetRecoilState(SignUpCategoryState);\r\n    const sliderRef = useRef<Slider>(null);\r\n    const [index, setIndex] = useState<number>(0);\r\n\r\n    const items: Array<JSX.Element> = [];\r\n    rendingData.forEach((eachData: SignupProfileInterface, index: number) => {\r\n        items.push(\r\n            <SignupProfileComponent\r\n                key={index}\r\n                index={index}\r\n                data={eachData}\r\n                onMoveButtonClick={(move: number) => onMove(index, move)}\r\n            />\r\n        );\r\n    });\r\n\r\n    const onMove = async (index: number, move: number) => {\r\n        if (index + move < 0) {\r\n            resetProfile();\r\n            resetAccInfo();\r\n            resetCategory();\r\n            history.replace('/mainpage');\r\n            setIndex(0);\r\n            return;\r\n        }\r\n        setIndex(index + move);\r\n        if (index + move > 4) {\r\n            // 맨마지막 페이지\r\n            // setIsAccSeq(true); real Signup\r\n            history.replace('/category');\r\n        } else {\r\n            sliderRef.current && sliderRef.current.slickGoTo(index + move);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Slider {...commonSlickSettings} ref={sliderRef}>\r\n            {items}\r\n            <SignupCellphoneComponent\r\n                key={2}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(2, move);\r\n                }}\r\n            />\r\n            <SignupAccountComponent\r\n                key={3}\r\n                checkCurrent={index === 3}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(3, move);\r\n                }}\r\n            />\r\n            <SignupPasswordComponent\r\n                key={4}\r\n                onMoveButtonClick={(move: number) => {\r\n                    onMove(4, move);\r\n                }}\r\n            />\r\n        </Slider>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport './basic.css';\r\nimport AuthRouteGuard from './component/AuthRouteGuard';\r\nimport './overide.css';\r\nimport CategoryPage from './page/CategoryPage';\r\nimport GivingPage from './page/GivingPage';\r\nimport HomePage from './page/HomePage';\r\nimport MainPage from './page/MainPage';\r\nimport SignupPage from './page/SignupPage';\r\n\r\nconst App: React.FC = () => {\r\n    useEffect(() => {\r\n        window.addEventListener(\r\n            'message',\r\n            (e) => {\r\n                console.log(e);\r\n                const res = e.data.split(';;;');\r\n                if (res[0] === 'parent') {\r\n                    alert(res[1]);\r\n                } else if (res[0] === 'child') {\r\n                    console.log('called by me');\r\n                }\r\n            },\r\n            false\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/mainpage\" component={MainPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n                <Route exact path=\"/category\" component={CategoryPage} />\r\n                <AuthRouteGuard exact path=\"/\" component={HomePage} />\r\n                <AuthRouteGuard exact path=\"/giving\" component={GivingPage} />\r\n\r\n                <Redirect from=\"*\" to=\"/mainpage\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    StylesProvider,\r\n    ThemeProvider,\r\n    unstable_createMuiStrictModeTheme,\r\n} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <RecoilRoot>\r\n            <ThemeProvider theme={theme}>\r\n                <StylesProvider injectFirst>\r\n                    <App />\r\n                </StylesProvider>\r\n            </ThemeProvider>\r\n        </RecoilRoot>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}